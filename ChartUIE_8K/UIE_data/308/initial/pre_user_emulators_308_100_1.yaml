1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Line chart

  * Heatmap

  * Scatter plot'
- 3179
- 3164
- 15
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n  \n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually.\n<end of the annotation\
  \ list>"
- 3014
- 2875
- 139
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/308.csv': {'summary': {'Column':\
  \ ['Country Name', 'Country Code', '1960', '1961', '1962', '1963', '1964', '1965',\
  \ '1966', '1967', '1968', '1969', '1970', '1971', '1972', '1973', '1974', '1975',\
  \ '1976', '1977', '1978', '1979', '1980', '1981', '1982', '1983', '1984', '1985',\
  \ '1986', '1987', '1988', '1989', '1990', '1991', '1992', '1993', '1994', '1995',\
  \ '1996', '1997', '1998', '1999', '2000', '2001', '2002', '2003', '2004', '2005',\
  \ '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015',\
  \ '2016', '2017', '2018', '2019', '2020', '2021', '2022'], 'Data Type': [dtype('O'),\
  \ dtype('O'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64')], 'Missing\
  \ Values': [0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
  \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
  \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'Unique Values': [266, 266, 260,\
  \ 260, 260, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261,\
  \ 261, 261, 261, 261, 261, 261, 261, 260, 261, 261, 261, 261, 261, 263, 263, 263,\
  \ 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263,\
  \ 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263]}, 'sample_data':\
  \ {'Country Name': ['Aruba', 'Africa Eastern and Southern', 'Afghanistan'], 'Country\
  \ Code': ['ABW', 'AFE', 'AFG'], '1960': [54608.0, 130692579.0, 8622466.0], '1961':\
  \ [55811.0, 134169237.0, 8790140.0], '1962': [56682.0, 137835590.0, 8969047.0],\
  \ '1963': [57475.0, 141630546.0, 9157465.0], '1964': [58178.0, 145605995.0, 9355514.0],\
  \ '1965': [58782.0, 149742351.0, 9565147.0], '1966': [59291.0, 153955516.0, 9783147.0],\
  \ '1967': [59522.0, 158313235.0, 10010030.0], '1968': [59471.0, 162875171.0, 10247780.0],\
  \ '1969': [59330.0, 167596160.0, 10494489.0], '1970': [59106.0, 172475766.0, 10752971.0],\
  \ '1971': [58816.0, 177503186.0, 11015857.0], '1972': [58855.0, 182599092.0, 11286753.0],\
  \ '1973': [59365.0, 187901657.0, 11575305.0], '1974': [60028.0, 193512956.0, 11869879.0],\
  \ '1975': [60715.0, 199284304.0, 12157386.0], '1976': [61193.0, 205202669.0, 12425267.0],\
  \ '1977': [61465.0, 211120911.0, 12687301.0], '1978': [61738.0, 217481420.0, 12938862.0],\
  \ '1979': [62006.0, 224315978.0, 12986369.0], '1980': [62267.0, 230967858.0, 12486631.0],\
  \ '1981': [62614.0, 237937461.0, 11155195.0], '1982': [63116.0, 245386717.0, 10088289.0],\
  \ '1983': [63683.0, 252779730.0, 9951449.0], '1984': [64174.0, 260209149.0, 10243686.0],\
  \ '1985': [64478.0, 267938123.0, 10512221.0], '1986': [64553.0, 276035920.0, 10448442.0],\
  \ '1987': [64450.0, 284490394.0, 10322758.0], '1988': [64332.0, 292795186.0, 10383460.0],\
  \ '1989': [64596.0, 301124880.0, 10673168.0], '1990': [65712.0, 309890664.0, 10694796.0],\
  \ '1991': [67864.0, 318544083.0, 10745167.0], '1992': [70192.0, 326933522.0, 12057433.0],\
  \ '1993': [72360.0, 335625136.0, 14003760.0], '1994': [74710.0, 344418362.0, 15455555.0],\
  \ '1995': [77050.0, 353466601.0, 16418912.0], '1996': [79417.0, 362985802.0, 17106595.0],\
  \ '1997': [81858.0, 372352230.0, 17788819.0], '1998': [84355.0, 381715600.0, 18493132.0],\
  \ '1999': [86867.0, 391486231.0, 19262847.0], '2000': [89101.0, 401600588.0, 19542982.0],\
  \ '2001': [90691.0, 412001885.0, 19688632.0], '2002': [91781.0, 422741118.0, 21000256.0],\
  \ '2003': [92701.0, 433807484.0, 22645130.0], '2004': [93540.0, 445281555.0, 23553551.0],\
  \ '2005': [94483.0, 457153837.0, 24411191.0], '2006': [95606.0, 469508516.0, 25442944.0],\
  \ '2007': [96787.0, 482406426.0, 25903301.0], '2008': [97996.0, 495748900.0, 26427199.0],\
  \ '2009': [99212.0, 509410477.0, 27385307.0], '2010': [100341.0, 523459657.0, 28189672.0],\
  \ '2011': [101288.0, 537792950.0, 29249157.0], '2012': [102112.0, 552530654.0, 30466479.0],\
  \ '2013': [102880.0, 567892149.0, 31541209.0], '2014': [103594.0, 583651101.0, 32716210.0],\
  \ '2015': [104257.0, 600008424.0, 33753499.0], '2016': [104874.0, 616377605.0, 34636207.0],\
  \ '2017': [105439.0, 632746570.0, 35643418.0], '2018': [105962.0, 649757148.0, 36686784.0],\
  \ '2019': [106442.0, 667242986.0, 37769499.0], '2020': [106585.0, 685112979.0, 38972230.0],\
  \ '2021': [106537.0, 702977106.0, 40099462.0], '2022': [106445.0, 720859132.0, 41128771.0]}}}\n\
  <end of data example format>\n\n<start of annotations format>\n['<start of the annotation\
  \ list>', '1. Text Annotations:', 'Description: Data-driven text annotations display\
  \ values linked to chart elements, such as data points in a scatterplot. They draw\
  \ attention to specific elements by highlighting their values.', 'Purpose: When\
  \ only some elements are annotated, the intent is to focus the viewer\u2019s attention\
  \ on those before examining others.', 'Other Uses: Non-data-driven annotations can\
  \ provide context, orientation, or editorial comments.', '3. Highlights:', 'Description:\
  \ Highlights modify the appearance of chart elements (e.g., size, color) to emphasize\
  \ or reduce their importance.', 'Purpose: Used to distinguish certain elements from\
  \ others, making them stand out visually.', '<end of the annotation list>']\n<end\
  \ of annotations format>\n\n<start of data details format>\nGlobal Population Trends:\
  \ A Comprehensive Dataset\nsocial-science\n<end of data details format>\n\nGiven\
  \ a data format, imagine a chart that visualizes this data as the final output you\
  \ want from the service provider.\nConsider what purpose the data has and the practical\
  \ purpose of visualization and include it in the instructions.\nYou need to imagine\
  \ a chart with * Line chart and given annotations that utilizes the data format.\n\
  If there are multiple given data formats, imagine a chart with * Line chart and\
  \ given annotations that utilizes all the data formats.\nSince you are an amateur\
  \ user, your instruction will be partially SUBJECTIVE and NOT DETAILED.\nAlso, refer\
  \ to the data details to create as practical and realistic instructions as possible.\n\
  Instructions must reflect the context of the data.\nTo emulate a real-world user\
  \ your instruction should be 100 in size (word count). Do not include data path\
  \ in the instruction.\nYour response should ONLY contain the user emulated instruction.\n\
  Do not include anything else."
1-4. total_chart_types:
- '* Scatter plot'
- '* Line chart'
- '* Bar chart'
- '* Heatmap'
- '* Scatter plot'
- '* Line chart'
2. initial_prompt: !!python/tuple
- Please create a line chart to visualize global population trends over time from
  1960 to 2022. Use the dataset with 'Country Name' and 'Country Code' columns and
  ensure all years are displayed on the x-axis, with population figures on the y-axis.
  Highlight specific countries like "Aruba," "Africa Eastern and Southern," and "Afghanistan"
  to observe their population growth uniquely. Add text annotations on critical years
  where significant changes occur. The visualization will help analyze population
  growth patterns globally and for selected regions.
- 3049
- 2944
- 105
