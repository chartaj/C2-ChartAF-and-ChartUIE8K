1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Heatmap

  * Scatter plot

  * Pie chart

  * Line chart

  * Histogram

  * Geographic heatmap'
- 1010
- 983
- 27
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 830
- 692
- 138
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/423.csv'': {''summary'': {''Column'': [''name'', ''id'',
  ''name_type'', ''class'', ''mass'', ''fall'', ''year'', ''lat'', ''long'', ''geolocation''],
  ''Data Type'': [dtype(''O''), dtype(''int64''), dtype(''O''), dtype(''O''), dtype(''float64''),
  dtype(''O''), dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''O'')],
  ''Missing Values'': [0, 0, 0, 0, 131, 0, 291, 7315, 7315, 7315], ''Unique Values'':
  [45716, 45716, 2, 455, 12576, 2, 265, 12738, 14640, 17100]}, ''sample_data'': {''name'':
  [''Aachen'', ''Aarhus'', ''Abee''], ''id'': [1, 2, 6], ''name_type'': [''Valid'',
  ''Valid'', ''Valid''], ''class'': [''L5'', ''H6'', ''EH4''], ''mass'': [21.0, 720.0,
  107000.0], ''fall'': [''Fell'', ''Fell'', ''Fell''], ''year'': [1880.0, 1951.0,
  1952.0], ''lat'': [50.775, 56.18333, 54.21667], ''long'': [6.08333, 10.23333, -113.0],
  ''geolocation'': [''(50.775, 6.08333)'', ''(56.18333, 10.23333)'', ''(54.21667,
  -113.0)'']}}}

  <end of data example format>


  <start of data details format>

  fallen meteorites

  space-and-astronomy

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Heatmap that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Heatmap that utilizes
  all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 100 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Line chart'
- '* Bar chart'
- '* Scatter plot'
- '* Geographic heatmap'
- '* Histogram'
- '* Pie chart'
- '* Heatmap'
- '* Line chart'
- '* Bar chart'
- '* Scatter plot'
- '* Geographic heatmap'
- '* Histogram'
- '* Pie chart'
- '* Heatmap'
2. initial_prompt: !!python/tuple
- Create a heatmap visualizing the distribution of meteorite falls by geographical
  location (latitude and longitude). Use the 'lat' and 'long' columns to plot the
  coordinates on the map. Color intensity should represent the density of meteorite
  falls, with darker colors indicating higher density. Additionally, include a time
  dimension using the 'year' column to show how the density of meteorite falls has
  changed over different periods. This way, we can observe any patterns or trends
  in meteorite falls over time and their geographical clustering around the world.
- 674
- 567
- 107
