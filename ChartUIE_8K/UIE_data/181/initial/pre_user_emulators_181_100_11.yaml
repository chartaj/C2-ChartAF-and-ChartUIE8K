1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Grouped bar/column chart

  * Dot plot

  * Table chart

  * Heatmap

  * Stacked bar/column chart

  * Pie chart

  * Treemap

  * Line chart

  * Scatter plot

  * Histogram

  * Box chart

  * Choropleth map'
- 971
- 911
- 60
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 764
- 625
- 139
1-3. asking_user_emulator_for_initial_prompt: "You are an expert user emulator.\n\n\
  <start of data example format>\n{'../Extra_datas/data/181.csv': {'summary': {'Column':\
  \ ['City', 'Country', 'Venue', 'Opening act(s)', 'Attendance (tickets sold / available)',\
  \ 'Revenue', 'Tour'], 'Data Type': [dtype('O'), dtype('O'), dtype('O'), dtype('O'),\
  \ dtype('O'), dtype('O'), dtype('O')], 'Missing Values': [0, 0, 0, 1, 3, 3, 0],\
  \ 'Unique Values': [143, 24, 206, 41, 295, 296, 5]}, 'sample_data': {'City': ['Evansville',\
  \ 'Jonesboro', 'St. Louis'], 'Country': ['United States', 'United States', 'United\
  \ States'], 'Venue': ['Roberts Municipal Stadium', 'Convocation Center', 'Scottrade\
  \ Center'], 'Opening act(s)': ['Gloriana\\nKellie Pickler', 'Gloriana\\nKellie Pickler',\
  \ 'Gloriana\\nKellie Pickler'], 'Attendance (tickets sold / available)': ['7,463\
  \ / 7,463', '7,822 / 7,822', '13,764 / 13,764'], 'Revenue': ['$360,617', '$340,328',\
  \ '$650,420'], 'Tour': ['Fearless_Tour', 'Fearless_Tour', 'Fearless_Tour']}}}\n\
  <end of data example format>\n\n<start of data details format>\nTaylor Concert Tours\
  \ \U0001F30E: Impact on Attendance & \U0001F4B0\nmusic\n<end of data details format>\n\
  \nGiven a data format, imagine a chart that visualizes this data as the final output\
  \ you want from the service provider.\nYou need to imagine a chart with * Treemap\
  \ that utilizes the data format.\nIf there are multiple given data formats, imagine\
  \ a chart with * Treemap that utilizes all the data formats.\nSince you are an amateur\
  \ user, your instruction will be partially SUBJECTIVE and NOT DETAILED.\nAlso, refer\
  \ to the data details to create as practical and realistic instructions as possible.\n\
  Instructions must reflect the context of the data.\nTo emulate a real-world user\
  \ your instruction should be 100 in size (word count).\nYour response should ONLY\
  \ contain the user emulated instruction.\nDo not include anything else."
1-4. total_chart_types:
- '* Dot plot'
- '* Scatter plot'
- '* Choropleth map'
- '* Bar chart'
- '* Table chart'
- '* Pie chart'
- '* Grouped bar/column chart'
- '* Stacked bar/column chart'
- '* Histogram'
- '* Heatmap'
- '* Line chart'
- '* Treemap'
- '* Box chart'
- '* Dot plot'
- '* Scatter plot'
- '* Choropleth map'
- '* Bar chart'
- '* Table chart'
- '* Pie chart'
- '* Grouped bar/column chart'
- '* Stacked bar/column chart'
- '* Histogram'
- '* Heatmap'
- '* Line chart'
- '* Treemap'
2. initial_prompt: !!python/tuple
- Please create a treemap chart visualizing the data on Taylor Swift's concert tours.
  The chart should display cities as the primary categories, with subcategories showing
  venues. The size of each cell in the treemap should correspond to the attendance
  numbers (tickets sold). Additionally, use different colors to represent the revenue
  generated in those cities. This will help illustrate the impact of her tours on
  attendance and revenue across various locations. Make sure to highlight significant
  patterns or outliers in the treemap. The treemap should be easy to navigate and
  visually comprehensible.
- 610
- 500
- 110
