1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Grouped bar/column chart

  * Dot plot

  * Table chart

  * Scatter plot

  * Heatmap

  * Stacked bar/column chart

  * Pie chart

  * Treemap

  * Line chart

  * Histogram

  * Box chart'
- 1433
- 1375
- 58
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n2. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 1225
- 1087
- 138
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/44.csv'': {''summary'': {''Column'': [''Name'', ''Abbr'',
  ''Letter'', ''Molecular Weight'', ''Molecular Formula'', ''Residue Formula'', ''Residue
  Weight'', ''pKa1'', ''pKb2'', ''pKx3'', ''pl4'', ''H'', ''VSC'', ''P1'', ''P2'',
  ''SASA'', ''NCISC'', ''carbon'', ''hydrogen'', ''nitrogen'', ''oxygen'', ''sulfur''],
  ''Data Type'': [dtype(''O''), dtype(''O''), dtype(''O''), dtype(''float64''), dtype(''O''),
  dtype(''O''), dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''int64''), dtype(''int64''),
  dtype(''int64''), dtype(''int64''), dtype(''int64'')], ''Missing Values'': [0, 0,
  0, 0, 0, 0, 0, 1, 1, 15, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0], ''Unique Values'':
  [22, 22, 22, 21, 21, 21, 21, 17, 17, 7, 20, 20, 19, 18, 19, 20, 20, 7, 9, 4, 3,
  2]}, ''sample_data'': {''Name'': [''Alanine'', ''Cysteine'', ''Aspartic acid''],
  ''Abbr'': [''Ala'', ''Cys'', ''Asp''], ''Letter'': [''A'', ''C'', ''D''], ''Molecular
  Weight'': [89.1, 121.16, 133.11], ''Molecular Formula'': [''C3H7NO2'', ''C3H7NO2S'',
  ''C4H7NO4''], ''Residue Formula'': [''C3H5NO'', ''C3H5NOS'', ''C4H5NO3''], ''Residue
  Weight'': [71.08, 103.15, 115.09], ''pKa1'': [2.34, 1.96, 1.88], ''pKb2'': [9.69,
  10.28, 9.6], ''pKx3'': [nan, 8.18, 3.65], ''pl4'': [6.0, 5.07, 2.77], ''H'': [0.62,
  0.29, -0.9], ''VSC'': [27.5, 44.6, 40.0], ''P1'': [8.1, 5.5, 13.0], ''P2'': [0.046,
  0.128, 0.105], ''SASA'': [1.181, 1.461, 1.587], ''NCISC'': [0.007187, -0.03661,
  -0.02382], ''carbon'': [3, 3, 4], ''hydrogen'': [7, 7, 7], ''nitrogen'': [1, 1,
  1], ''oxygen'': [2, 2, 4], ''sulfur'': [0, 1, 0]}}}

  <end of data example format>


  <start of data details format>

  Aminoacids: Physical and Chemical Properties

  chemistry

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Treemap that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Treemap that utilizes
  all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 100 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Dot plot'
- '* Column chart'
- '* Grouped bar/column chart'
- '* Line chart'
- '* Heatmap'
- '* Histogram'
- '* Treemap'
- '* Scatter plot'
- '* Pie chart'
- '* Stacked bar/column chart'
- '* Bar chart'
- '* Box chart'
- '* Table chart'
- '* Dot plot'
- '* Column chart'
- '* Grouped bar/column chart'
- '* Line chart'
- '* Heatmap'
- '* Histogram'
- '* Treemap'
2. initial_prompt: !!python/tuple
- Create a treemap to visualize the physical and chemical properties of amino acids
  from the provided data. Each rectangle should represent an amino acid, subdivided
  to show detailed attributes like Molecular Weight, Residue Weight, and counts of
  carbon, hydrogen, nitrogen, oxygen, and sulfur atoms. Highlight variations in pKa1,
  pKb2, pKx3, and pl4 values. Use color coding to differentiate the unique properties
  like VSC, P1, P2, SASA, and NCISC. The goal is to visually compare the diverse attributes
  and identify patterns or anomalies. Ensure the chart clearly distinguishes between
  amino acids using the 'Name' as the primary label.
- 1097
- 962
- 135
