1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Scatter plot

  * Stacked bar/column chart

  * Pie chart

  * Line chart

  * Histogram

  * Box chart'
- 1025
- 995
- 30
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n<end of\
  \ the annotation list>\n\n<start of the annotation list>\n3. Highlights:\nDescription:\
  \ Highlights modify the appearance of chart elements (e.g., size, color) to emphasize\
  \ or reduce their importance.\nPurpose: Used to distinguish certain elements from\
  \ others, making them stand out visually.\n<end of the annotation list>"
- 853
- 701
- 152
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/137.csv'': {''summary'': {''Column'': [''Age'', ''Sex'',
  ''ChestPainType'', ''RestingBP'', ''Cholesterol'', ''FastingBS'', ''RestingECG'',
  ''MaxHR'', ''ExerciseAngina'', ''Oldpeak'', ''ST_Slope'', ''HeartDisease''], ''Data
  Type'': [dtype(''int64''), dtype(''O''), dtype(''O''), dtype(''int64''), dtype(''int64''),
  dtype(''int64''), dtype(''O''), dtype(''int64''), dtype(''O''), dtype(''float64''),
  dtype(''O''), dtype(''int64'')], ''Missing Values'': [0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0], ''Unique Values'': [50, 2, 4, 67, 222, 2, 3, 119, 2, 53, 3, 2]}, ''sample_data'':
  {''Age'': [40, 49, 37], ''Sex'': [''M'', ''F'', ''M''], ''ChestPainType'': [''ATA'',
  ''NAP'', ''ATA''], ''RestingBP'': [140, 160, 130], ''Cholesterol'': [289, 180, 283],
  ''FastingBS'': [0, 0, 0], ''RestingECG'': [''Normal'', ''Normal'', ''ST''], ''MaxHR'':
  [172, 156, 98], ''ExerciseAngina'': [''N'', ''N'', ''N''], ''Oldpeak'': [0.0, 1.0,
  0.0], ''ST_Slope'': [''Up'', ''Flat'', ''Up''], ''HeartDisease'': [0, 1, 0]}}}

  <end of data example format>


  <start of data details format>

  Heart Failure Prediction Dataset

  health

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Box chart that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Box chart that
  utilizes all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 100 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Histogram'
- '* Stacked bar/column chart'
- '* Bar chart'
- '* Pie chart'
- '* Scatter plot'
- '* Line chart'
- '* Box chart'
- '* Histogram'
- '* Stacked bar/column chart'
- '* Bar chart'
- '* Pie chart'
- '* Scatter plot'
- '* Line chart'
- '* Box chart'
2. initial_prompt: !!python/tuple
- I need a box chart to visualize the "Heart Failure Prediction Dataset," focusing
  on health metrics. Specifically, I want box plots for age, resting blood pressure,
  cholesterol, and maximum heart rate to see data distribution. Use different colors
  to differentiate groups with and without heart disease. Include labels, axis titles,
  and a legend for clarity. Show any outliers distinctly. This visualization will
  help discern patterns or anomalies in critical health indicators for patients with
  and without heart disease. Make sure the chart is clean and easy to understand.
- 680
- 576
- 104
