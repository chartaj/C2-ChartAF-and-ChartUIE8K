1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Pie chart

  * Donut chart

  * Heatmap

  * Treemap

  * Radar chart

  * Scatter plot

  * Geographic heatmap

  * Line chart

  * Histogram

  * Box chart'
- 968
- 924
- 44
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 771
- 633
- 138
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/130.csv'': {''summary'': {''Column'': [''name'', ''ingredients'',
  ''diet'', ''prep_time'', ''cook_time'', ''flavor_profile'', ''course'', ''state'',
  ''region''], ''Data Type'': [dtype(''O''), dtype(''O''), dtype(''O''), dtype(''int64''),
  dtype(''int64''), dtype(''O''), dtype(''O''), dtype(''O''), dtype(''O'')], ''Missing
  Values'': [0, 0, 0, 0, 0, 0, 0, 0, 1], ''Unique Values'': [255, 252, 2, 22, 19,
  5, 4, 25, 7]}, ''sample_data'': {''name'': [''Balu shahi'', ''Boondi'', ''Gajar
  ka halwa''], ''ingredients'': [''Maida flour, yogurt, oil, sugar'', ''Gram flour,
  ghee, sugar'', ''Carrots, milk, sugar, ghee, cashews, raisins''], ''diet'': [''vegetarian'',
  ''vegetarian'', ''vegetarian''], ''prep_time'': [45, 80, 15], ''cook_time'': [25,
  30, 60], ''flavor_profile'': [''sweet'', ''sweet'', ''sweet''], ''course'': [''dessert'',
  ''dessert'', ''dessert''], ''state'': [''West Bengal'', ''Rajasthan'', ''Punjab''],
  ''region'': [''East'', ''West'', ''North'']}}}

  <end of data example format>


  <start of data details format>

  Indian Food 101

  food-and-drink

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Line chart that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Line chart that
  utilizes all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 100 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Geographic heatmap'
- '* Donut chart'
- '* Scatter plot'
- '* Histogram'
- '* Box chart'
- '* Heatmap'
- '* Pie chart'
- '* Bar chart'
- '* Treemap'
- '* Line chart'
- '* Radar chart'
- '* Geographic heatmap'
- '* Donut chart'
- '* Scatter plot'
- '* Histogram'
- '* Box chart'
- '* Heatmap'
- '* Pie chart'
- '* Bar chart'
- '* Treemap'
- '* Line chart'
2. initial_prompt: !!python/tuple
- I need a line chart visualizing the prep_time and cook_time for various Indian desserts.
  Use data from "Indian Food 101" and include icons or colors to differentiate between
  vegetarian and non-vegetarian dishes. Ensure the x-axis has the name of the dishes
  while the y-axis shows the time in minutes. Highlight regions with different colors
  or markers to add more context to each dish's origin. This will help me compare
  cooking times and understand regional variations better. Consider any missing values
  while plotting to avoid misrepresentation.
- 612
- 508
- 104
