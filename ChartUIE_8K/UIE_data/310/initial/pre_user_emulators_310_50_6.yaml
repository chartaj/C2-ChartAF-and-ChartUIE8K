1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Grouped bar/column chart

  * Heatmap

  * Bubble chart

  * Scatter plot

  * Stacked bar/column chart

  * Treemap

  * Line chart

  * Histogram

  * Choropleth map'
- 953
- 905
- 48
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 755
- 617
- 138
1-3. asking_user_emulator_for_initial_prompt: "You are an expert user emulator.\n\n\
  <start of data example format>\n{'../Extra_datas/data/310.csv': {'summary': {'Column':\
  \ ['Language', 'Endonym', 'World Region', 'Country', 'Global Speakers', 'Language\
  \ Family', 'Location', 'Size', 'Status'], 'Data Type': [dtype('O'), dtype('O'),\
  \ dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O')],\
  \ 'Missing Values': [0, 164, 0, 0, 171, 7, 0, 0, 0], 'Unique Values': [730, 621,\
  \ 22, 344, 525, 47, 259, 5, 5]}, 'sample_data': {'Language': ['Abaza', 'Abruzzese',\
  \ 'Abruzzese'], 'Endonym': ['\u0410\u0431\u0430\u0437\u0430', nan, nan], 'World\
  \ Region': ['Western Asia', 'Southern Europe', 'Southern Europe'], 'Country': ['Turkey,\\\
  r\\nRussia', 'Italy', 'Italy'], 'Global Speakers': ['49,800', nan, nan], 'Language\
  \ Family': ['Abkhaz-Adyge', 'Indo-European', 'Indo-European'], 'Location': ['Wayne\
  \ (NJ)', 'Astoria', 'Little Italy'], 'Size': ['Smallest', 'Small', 'Small'], 'Status':\
  \ ['Residential', 'Residential', 'Historical']}}}\n<end of data example format>\n\
  \n<start of data details format>\nLanguages of New York City\nliterature-and-linguistics\n\
  <end of data details format>\n\nGiven a data format, imagine a chart that visualizes\
  \ this data as the final output you want from the service provider.\nIt MUST be\
  \ a chart that can be created using only data columns.\nYou need to imagine a chart\
  \ with * Stacked bar/column chart that utilizes the data format.\nIf there are multiple\
  \ given data formats, imagine a chart with * Stacked bar/column chart that utilizes\
  \ all the data formats.\nSince you are an amateur user, your instruction will be\
  \ partially SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details to create\
  \ as practical and realistic instructions as possible.\nInstructions must reflect\
  \ the context of the data.\nTo emulate a real-world user your instruction should\
  \ be 50 in size (word count).\nYour response should ONLY contain the user emulated\
  \ instruction.\nDo not include anything else."
1-4. total_chart_types:
- '* Treemap'
- '* Grouped bar/column chart'
- '* Choropleth map'
- '* Heatmap'
- '* Line chart'
- '* Histogram'
- '* Stacked bar/column chart'
2. initial_prompt: !!python/tuple
- Create a stacked bar chart illustrating the count of unique languages spoken in
  New York City, categorized by their global speaker size (Smallest, Small). Group
  the data by World Region.
- 550
- 514
- 36
