1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Grouped bar/column chart

  * Dumbbell

  * Slope chart

  * Heatmap

  * Bubble chart

  * Scatter plot

  * Stacked bar/column chart

  * Diverging bar chart

  * Donut chart

  * Area chart

  * Line chart

  * Histogram

  * Box chart'
- 4315
- 4245
- 70
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 4095
- 3956
- 139
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/416.csv'': {''summary'': {''Column'': [''Div'', ''Date'',
  ''Time'', ''HomeTeam'', ''AwayTeam'', ''FTHG'', ''FTAG'', ''FTR'', ''HTHG'', ''HTAG'',
  ''HTR'', ''HS'', ''AS'', ''HST'', ''AST'', ''HF'', ''AF'', ''HC'', ''AC'', ''HY'',
  ''AY'', ''HR'', ''AR'', ''B365H'', ''B365D'', ''B365A'', ''BWH'', ''BWD'', ''BWA'',
  ''IWH'', ''IWD'', ''IWA'', ''PSH'', ''PSD'', ''PSA'', ''WHH'', ''WHD'', ''WHA'',
  ''VCH'', ''VCD'', ''VCA'', ''MaxH'', ''MaxD'', ''MaxA'', ''AvgH'', ''AvgD'', ''AvgA'',
  ''B365>2.5'', ''B365<2.5'', ''P>2.5'', ''P<2.5'', ''Max>2.5'', ''Max<2.5'', ''Avg>2.5'',
  ''Avg<2.5'', ''AHh'', ''B365AHH'', ''B365AHA'', ''PAHH'', ''PAHA'', ''MaxAHH'',
  ''MaxAHA'', ''AvgAHH'', ''AvgAHA'', ''B365CH'', ''B365CD'', ''B365CA'', ''BWCH'',
  ''BWCD'', ''BWCA'', ''IWCH'', ''IWCD'', ''IWCA'', ''PSCH'', ''PSCD'', ''PSCA'',
  ''WHCH'', ''WHCD'', ''WHCA'', ''VCCH'', ''VCCD'', ''VCCA'', ''MaxCH'', ''MaxCD'',
  ''MaxCA'', ''AvgCH'', ''AvgCD'', ''AvgCA'', ''B365C>2.5'', ''B365C<2.5'', ''PC>2.5'',
  ''PC<2.5'', ''MaxC>2.5'', ''MaxC<2.5'', ''AvgC>2.5'', ''AvgC<2.5'', ''AHCh'', ''B365CAHH'',
  ''B365CAHA'', ''PCAHH'', ''PCAHA'', ''MaxCAHH'', ''MaxCAHA'', ''AvgCAHH'', ''AvgCAHA''],
  ''Data Type'': [dtype(''O''), dtype(''O''), dtype(''O''), dtype(''O''), dtype(''O''),
  dtype(''int64''), dtype(''int64''), dtype(''O''), dtype(''int64''), dtype(''int64''),
  dtype(''O''), dtype(''int64''), dtype(''int64''), dtype(''int64''), dtype(''int64''),
  dtype(''int64''), dtype(''int64''), dtype(''int64''), dtype(''int64''), dtype(''int64''),
  dtype(''int64''), dtype(''int64''), dtype(''int64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64'')],
  ''Missing Values'': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0], ''Unique Values'': [1, 101, 6, 18, 18, 8, 6, 3, 5, 4, 3, 27, 26, 14,
  14, 23, 19, 15, 15, 8, 8, 2, 3, 78, 31, 85, 92, 37, 102, 97, 48, 103, 216, 177,
  238, 92, 32, 91, 90, 31, 91, 201, 152, 212, 213, 171, 238, 30, 30, 103, 147, 101,
  126, 97, 149, 20, 38, 37, 40, 39, 40, 37, 36, 36, 83, 29, 83, 98, 39, 99, 99, 47,
  101, 219, 179, 251, 92, 32, 91, 92, 33, 89, 208, 156, 229, 207, 174, 230, 29, 29,
  109, 150, 106, 104, 99, 151, 22, 43, 41, 43, 43, 41, 45, 36, 37]}, ''sample_data'':
  {''Div'': [''D1'', ''D1'', ''D1''], ''Date'': [''18/09/2020'', ''19/09/2020'', ''19/09/2020''],
  ''Time'': [''19:30'', ''14:30'', ''14:30''], ''HomeTeam'': [''Bayern Munich'', ''Ein
  Frankfurt'', ''FC Koln''], ''AwayTeam'': [''Schalke 04'', ''Bielefeld'', ''Hoffenheim''],
  ''FTHG'': [8, 1, 2], ''FTAG'': [0, 1, 3], ''FTR'': [''H'', ''D'', ''A''], ''HTHG'':
  [3, 0, 1], ''HTAG'': [0, 0, 2], ''HTR'': [''H'', ''D'', ''A''], ''HS'': [22, 18,
  13], ''AS'': [5, 14, 13], ''HST'': [12, 6, 6], ''AST'': [1, 4, 7], ''HF'': [11,
  14, 12], ''AF'': [12, 13, 13], ''HC'': [9, 14, 1], ''AC'': [2, 3, 6], ''HY'': [1,
  2, 0], ''AY'': [2, 2, 0], ''HR'': [0, 0, 0], ''AR'': [0, 0, 0], ''B365H'': [1.1,
  1.61, 2.6], ''B365D'': [11.0, 4.2, 3.5], ''B365A'': [21.0, 5.25, 2.6], ''BWH'':
  [1.11, 1.65, 2.55], ''BWD'': [11.0, 4.1, 3.6], ''BWA'': [16.5, 5.0, 2.65], ''IWH'':
  [1.15, 1.7, 2.6], ''IWD'': [8.0, 4.0, 3.55], ''IWA'': [18.0, 4.7, 2.6], ''PSH'':
  [1.1, 1.67, 2.62], ''PSD'': [12.11, 4.21, 3.67], ''PSA'': [27.06, 5.08, 2.63], ''WHH'':
  [1.07, 1.63, 2.55], ''WHD'': [11.0, 4.2, 3.6], ''WHA'': [26.0, 4.8, 2.55], ''VCH'':
  [1.09, 1.65, 2.6], ''VCD'': [12.0, 4.2, 3.6], ''VCA'': [23.0, 5.0, 2.63], ''MaxH'':
  [1.15, 1.71, 2.7], ''MaxD'': [14.0, 4.5, 3.88], ''MaxA'': [34.0, 5.25, 2.69], ''AvgH'':
  [1.09, 1.65, 2.6], ''AvgD'': [11.59, 4.19, 3.6], ''AvgA'': [24.69, 4.91, 2.59],
  ''B365>2.5'': [1.22, 1.57, 1.57], ''B365<2.5'': [4.33, 2.37, 2.37], ''P>2.5'': [1.2,
  1.64, 1.62], ''P<2.5'': [4.86, 2.37, 2.41], ''Max>2.5'': [1.22, 1.68, 1.67], ''Max<2.5'':
  [5.0, 2.47, 2.48], ''Avg>2.5'': [1.2, 1.59, 1.59], ''Avg<2.5'': [4.41, 2.34, 2.36],
  ''AHh'': [-2.75, -1.0, 0.0], ''B365AHH'': [1.86, 2.05, 1.96], ''B365AHA'': [2.07,
  1.75, 1.97], ''PAHH'': [1.84, 2.14, 1.96], ''PAHA'': [2.06, 1.79, 1.96], ''MaxAHH'':
  [1.99, 2.18, 2.0], ''MaxAHA'': [2.1, 1.84, 1.99], ''AvgAHH'': [1.85, 2.1, 1.94],
  ''AvgAHA'': [2.03, 1.78, 1.93], ''B365CH'': [1.1, 1.72, 2.5], ''B365CD'': [11.0,
  4.0, 3.75], ''B365CA'': [21.0, 4.5, 2.62], ''BWCH'': [1.1, 1.75, 2.65], ''BWCD'':
  [12.0, 3.9, 3.4], ''BWCA'': [18.5, 4.5, 2.65], ''IWCH'': [1.15, 1.8, 2.6], ''IWCD'':
  [8.0, 3.9, 3.55], ''IWCA'': [18.0, 4.2, 2.6], ''PSCH'': [1.12, 1.75, 2.65], ''PSCD'':
  [11.35, 4.2, 3.5], ''PSCA'': [18.87, 4.67, 2.78], ''WHCH'': [1.1, 1.75, 2.5], ''WHCD'':
  [10.0, 3.9, 3.6], ''WHCA'': [19.0, 4.33, 2.62], ''VCCH'': [1.1, 1.8, 2.5], ''VCCD'':
  [11.0, 4.0, 3.75], ''VCCA'': [22.0, 4.2, 2.63], ''MaxCH'': [1.15, 1.8, 2.7], ''MaxCD'':
  [13.25, 4.2, 3.85], ''MaxCA'': [25.0, 4.75, 2.83], ''AvgCH'': [1.11, 1.74, 2.59],
  ''AvgCD'': [10.83, 4.04, 3.51], ''AvgCA'': [19.76, 4.44, 2.67], ''B365C>2.5'': [1.22,
  1.61, 1.61], ''B365C<2.5'': [4.33, 2.3, 2.3], ''PC>2.5'': [1.23, 1.64, 1.65], ''PC<2.5'':
  [4.37, 2.39, 2.35], ''MaxC>2.5'': [1.23, 1.69, 1.72], ''MaxC<2.5'': [4.75, 2.47,
  2.4], ''AvgC>2.5'': [1.21, 1.61, 1.64], ''AvgC<2.5'': [4.34, 2.33, 2.27], ''AHCh'':
  [-2.5, -0.75, 0.0], ''B365CAHH'': [1.89, 1.96, 1.91], ''B365CAHA'': [2.04, 1.97,
  2.02], ''PCAHH'': [1.87, 1.96, 1.92], ''PCAHA'': [2.02, 1.96, 2.01], ''MaxCAHH'':
  [1.95, 2.02, 1.97], ''MaxCAHA'': [2.18, 1.98, 2.08], ''AvgCAHH'': [1.85, 1.94, 1.89],
  ''AvgCAHA'': [2.02, 1.93, 1.98]}}}

  <end of data example format>


  <start of data details format>

  Bundesliga points per match

  sports-and-recreation

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Grouped bar/column chart that utilizes the data
  format.

  If there are multiple given data formats, imagine a chart with * Grouped bar/column
  chart that utilizes all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 50 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Column chart'
- '* Diverging bar chart'
- '* Scatter plot'
- '* Slope chart'
- '* Stacked bar/column chart'
- '* Histogram'
- '* Area chart'
- '* Bar chart'
- '* Bubble chart'
- '* Grouped bar/column chart'
2. initial_prompt: !!python/tuple
- Create a grouped column chart to compare the number of goals scored (FTHG, FTAG)
  and shots taken (HS, AS) by home and away teams for each match in the Bundesliga
  dataset.
- 3880
- 3839
- 41
