1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Grouped bar/column chart

  * Lollipop chart

  * Dot plot

  * Dumbbell

  * Scatter plot

  * Heatmap

  * Stacked bar/column chart

  * Pie chart

  * Treemap

  * Area chart

  * Line chart

  * Histogram

  * Box chart

  * Geographic heatmap

  * Choropleth map'
- 911
- 833
- 78
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 687
- 548
- 139
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/344.csv': {'summary': {'Column':\
  \ ['Title', 'Company', 'Location', 'Easy Apply', 'Salary_Lower_Limit', 'Salary_Upper_Limit'],\
  \ 'Data Type': [dtype('O'), dtype('O'), dtype('O'), dtype('bool'), dtype('int64'),\
  \ dtype('int64')], 'Missing Values': [0, 0, 0, 0, 0, 0], 'Unique Values': [23, 32,\
  \ 12, 2, 9, 12]}, 'sample_data': {'Title': ['Consultant', 'Blockchain Developer\
  \ Intern', 'Trainer'], 'Company': ['Infosys Limited', 'Synergy Labs', 'REGex Software\
  \ Services'], 'Location': ['Bangalore', 'Gurgaon', 'Remote'], 'Easy Apply': [False,\
  \ True, True], 'Salary_Lower_Limit': [100000, 200000, 96000], 'Salary_Upper_Limit':\
  \ [100000, 300000, 100000]}}}\n<end of data example format>\n\n<start of annotations\
  \ format>\n['<start of the annotation list>', '1. Text Annotations:', 'Description:\
  \ Data-driven text annotations display values linked to chart elements, such as\
  \ data points in a scatterplot. They draw attention to specific elements by highlighting\
  \ their values.', 'Purpose: When only some elements are annotated, the intent is\
  \ to focus the viewer\u2019s attention on those before examining others.', 'Other\
  \ Uses: Non-data-driven annotations can provide context, orientation, or editorial\
  \ comments.', '3. Highlights:', 'Description: Highlights modify the appearance of\
  \ chart elements (e.g., size, color) to emphasize or reduce their importance.',\
  \ 'Purpose: Used to distinguish certain elements from others, making them stand\
  \ out visually', '<end of the annotation list>']\n<end of annotations format>\n\n\
  <start of data details format>\nBlockchain Jobs India 2022 Glassdoor.com\ncryptocurrency-and-blockchain\n\
  <end of data details format>\n\nGiven a data format, imagine a chart that visualizes\
  \ this data as the final output you want from the service provider.\nConsider what\
  \ purpose the data has and the practical purpose of visualization and include it\
  \ in the instructions.\nYou need to imagine a chart with * Lollipop chart and given\
  \ annotations that utilizes the data format.\nIf there are multiple given data formats,\
  \ imagine a chart with * Lollipop chart and given annotations that utilizes all\
  \ the data formats.\nSince you are an amateur user, your instruction will be partially\
  \ SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details to create as practical\
  \ and realistic instructions as possible.\nInstructions must reflect the context\
  \ of the data.\nTo emulate a real-world user your instruction should be 50 in size\
  \ (word count). Do not include data path in the instruction.\nYour response should\
  \ ONLY contain the user emulated instruction.\nDo not include anything else."
1-4. total_chart_types:
- '* Lollipop chart'
2. initial_prompt: !!python/tuple
- Create a lollipop chart visualizing salary ranges (lower and upper limits) by job
  title in blockchain jobs for India (2022, Glassdoor). Highlight positions with easy
  apply options and annotate highest and lowest salaries.
- 662
- 619
- 43
