1-1. selected_chart_types: !!python/tuple
- '* Line chart

  * Bar chart

  * Area chart

  * Stacked area chart

  * Spline chart

  * Column chart'
- 791
- 765
- 26
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 610
- 472
- 138
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/464.csv': {'summary': {'Column':\
  \ ['Year', 'Urban', 'Rural'], 'Data Type': [dtype('int64'), dtype('float64'), dtype('float64')],\
  \ 'Missing Values': [0, 0, 0], 'Unique Values': [17, 17, 17]}, 'sample_data': {'Year':\
  \ [2000, 2001, 2002], 'Urban': [35.4601753281331, 37.6075221814522, 42.0683832943453],\
  \ 'Rural': [99.5449966143072, 93.4059502065895, 87.9952373452018]}}}\n<end of data\
  \ example format>\n\n<start of annotations format>\n['<start of the annotation list>',\
  \ '1. Text Annotations:', 'Description: Data-driven text annotations display values\
  \ linked to chart elements, such as data points in a scatterplot. They draw attention\
  \ to specific elements by highlighting their values.', 'Purpose: When only some\
  \ elements are annotated, the intent is to focus the viewer\u2019s attention on\
  \ those before examining others.', 'Other Uses: Non-data-driven annotations can\
  \ provide context, orientation, or editorial comments.', '3. Highlights:', 'Description:\
  \ Highlights modify the appearance of chart elements (e.g., size, color) to emphasize\
  \ or reduce their importance.', 'Purpose: Used to distinguish certain elements from\
  \ others, making them stand out visually', '<end of the annotation list>']\n<end\
  \ of annotations format>\n\n<start of data details format>\nunknown\nagriculture-and-farming\n\
  <end of data details format>\n\nGiven a data format, imagine a chart that visualizes\
  \ this data as the final output you want from the service provider.\nConsider what\
  \ purpose the data has and the practical purpose of visualization and include it\
  \ in the instructions.\nYou need to imagine a chart with * Stacked area chart and\
  \ given annotations that utilizes the data format.\nIf there are multiple given\
  \ data formats, imagine a chart with * Stacked area chart and given annotations\
  \ that utilizes all the data formats.\nSince you are an amateur user, your instruction\
  \ will be partially SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details\
  \ to create as practical and realistic instructions as possible.\nInstructions must\
  \ reflect the context of the data.\nTo emulate a real-world user your instruction\
  \ should be 50 in size (word count). Do not include data path in the instruction.\n\
  Your response should ONLY contain the user emulated instruction.\nDo not include\
  \ anything else."
1-4. total_chart_types:
- '* Column chart'
- '* Bar chart'
- '* Stacked area chart'
2. initial_prompt: !!python/tuple
- Create a stacked area chart showing the trends of Urban and Rural populations from
  2000 to 2016. Highlight years with significant changes. Add text annotations for
  key data points to provide context. This will visualize agricultural and farming
  sector shifts over time.
- 595
- 545
- 50
