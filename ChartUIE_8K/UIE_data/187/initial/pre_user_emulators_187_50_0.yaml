1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Grouped bar/column chart

  * Lollipop chart

  * Dot plot

  * Dumbbell

  * Pictogram

  * Range chart

  * Radial bar chart

  * Parallel coordinates

  * Heatmap

  * Bubble chart

  * Scatter plot

  * Stacked bar/column chart

  * Treemap

  * Line chart

  * Spline chart

  * Histogram

  * Box chart

  * Violin plot'
- 1439
- 1347
- 92
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n2. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 1195
- 1057
- 138
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/187.csv': {'summary': {'Column':\
  \ ['film', 'category', 'worldwide gross ($m)', '% budget recovered', 'critics %\
  \ score', 'audience % score', 'audience vs critics % deviance', 'budget', 'domestic\
  \ gross ($m)', 'international gross ($m)', 'opening weekend ($m)', 'second weekend\
  \ ($m)', '1st vs 2nd weekend drop off', '% gross from opening weekend', '% gross\
  \ from domestic', '% gross from international', '% budget opening weekend', 'year',\
  \ 'source'], 'Data Type': [dtype('O'), dtype('O'), dtype('int64'), dtype('O'), dtype('O'),\
  \ dtype('O'), dtype('O'), dtype('float64'), dtype('int64'), dtype('int64'), dtype('float64'),\
  \ dtype('float64'), dtype('O'), dtype('float64'), dtype('O'), dtype('O'), dtype('O'),\
  \ dtype('int64'), dtype('O')], 'Missing Values': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
  \ 0, 0, 0, 0, 0, 0, 0, 0, 0], 'Unique Values': [30, 10, 30, 30, 20, 22, 16, 16,\
  \ 29, 30, 28, 30, 16, 28, 28, 29, 30, 13, 29]}, 'sample_data': {'film': ['Ant-Man\
  \  ', 'Ant-Man & The Wasp', 'Avengers: Age of Ultron'], 'category': ['Ant-Man',\
  \ 'Ant-Man', 'Avengers'], 'worldwide gross ($m)': [518, 623, 1395], '% budget recovered':\
  \ ['398%', '479%', '382%'], 'critics % score': ['83%', '87%', '76%'], 'audience\
  \ % score': ['85%', '80%', '82%'], 'audience vs critics % deviance': ['-2%', '7%',\
  \ '-6%'], 'budget': [130.0, 130.0, 365.0], 'domestic gross ($m)': [180, 216, 459],\
  \ 'international gross ($m)': [338, 406, 936], 'opening weekend ($m)': [57.0, 75.8,\
  \ 191.0], 'second weekend ($m)': [24.0, 29.0, 77.0], '1st vs 2nd weekend drop off':\
  \ ['-58%', '-62%', '-60%'], '% gross from opening weekend': [31.8, 35.0, 41.7],\
  \ '% gross from domestic': ['34.7%', '34.7%', '32.9%'], '% gross from international':\
  \ ['65.3%', '65.2%', '67.1%'], '% budget opening weekend': ['43.8%', '58.3%', '52.3%'],\
  \ 'year': [2015, 2018, 2015], 'source': ['https://www.the-numbers.com/movie/Ant-Man#tab=summary',\
  \ 'https://www.the-numbers.com/movie/Ant-Man-and-the-Wasp#tab=summary', 'https://www.the-numbers.com/movie/Avengers-Age-of-Ultron#tab=summary']}}}\n\
  <end of data example format>\n\n<start of annotations format>\n['<start of the annotation\
  \ list>', '1. Text Annotations:', 'Description: Data-driven text annotations display\
  \ values linked to chart elements, such as data points in a scatterplot. They draw\
  \ attention to specific elements by highlighting their values.', 'Purpose: When\
  \ only some elements are annotated, the intent is to focus the viewer\u2019s attention\
  \ on those before examining others.', 'Other Uses: Non-data-driven annotations can\
  \ provide context, orientation, or editorial comments.', '2. Highlights:', 'Description:\
  \ Highlights modify the appearance of chart elements (e.g., size, color) to emphasize\
  \ or reduce their importance.', 'Purpose: Used to distinguish certain elements from\
  \ others, making them stand out visually', '<end of the annotation list>']\n<end\
  \ of annotations format>\n\n<start of data details format>\nMarvel Superhero Movies\n\
  arts-and-entertainment\n<end of data details format>\n\nGiven a data format, imagine\
  \ a chart that visualizes this data as the final output you want from the service\
  \ provider.\nConsider what purpose the data has and the practical purpose of visualization\
  \ and include it in the instructions.\nYou need to imagine a chart with * Bar chart\
  \ and given annotations that utilizes the data format.\nIf there are multiple given\
  \ data formats, imagine a chart with * Bar chart and given annotations that utilizes\
  \ all the data formats.\nSince you are an amateur user, your instruction will be\
  \ partially SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details to create\
  \ as practical and realistic instructions as possible.\nInstructions must reflect\
  \ the context of the data.\nTo emulate a real-world user your instruction should\
  \ be 50 in size (word count). Do not include data path in the instruction.\nYour\
  \ response should ONLY contain the user emulated instruction.\nDo not include anything\
  \ else."
1-4. total_chart_types:
- '* Bar chart'
2. initial_prompt: !!python/tuple
- Create a bar chart showing the worldwide gross ($m) of Marvel superhero movies.
  Add annotations for films with the highest and lowest gross. Highlight bars to distinguish
  between domestic and international gross.
- 1163
- 1126
- 37
