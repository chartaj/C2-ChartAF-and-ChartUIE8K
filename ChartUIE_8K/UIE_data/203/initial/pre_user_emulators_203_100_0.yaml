1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Heatmap

  * Pie chart

  * Scatter plot

  * Box chart'
- 767
- 748
- 19
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually.\n<end of the annotation\
  \ list>"
- 594
- 456
- 138
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/203.csv': {'summary': {'Column':\
  \ ['file', 'age', 'split'], 'Data Type': [dtype('O'), dtype('O'), dtype('O')], 'Missing\
  \ Values': [0, 0, 0], 'Unique Values': [150, 5, 2]}, 'sample_data': {'file': ['train/18-20/0.jpg',\
  \ 'train/18-20/1.jpg', 'train/18-20/2.jpg'], 'age': ['18-20', '18-20', '18-20'],\
  \ 'split': ['train', 'train', 'train']}}}\n<end of data example format>\n\n<start\
  \ of annotations format>\n['<start of the annotation list>', '1. Text Annotations:',\
  \ 'Description: Data-driven text annotations display values linked to chart elements,\
  \ such as data points in a scatterplot. They draw attention to specific elements\
  \ by highlighting their values.', 'Purpose: When only some elements are annotated,\
  \ the intent is to focus the viewer\u2019s attention on those before examining others.',\
  \ 'Other Uses: Non-data-driven annotations can provide context, orientation, or\
  \ editorial comments.', '3. Highlights:', 'Description: Highlights modify the appearance\
  \ of chart elements (e.g., size, color) to emphasize or reduce their importance.',\
  \ 'Purpose: Used to distinguish certain elements from others, making them stand\
  \ out visually.', '<end of the annotation list>']\n<end of annotations format>\n\
  \n<start of data details format>\nAge Detection - Face Recognition Dataset\nhealth\n\
  <end of data details format>\n\nGiven a data format, imagine a chart that visualizes\
  \ this data as the final output you want from the service provider.\nConsider what\
  \ purpose the data has and the practical purpose of visualization and include it\
  \ in the instructions.\nYou need to imagine a chart with * Pie chart and given annotations\
  \ that utilizes the data format.\nIf there are multiple given data formats, imagine\
  \ a chart with * Pie chart and given annotations that utilizes all the data formats.\n\
  Since you are an amateur user, your instruction will be partially SUBJECTIVE and\
  \ NOT DETAILED.\nAlso, refer to the data details to create as practical and realistic\
  \ instructions as possible.\nInstructions must reflect the context of the data.\n\
  To emulate a real-world user your instruction should be 100 in size (word count).\
  \ Do not include data path in the instruction.\nYour response should ONLY contain\
  \ the user emulated instruction.\nDo not include anything else."
1-4. total_chart_types:
- '* Pie chart'
- '* Scatter plot'
- '* Box chart'
- '* Heatmap'
- '* Bar chart'
- '* Pie chart'
2. initial_prompt: !!python/tuple
- Create a pie chart to visualize the distribution of age categories in a face recognition
  dataset. Use text annotations to display the percentage of each age group within
  the pie slices. Highlight the age groups with different colors for clear distinction.
  Use this visualization to easily understand the demographic spread of the dataset
  which can help in analyzing the effectiveness of face recognition across different
  age groups. Ensure the chart is clear and informative, highlighting key segments
  for better insight into the dataset's age distribution. Include both train and other
  splits if available.
- 626
- 525
- 101
