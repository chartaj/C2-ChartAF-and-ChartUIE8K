1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Grouped bar/column chart

  * Radar chart

  * Pie chart

  * Donut chart

  * Treemap

  * Line chart

  * Heatmap

  * Scatter plot

  * Histogram

  * Box chart'
- 846
- 795
- 51
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 642
- 503
- 139
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/443.csv': {'summary': {'Column':\
  \ ['season', 'location', 'round_stage', 'obstacle_name', 'obstacle_order'], 'Data\
  \ Type': [dtype('int64'), dtype('O'), dtype('O'), dtype('O'), dtype('int64')], 'Missing\
  \ Values': [0, 0, 0, 0, 0], 'Unique Values': [10, 30, 8, 225, 10]}, 'sample_data':\
  \ {'season': [1, 1, 1], 'location': ['Venice', 'Venice', 'Venice'], 'round_stage':\
  \ ['Qualifying', 'Qualifying', 'Qualifying'], 'obstacle_name': ['Quintuple Steps',\
  \ 'Rope Swing', 'Rolling Barrel'], 'obstacle_order': [1, 2, 3]}}}\n<end of data\
  \ example format>\n\n<start of annotations format>\n['<start of the annotation list>',\
  \ '1. Text Annotations:', 'Description: Data-driven text annotations display values\
  \ linked to chart elements, such as data points in a scatterplot. They draw attention\
  \ to specific elements by highlighting their values.', 'Purpose: When only some\
  \ elements are annotated, the intent is to focus the viewer\u2019s attention on\
  \ those before examining others.', 'Other Uses: Non-data-driven annotations can\
  \ provide context, orientation, or editorial comments.', '3. Highlights:', 'Description:\
  \ Highlights modify the appearance of chart elements (e.g., size, color) to emphasize\
  \ or reduce their importance.', 'Purpose: Used to distinguish certain elements from\
  \ others, making them stand out visually', '<end of the annotation list>']\n<end\
  \ of annotations format>\n\n<start of data details format>\nobstacle courses in\
  \ ninja warrior\ngames\n<end of data details format>\n\nGiven a data format, imagine\
  \ a chart that visualizes this data as the final output you want from the service\
  \ provider.\nConsider what purpose the data has and the practical purpose of visualization\
  \ and include it in the instructions.\nYou need to imagine a chart with * Treemap\
  \ and given annotations that utilizes the data format.\nIf there are multiple given\
  \ data formats, imagine a chart with * Treemap and given annotations that utilizes\
  \ all the data formats.\nSince you are an amateur user, your instruction will be\
  \ partially SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details to create\
  \ as practical and realistic instructions as possible.\nInstructions must reflect\
  \ the context of the data.\nTo emulate a real-world user your instruction should\
  \ be 100 in size (word count). Do not include data path in the instruction.\nYour\
  \ response should ONLY contain the user emulated instruction.\nDo not include anything\
  \ else."
1-4. total_chart_types:
- '* Treemap'
- '* Pie chart'
- '* Histogram'
- '* Heatmap'
- '* Column chart'
- '* Box chart'
- '* Scatter plot'
- '* Donut chart'
- '* Grouped bar/column chart'
- '* Line chart'
- '* Radar chart'
- '* Bar chart'
- '* Treemap'
2. initial_prompt: !!python/tuple
- Create a treemap chart visualizing the data to show the distribution of obstacles
  used in different locations and stages of the Ninja Warrior games across seasons.
  Annotate the map with obstacle names, highlighting frequently used obstacles and
  differentiating them by color based on their order within the course. This will
  help in identifying the diversity and prevalence of obstacles in various game settings,
  and highlight the prominence or uniqueness of certain obstacles. The annotations
  should help viewers quickly grasp which obstacles are most significant in different
  contexts, aiding in strategic analysis and course planning.
- 677
- 572
- 105
