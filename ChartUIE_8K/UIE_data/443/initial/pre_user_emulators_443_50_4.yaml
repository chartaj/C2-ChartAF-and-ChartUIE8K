1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Grouped bar/column chart

  * Radar chart

  * Pie chart

  * Donut chart

  * Treemap

  * Line chart

  * Heatmap

  * Scatter plot

  * Histogram

  * Box chart'
- 846
- 795
- 51
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 642
- 503
- 139
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/443.csv'': {''summary'': {''Column'': [''season'', ''location'',
  ''round_stage'', ''obstacle_name'', ''obstacle_order''], ''Data Type'': [dtype(''int64''),
  dtype(''O''), dtype(''O''), dtype(''O''), dtype(''int64'')], ''Missing Values'':
  [0, 0, 0, 0, 0], ''Unique Values'': [10, 30, 8, 225, 10]}, ''sample_data'': {''season'':
  [1, 1, 1], ''location'': [''Venice'', ''Venice'', ''Venice''], ''round_stage'':
  [''Qualifying'', ''Qualifying'', ''Qualifying''], ''obstacle_name'': [''Quintuple
  Steps'', ''Rope Swing'', ''Rolling Barrel''], ''obstacle_order'': [1, 2, 3]}}}

  <end of data example format>


  <start of data details format>

  obstacle courses in ninja warrior

  games

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Column chart that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Column chart that
  utilizes all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 50 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Treemap'
- '* Pie chart'
- '* Histogram'
- '* Heatmap'
- '* Column chart'
2. initial_prompt: !!python/tuple
- Please create a column chart that displays the number of times each obstacle, by
  name, appears in different seasons in the Ninja Warrior qualifying round.
- 406
- 378
- 28
