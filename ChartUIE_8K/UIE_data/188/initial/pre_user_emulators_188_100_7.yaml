1-1. selected_chart_types: !!python/tuple
- "Bar chart  \nColumn chart  \nGrouped bar/column chart  \nHeatmap  \nScatter plot\
  \  \nStacked bar/column chart  \nPie chart  \nDonut chart  \nLine chart  \nHistogram"
- 900
- 864
- 36
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 724
- 585
- 139
1-3. asking_user_emulator_for_initial_prompt: "You are an expert user emulator.\n\n\
  <start of data example format>\n{'../Extra_datas/data/188.csv': {'summary': {'Column':\
  \ ['Rank', 'Youtuber', 'Subscribers', 'Video Views', 'Video Count', 'Category',\
  \ 'Started'], 'Data Type': [dtype('int64'), dtype('O'), dtype('int64'), dtype('float64'),\
  \ dtype('int64'), dtype('O'), dtype('int64')], 'Missing Values': [0, 0, 0, 0, 0,\
  \ 43, 0], 'Unique Values': [1000, 999, 318, 992, 885, 17, 21]}, 'sample_data': {'Rank':\
  \ [1, 2, 3], 'Youtuber': ['MrBeast', 'T-Series', 'YouTube Movies'], 'Subscribers':\
  \ [284000000, 268000000, 181000000], 'Video Views': [52402898889.0, 258624000000.0,\
  \ 0.0], 'Video Count': [803, 21237, 0], 'Category': ['Entertainment', 'Music', 'Film\
  \ & Animation'], 'Started': [2012, 2006, 2015]}}}\n<end of data example format>\n\
  \n<start of data details format>\nTop 1000 YouTube Channels in the World \U0001F310\
  \U0001F4CA\U0001F3A5\nonline-communities\n<end of data details format>\n\nGiven\
  \ a data format, imagine a chart that visualizes this data as the final output you\
  \ want from the service provider.\nYou need to imagine a chart with Column chart\
  \ that utilizes the data format.\nIf there are multiple given data formats, imagine\
  \ a chart with Column chart that utilizes all the data formats.\nSince you are an\
  \ amateur user, your instruction will be partially SUBJECTIVE and NOT DETAILED.\n\
  Also, refer to the data details to create as practical and realistic instructions\
  \ as possible.\nInstructions must reflect the context of the data.\nTo emulate a\
  \ real-world user your instruction should be 100 in size (word count).\nYour response\
  \ should ONLY contain the user emulated instruction.\nDo not include anything else."
1-4. total_chart_types:
- Bar chart
- Grouped bar/column chart
- Donut chart
- Pie chart
- Heatmap
- Histogram
- Line chart
- Column chart
- Scatter plot
- Stacked bar/column chart
- Bar chart
- Grouped bar/column chart
- Donut chart
- Pie chart
- Heatmap
- Histogram
- Line chart
- Column chart
2. initial_prompt: !!python/tuple
- "Please create a column chart based on the dataset titled \"Top 1000 YouTube Channels\
  \ in the World.\" The chart should display the top 10 YouTube channels, showing\
  \ their 'Subscribers' count on the Y-axis and the channels\u2019 names on the X-axis.\
  \ Use different colors for each bar to represent the 'Category' each channel belongs\
  \ to. This visualization will help to compare the subscriber count and initial category\
  \ distribution among these top channels."
- 547
- 458
- 89
