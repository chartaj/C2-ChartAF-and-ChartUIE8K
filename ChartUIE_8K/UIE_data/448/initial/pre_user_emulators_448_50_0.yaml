1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Stacked bar/column chart

  * Radar chart

  * Heatmap

  * Scatter plot

  * Donut chart

  * Line chart

  * Box chart

  * Choropleth map'
- 1027
- 985
- 42
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n2. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 833
- 694
- 139
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/448.csv': {'summary': {'Column':\
  \ ['Country', 'Red Meat', 'White Meat', 'Eggs', 'Milk', 'Fish', 'Cereals', 'Starch',\
  \ 'Nuts', 'Fruits & Vegetables'], 'Data Type': [dtype('O'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64')], 'Missing Values': [0, 0, 0, 0, 0, 0, 0, 0,\
  \ 0, 0], 'Unique Values': [25, 23, 25, 17, 24, 23, 25, 22, 22, 21]}, 'sample_data':\
  \ {'Country': ['Albania', 'Austria', 'Belgium'], 'Red Meat': [10.1, 8.9, 13.5],\
  \ 'White Meat': [1.4, 14.0, 9.3], 'Eggs': [0.5, 4.3, 4.1], 'Milk': [8.9, 19.9, 17.5],\
  \ 'Fish': [0.2, 2.1, 4.5], 'Cereals': [42.3, 28.0, 26.6], 'Starch': [0.6, 3.6, 5.7],\
  \ 'Nuts': [5.5, 1.3, 2.1], 'Fruits & Vegetables': [1.7, 4.3, 4.0]}}}\n<end of data\
  \ example format>\n\n<start of annotations format>\n['<start of the annotation list>',\
  \ '1. Text Annotations:', 'Description: Data-driven text annotations display values\
  \ linked to chart elements, such as data points in a scatterplot. They draw attention\
  \ to specific elements by highlighting their values.', 'Purpose: When only some\
  \ elements are annotated, the intent is to focus the viewer\u2019s attention on\
  \ those before examining others.', 'Other Uses: Non-data-driven annotations can\
  \ provide context, orientation, or editorial comments.', '2. Highlights:', 'Description:\
  \ Highlights modify the appearance of chart elements (e.g., size, color) to emphasize\
  \ or reduce their importance.', 'Purpose: Used to distinguish certain elements from\
  \ others, making them stand out visually', '<end of the annotation list>']\n<end\
  \ of annotations format>\n\n<start of data details format>\neach country food data\n\
  food-and-drink\n<end of data details format>\n\nGiven a data format, imagine a chart\
  \ that visualizes this data as the final output you want from the service provider.\n\
  Consider what purpose the data has and the practical purpose of visualization and\
  \ include it in the instructions.\nYou need to imagine a chart with * Donut chart\
  \ and given annotations that utilizes the data format.\nIf there are multiple given\
  \ data formats, imagine a chart with * Donut chart and given annotations that utilizes\
  \ all the data formats.\nSince you are an amateur user, your instruction will be\
  \ partially SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details to create\
  \ as practical and realistic instructions as possible.\nInstructions must reflect\
  \ the context of the data.\nTo emulate a real-world user your instruction should\
  \ be 50 in size (word count). Do not include data path in the instruction.\nYour\
  \ response should ONLY contain the user emulated instruction.\nDo not include anything\
  \ else."
1-4. total_chart_types:
- '* Donut chart'
2. initial_prompt: !!python/tuple
- Create a donut chart displaying the percentage distribution of different food types
  consumed by each country. Emphasize Red Meat and Milk consumption using highlights.
  Include text annotations for countries with the highest and lowest Red Meat consumption.
- 807
- 765
- 42
