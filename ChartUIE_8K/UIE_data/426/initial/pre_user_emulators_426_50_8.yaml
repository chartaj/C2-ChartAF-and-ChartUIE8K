1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Lollipop chart

  * Heatmap

  * Scatter plot

  * Stacked bar/column chart

  * Pie chart

  * Line chart

  * Histogram

  * Box chart'
- 1326
- 1283
- 43
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list> "
- 1131
- 991
- 140
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/426.csv'': {''summary'': {''Column'': [''index'', ''name'',
  ''name_full'', ''birth'', ''death'', ''birth_cty'', ''birth_prv'', ''rise'', ''reign_start'',
  ''reign_end'', ''cause'', ''killer'', ''dynasty'', ''era'', ''notes'', ''verif_who''],
  ''Data Type'': [dtype(''int64''), dtype(''O''), dtype(''O''), dtype(''O''), dtype(''O''),
  dtype(''O''), dtype(''O''), dtype(''O''), dtype(''O''), dtype(''O''), dtype(''O''),
  dtype(''O''), dtype(''O''), dtype(''O''), dtype(''O''), dtype(''O'')], ''Missing
  Values'': [0, 0, 0, 5, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 22, 57], ''Unique Values'':
  [68, 68, 67, 60, 66, 30, 18, 8, 57, 65, 7, 14, 8, 2, 23, 2]}, ''sample_data'': {''index'':
  [1, 2, 3], ''name'': [''Augustus'', ''Tiberius'', ''Caligula''], ''name_full'':
  [''IMPERATOR CAESAR DIVI FILIVS AVGVSTVS'', ''TIBERIVS CAESAR DIVI AVGVSTI FILIVS
  AVGVSTVS'', ''GAIVS IVLIVS CAESAR AVGVSTVS GERMANICVS''], ''birth'': [''0062-09-23'',
  ''0041-11-16'', ''0012-08-31''], ''death'': [''0014-08-19'', ''0037-03-16'', ''0041-01-24''],
  ''birth_cty'': [''Rome'', ''Rome'', ''Antitum''], ''birth_prv'': [''Italia'', ''Italia'',
  ''Italia''], ''rise'': [''Birthright'', ''Birthright'', ''Birthright''], ''reign_start'':
  [''0026-01-16'', ''0014-09-18'', ''0037-03-18''], ''reign_end'': [''0014-08-19'',
  ''0037-03-16'', ''0041-01-24''], ''cause'': [''Assassination'', ''Assassination'',
  ''Assassination''], ''killer'': [''Wife'', ''Other Emperor'', ''Senate''], ''dynasty'':
  [''Julio-Claudian'', ''Julio-Claudian'', ''Julio-Claudian''], ''era'': [''Principate'',
  ''Principate'', ''Principate''], ''notes'': [''birth, reign.start are BCE. Assign
  negative for correct ISO 8601 dates. Cause may have been Natural'', ''birth is BCE.
  Assign negative for correct ISO 8601 dates. Possibly assassinated by praetorian
  guard'', ''assassination may have only involved the Praetorian Guard''], ''verif_who'':
  [''Reddit user zonination'', ''Reddit user zonination'', ''Reddit user zonination'']}}}

  <end of data example format>


  <start of data details format>

  The Emperors of Rome

  history

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Stacked bar/column chart that utilizes the data
  format.

  If there are multiple given data formats, imagine a chart with * Stacked bar/column
  chart that utilizes all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 50 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Line chart'
- '* Pie chart'
- '* Lollipop chart'
- '* Bar chart'
- '* Column chart'
- '* Histogram'
- '* Heatmap'
- '* Box chart'
- '* Stacked bar/column chart'
2. initial_prompt: !!python/tuple
- Create a stacked bar chart depicting the duration of reign for each Roman Emperor.
  Use colors to differentiate between causes of death and display birth city on the
  Y-axis. Include dynasty and verification source in the legend.
- 915
- 874
- 41
