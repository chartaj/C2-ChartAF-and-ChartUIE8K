1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Grouped bar/column chart

  * Dot plot

  * Radar chart

  * Scatter plot

  * Bubble chart

  * Stacked bar/column chart

  * Donut chart

  * Treemap'
- 788
- 740
- 48
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n  \n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 593
- 454
- 139
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/388.csv': {'summary': {'Column':\
  \ ['Country', 'CO2Emissions', 'ForestArea'], 'Data Type': [dtype('O'), dtype('int64'),\
  \ dtype('int64')], 'Missing Values': [0, 0, 0], 'Unique Values': [10, 10, 10]},\
  \ 'sample_data': {'Country': ['United States', 'China', 'India'], 'CO2Emissions':\
  \ [5000, 9000, 3000], 'ForestArea': [3100000, 2080000, 710000]}}}\n<end of data\
  \ example format>\n\n<start of annotations format>\n['<start of the annotation list>',\
  \ '1. Text Annotations:', 'Description: Data-driven text annotations display values\
  \ linked to chart elements, such as data points in a scatterplot. They draw attention\
  \ to specific elements by highlighting their values.', 'Purpose: When only some\
  \ elements are annotated, the intent is to focus the viewer\u2019s attention on\
  \ those before examining others.', 'Other Uses: Non-data-driven annotations can\
  \ provide context, orientation, or editorial comments.', '3. Highlights:', 'Description:\
  \ Highlights modify the appearance of chart elements (e.g., size, color) to emphasize\
  \ or reduce their importance.', 'Purpose: Used to distinguish certain elements from\
  \ others, making them stand out visually', '<end of the annotation list>']\n<end\
  \ of annotations format>\n\n<start of data details format>\nCO2 Emissions and Forest\
  \ Area by Country\nenvironmental-science\n<end of data details format>\n\nGiven\
  \ a data format, imagine a chart that visualizes this data as the final output you\
  \ want from the service provider.\nConsider what purpose the data has and the practical\
  \ purpose of visualization and include it in the instructions.\nYou need to imagine\
  \ a chart with * Bar chart and given annotations that utilizes the data format.\n\
  If there are multiple given data formats, imagine a chart with * Bar chart and given\
  \ annotations that utilizes all the data formats.\nSince you are an amateur user,\
  \ your instruction will be partially SUBJECTIVE and NOT DETAILED.\nAlso, refer to\
  \ the data details to create as practical and realistic instructions as possible.\n\
  Instructions must reflect the context of the data.\nTo emulate a real-world user\
  \ your instruction should be 50 in size (word count). Do not include data path in\
  \ the instruction.\nYour response should ONLY contain the user emulated instruction.\n\
  Do not include anything else."
1-4. total_chart_types:
- '* Donut chart'
- '* Bar chart'
2. initial_prompt: !!python/tuple
- '<start of chart instructions>

  Create a bar chart visualizing CO2 Emissions and Forest Area by Country. Use text
  annotations to highlight the top emitters. Highlight countries with the largest
  forest areas to emphasize their environmental status.

  <end of chart instructions>'
- 574
- 523
- 51
