1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Line chart

  * Candlestick chart

  * Scatter plot

  * Area chart

  * Box chart

  * Density plot

  * Histogram

  * Heatmap'
- 975
- 936
- 39
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 785
- 647
- 138
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/104.csv': {'summary': {'Column':\
  \ ['Date', 'Open', 'High', 'Low', 'Close', 'Adj Close', 'Volume'], 'Data Type':\
  \ [dtype('O'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('int64')], 'Missing Values': [0, 0, 0, 0, 0, 0, 0], 'Unique\
  \ Values': [653, 574, 591, 598, 583, 583, 651]}, 'sample_data': {'Date': ['2019-04-12',\
  \ '2019-04-15', '2019-04-16'], 'Open': [18.950000762939453, 26.940000534057617,\
  \ 35.33000183105469], 'High': [25.459999084472656, 39.95000076293945, 43.5], 'Low':\
  \ [18.260000228881836, 25.6299991607666, 33.099998474121094], 'Close': [25.459999084472656,\
  \ 31.90999984741211, 43.040000915527344], 'Adj Close': [25.459999084472656, 31.90999984741211,\
  \ 43.040000915527344], 'Volume': [9472300, 12857300, 12939400]}}}\n<end of data\
  \ example format>\n\n<start of annotations format>\n['<start of the annotation list>',\
  \ '1. Text Annotations:', 'Description: Data-driven text annotations display values\
  \ linked to chart elements, such as data points in a scatterplot. They draw attention\
  \ to specific elements by highlighting their values.', 'Purpose: When only some\
  \ elements are annotated, the intent is to focus the viewer\u2019s attention on\
  \ those before examining others.', 'Other Uses: Non-data-driven annotations can\
  \ provide context, orientation, or editorial comments.', '3. Highlights:', 'Description:\
  \ Highlights modify the appearance of chart elements (e.g., size, color) to emphasize\
  \ or reduce their importance.', 'Purpose: Used to distinguish certain elements from\
  \ others, making them stand out visually', '<end of the annotation list>']\n<end\
  \ of annotations format>\n\n<start of data details format>\nJumia Stock Data Price\
  \ (Updated All Time)\nbusiness\n<end of data details format>\n\nGiven a data format,\
  \ imagine a chart that visualizes this data as the final output you want from the\
  \ service provider.\nConsider what purpose the data has and the practical purpose\
  \ of visualization and include it in the instructions.\nYou need to imagine a chart\
  \ with * Heatmap and given annotations that utilizes the data format.\nIf there\
  \ are multiple given data formats, imagine a chart with * Heatmap and given annotations\
  \ that utilizes all the data formats.\nSince you are an amateur user, your instruction\
  \ will be partially SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details\
  \ to create as practical and realistic instructions as possible.\nInstructions must\
  \ reflect the context of the data.\nTo emulate a real-world user your instruction\
  \ should be 100 in size (word count). Do not include data path in the instruction.\n\
  Your response should ONLY contain the user emulated instruction.\nDo not include\
  \ anything else."
1-4. total_chart_types:
- '* Heatmap'
- '* Bar chart'
- '* Histogram'
- '* Area chart'
- '* Scatter plot'
- '* Line chart'
- '* Candlestick chart'
- '* Box chart'
- '* Density plot'
- '* Column chart'
- '* Heatmap'
2. initial_prompt: !!python/tuple
- Create a heatmap to visualize Jumia's stock price variations over time based on
  the given data. Use the 'Date' on the x-axis and 'Close' prices on the y-axis. Highlight
  significant price changes and annotate key dates where the stock prices peaked or
  dropped significantly. Include color gradients to show the intensity of price changes.
  The practical purpose is to easily identify trends and volatility in Jumia's stock
  prices, helping investors and analysts make informed decisions. Use highlights to
  distinguish important data points, drawing viewers' attention to crucial market
  movements.
- 825
- 716
- 109
