1-1. selected_chart_types: !!python/tuple
- '* Line chart

  * Bar chart

  * Scatter plot

  * Candlestick chart

  * Heatmap'
- 819
- 799
- 20
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n2. Shapes:\n\
  Description: Shape annotations include lines, arrows, rectangles, and other shapes.\
  \ They can highlight or enclose specific chart elements to emphasize or compare\
  \ them.\nData-Driven Use: Some shapes, like trend lines, are calculated from the\
  \ underlying data.\n<end of the annotation list>"
- 656
- 509
- 147
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/252.csv': {'summary': {'Column':\
  \ ['Year', 'Open', 'High', 'Low', 'Close'], 'Data Type': [dtype('int64'), dtype('O'),\
  \ dtype('O'), dtype('O'), dtype('O')], 'Missing Values': [0, 0, 0, 0, 0], 'Unique\
  \ Values': [7, 354, 359, 356, 359]}, 'sample_data': {'Year': [2023, 2022, 2021],\
  \ 'Open': ['25,534', '24,941', '25,860'], 'High': ['26,446', '25,471', '26,044'],\
  \ 'Low': ['25,222', '24,801', '24,900'], 'Close': ['26,382', '25,439', '24,941']}}}\n\
  <end of data example format>\n\n<start of annotations format>\n['<start of the annotation\
  \ list>', '1. Text Annotations:', 'Description: Data-driven text annotations display\
  \ values linked to chart elements, such as data points in a scatterplot. They draw\
  \ attention to specific elements by highlighting their values.', 'Purpose: When\
  \ only some elements are annotated, the intent is to focus the viewer\u2019s attention\
  \ on those before examining others.', 'Other Uses: Non-data-driven annotations can\
  \ provide context, orientation, or editorial comments.', '2. Shapes:', 'Description:\
  \ Shape annotations include lines, arrows, rectangles, and other shapes. They can\
  \ highlight or enclose specific chart elements to emphasize or compare them.', 'Data-Driven\
  \ Use: Some shapes, like trend lines, are calculated from the underlying data.',\
  \ '<end of the annotation list>']\n<end of annotations format>\n\n<start of data\
  \ details format>\nBitcoin USD Stock Market \ncryptocurrency-and-blockchain\n<end\
  \ of data details format>\n\nGiven a data format, imagine a chart that visualizes\
  \ this data as the final output you want from the service provider.\nConsider what\
  \ purpose the data has and the practical purpose of visualization and include it\
  \ in the instructions.\nYou need to imagine a chart with * Heatmap and given annotations\
  \ that utilizes the data format.\nIf there are multiple given data formats, imagine\
  \ a chart with * Heatmap and given annotations that utilizes all the data formats.\n\
  Since you are an amateur user, your instruction will be partially SUBJECTIVE and\
  \ NOT DETAILED.\nAlso, refer to the data details to create as practical and realistic\
  \ instructions as possible.\nInstructions must reflect the context of the data.\n\
  To emulate a real-world user your instruction should be 50 in size (word count).\
  \ Do not include data path in the instruction.\nYour response should ONLY contain\
  \ the user emulated instruction.\nDo not include anything else."
1-4. total_chart_types:
- '* Scatter plot'
- '* Heatmap'
2. initial_prompt: !!python/tuple
- Generate a labeled heatmap to show Bitcoin stock prices (open, high, low, close)
  from 2021-2023. Highlight the highest and lowest values with annotations and trend
  lines to illustrate market trends.
- 630
- 587
- 43
