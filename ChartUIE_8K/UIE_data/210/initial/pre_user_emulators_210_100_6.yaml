1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Scatter plot

  * Pie chart

  * Line chart

  * Histogram

  * Box chart'
- 900
- 874
- 26
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 724
- 585
- 139
1-3. asking_user_emulator_for_initial_prompt: "You are an expert user emulator.\n\n\
  <start of data example format>\n{'../Extra_datas/data/210.csv': {'summary': {'Column':\
  \ ['rank', 'Youtuber', 'subscribers', 'video views', 'video count', 'category',\
  \ 'started'], 'Data Type': [dtype('int64'), dtype('O'), dtype('O'), dtype('O'),\
  \ dtype('O'), dtype('O'), dtype('int64')], 'Missing Values': [0, 0, 0, 0, 0, 27,\
  \ 0], 'Unique Values': [1000, 999, 286, 991, 856, 18, 18]}, 'sample_data': {'rank':\
  \ [1, 2, 3], 'Youtuber': ['T-Series', 'YouTube Movies', 'Cocomelon - Nursery Rhymes'],\
  \ 'subscribers': ['222,000,000', '154,000,000', '140,000,000'], 'video views': ['198,459,090,822',\
  \ '0', '135,481,339,848'], 'video count': ['17,317', '0', '786'], 'category': ['Music',\
  \ 'Film & Animation', 'Education'], 'started': [2006, 2015, 2006]}}}\n<end of data\
  \ example format>\n\n<start of data details format>\nMost Subscribed YouTube Channels\
  \ \nonline-communities\n<end of data details format>\n\nGiven a data format, imagine\
  \ a chart that visualizes this data as the final output you want from the service\
  \ provider.\nYou need to imagine a chart with * Scatter plot that utilizes the data\
  \ format.\nIf there are multiple given data formats, imagine a chart with * Scatter\
  \ plot that utilizes all the data formats.\nSince you are an amateur user, your\
  \ instruction will be partially SUBJECTIVE and NOT DETAILED.\nAlso, refer to the\
  \ data details to create as practical and realistic instructions as possible.\n\
  Instructions must reflect the context of the data.\nTo emulate a real-world user\
  \ your instruction should be 100 in size (word count).\nYour response should ONLY\
  \ contain the user emulated instruction.\nDo not include anything else."
1-4. total_chart_types:
- '* Box chart'
- '* Histogram'
- '* Pie chart'
- '* Bar chart'
- '* Column chart'
- '* Line chart'
- '* Scatter plot'
- '* Box chart'
- '* Histogram'
- '* Pie chart'
- '* Bar chart'
- '* Column chart'
- '* Line chart'
- '* Scatter plot'
2. initial_prompt: !!python/tuple
- Please create a scatter plot visualizing the most subscribed YouTube channels data.
  Use "subscribers" on the x-axis and "video views" on the y-axis. Label the points
  with the "Youtuber" names. Ensure that the data points are easily distinguishable
  and that the chart clearly shows trends between the number of subscribers and video
  views. Since "category" might provide additional insights, use different colors
  or shapes to represent different categories. Make sure to handle any missing or
  zero values appropriately to ensure the chart is as informative as possible.
- 570
- 460
- 110
