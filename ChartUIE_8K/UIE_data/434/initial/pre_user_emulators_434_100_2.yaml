1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Scatter plot

  * Stacked bar/column chart

  * Line chart

  * Histogram

  * Geographic heatmap

  * Bubble chart

  * Box chart'
- 1317
- 1278
- 39
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 1130
- 992
- 138
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/434.csv': {'summary': {'Column':\
  \ ['edition', 'start_date', 'winner_name', 'winner_team', 'distance', 'time_overall',\
  \ 'time_margin', 'stage_wins', 'stages_led', 'height', 'weight', 'age', 'born',\
  \ 'died', 'full_name', 'nickname', 'birth_town', 'birth_country', 'nationality'],\
  \ 'Data Type': [dtype('int64'), dtype('O'), dtype('O'), dtype('O'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('int64'), dtype('int64'), dtype('float64'),\
  \ dtype('float64'), dtype('int64'), dtype('O'), dtype('O'), dtype('O'), dtype('O'),\
  \ dtype('O'), dtype('O'), dtype('O')], 'Missing Values': [0, 0, 0, 0, 0, 8, 8, 0,\
  \ 0, 40, 39, 0, 0, 50, 60, 32, 0, 0, 0], 'Unique Values': [106, 106, 63, 48, 102,\
  \ 98, 42, 9, 22, 19, 19, 15, 63, 38, 23, 37, 58, 15, 14]}, 'sample_data': {'edition':\
  \ [1, 2, 3], 'start_date': ['1903-07-01', '1904-07-02', '1905-07-09'], 'winner_name':\
  \ ['Maurice Garin', 'Henri Cornet', 'Louis Trousselier'], 'winner_team': ['La Fran\xE7\
  aise', 'Conte', 'Peugeot\u2013Wolber'], 'distance': [2428.0, 2428.0, 2994.0], 'time_overall':\
  \ [94.55388888888888, 96.09861111111113, nan], 'time_margin': [2.9891666666666667,\
  \ 2.2705555555555557, nan], 'stage_wins': [3, 1, 5], 'stages_led': [6, 3, 10], 'height':\
  \ [1.62, nan, nan], 'weight': [60.0, nan, nan], 'age': [32, 19, 24], 'born': ['1871-03-03',\
  \ '1884-08-04', '1881-06-29'], 'died': ['1957-02-19', '1941-03-18', '1939-04-24'],\
  \ 'full_name': [nan, nan, nan], 'nickname': ['The Little Chimney-sweep', 'Le rigolo\
  \ (The joker)', 'Levaloy / Trou-trou'], 'birth_town': ['Arvier', 'Desvres', 'Paris'],\
  \ 'birth_country': ['Italy', 'France', 'France'], 'nationality': ['\\xa0France',\
  \ '\\xa0France', '\\xa0France']}}}\n<end of data example format>\n\n<start of annotations\
  \ format>\n['<start of the annotation list>', '1. Text Annotations:', 'Description:\
  \ Data-driven text annotations display values linked to chart elements, such as\
  \ data points in a scatterplot. They draw attention to specific elements by highlighting\
  \ their values.', 'Purpose: When only some elements are annotated, the intent is\
  \ to focus the viewer\u2019s attention on those before examining others.', 'Other\
  \ Uses: Non-data-driven annotations can provide context, orientation, or editorial\
  \ comments.', '3. Highlights:', 'Description: Highlights modify the appearance of\
  \ chart elements (e.g., size, color) to emphasize or reduce their importance.',\
  \ 'Purpose: Used to distinguish certain elements from others, making them stand\
  \ out visually', '<end of the annotation list>']\n<end of annotations format>\n\n\
  <start of data details format>\nTour de France 1903 2019\nsports-and-recreation\n\
  <end of data details format>\n\nGiven a data format, imagine a chart that visualizes\
  \ this data as the final output you want from the service provider.\nConsider what\
  \ purpose the data has and the practical purpose of visualization and include it\
  \ in the instructions.\nYou need to imagine a chart with * Scatter plot and given\
  \ annotations that utilizes the data format.\nIf there are multiple given data formats,\
  \ imagine a chart with * Scatter plot and given annotations that utilizes all the\
  \ data formats.\nSince you are an amateur user, your instruction will be partially\
  \ SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details to create as practical\
  \ and realistic instructions as possible.\nInstructions must reflect the context\
  \ of the data.\nTo emulate a real-world user your instruction should be 100 in size\
  \ (word count). Do not include data path in the instruction.\nYour response should\
  \ ONLY contain the user emulated instruction.\nDo not include anything else."
1-4. total_chart_types:
- '* Histogram'
- '* Stacked bar/column chart'
- '* Scatter plot'
- '* Column chart'
- '* Geographic heatmap'
- '* Line chart'
- '* Bubble chart'
- '* Bar chart'
- '* Box chart'
- '* Histogram'
- '* Stacked bar/column chart'
- '* Scatter plot'
2. initial_prompt: !!python/tuple
- 'Visualize a scatter plot for Tour de France winners (1903-2019). Plot ''age'' on
  the X-axis and ''time_overall'' or ''distance'' on the Y-axis. Use text annotations
  to highlight famous winners and significant records. Purpose: Understand age-performance
  trends and recognize notable racers. Highlight country of birth using different
  colors and sizes for emphasis. Provide contextual annotations like the oldest winner
  or largest time margin. Aim for an engaging visual narrative that draws attention
  to key historical moments and patterns in the race''s history.'
- 1168
- 1061
- 107
