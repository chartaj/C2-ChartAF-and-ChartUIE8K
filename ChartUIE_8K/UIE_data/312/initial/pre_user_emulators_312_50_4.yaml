1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Scatter plot

  * Stacked bar/column chart

  * Line chart

  * Histogram

  * Box chart'
- 1500
- 1474
- 26
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 1320
- 1182
- 138
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/312.csv'': {''summary'': {''Column'': [''sort_name'', ''clean_name'',
  ''album'', ''rank_2003'', ''rank_2012'', ''rank_2020'', ''differential'', ''release_year'',
  ''genre'', ''type'', ''weeks_on_billboard'', ''peak_billboard_position'', ''spotify_popularity'',
  ''spotify_url'', ''artist_member_count'', ''artist_gender'', ''artist_birth_year_sum'',
  ''debut_album_release_year'', ''ave_age_at_top_500'', ''years_between'', ''album_id''],
  ''Data Type'': [dtype(''O''), dtype(''O''), dtype(''O''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''int64''), dtype(''int64''), dtype(''O''), dtype(''O''),
  dtype(''float64''), dtype(''int64''), dtype(''float64''), dtype(''O''), dtype(''float64''),
  dtype(''O''), dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''O'')], ''Missing Values'': [0, 0, 0, 191, 191, 191, 0, 0, 164, 0, 119, 0,
  37, 36, 5, 5, 5, 5, 5, 5, 0], ''Unique Values'': [391, 386, 685, 498, 500, 500,
  464, 65, 16, 5, 168, 139, 71, 655, 12, 3, 270, 69, 172, 45, 691]}, ''sample_data'':
  {''sort_name'': [''Sinatra, Frank'', ''Diddley, Bo'', ''Presley, Elvis''], ''clean_name'':
  [''Frank Sinatra'', ''Bo Diddley'', ''Elvis Presley''], ''album'': [''In the Wee
  Small Hours'', ''Bo Diddley / Go Bo Diddley'', ''Elvis Presley''], ''rank_2003'':
  [100.0, 214.0, 55.0], ''rank_2012'': [101.0, 216.0, 56.0], ''rank_2020'': [282.0,
  455.0, 332.0], ''differential'': [-182, -241, -277], ''release_year'': [1955, 1955,
  1956], ''genre'': [''Big Band/Jazz'', "Rock n'' Roll/Rhythm & Blues", "Rock n''
  Roll/Rhythm & Blues"], ''type'': [''Studio'', ''Studio'', ''Studio''], ''weeks_on_billboard'':
  [14.0, nan, 100.0], ''peak_billboard_position'': [2, 201, 1], ''spotify_popularity'':
  [48.0, 50.0, 58.0], ''spotify_url'': [''spotify:album:3GmwKB1tgPZgXeRJZSm9WX'',
  ''spotify:album:1cbtDEwxCjMhglb49OgNBR'', ''spotify:album:7GXP5OhYyPVLmcVfO9Iqin''],
  ''artist_member_count'': [1.0, 1.0, 1.0], ''artist_gender'': [''Male'', ''Male'',
  ''Male''], ''artist_birth_year_sum'': [1915.0, 1928.0, 1935.0], ''debut_album_release_year'':
  [1946.0, 1955.0, 1956.0], ''ave_age_at_top_500'': [40.0, 27.0, 21.0], ''years_between'':
  [9.0, 0.0, 0.0], ''album_id'': [''3GmwKB1tgPZgXeRJZSm9WX'', ''1cbtDEwxCjMhglb49OgNBR'',
  ''7GXP5OhYyPVLmcVfO9Iqin'']}}}

  <end of data example format>


  <start of data details format>

  The Rolling Stone Album Rankings dataset

  music

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Histogram that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Histogram that
  utilizes all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 50 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Line chart'
- '* Scatter plot'
- '* Stacked bar/column chart'
- '* Bar chart'
- '* Histogram'
2. initial_prompt: !!python/tuple
- Create a histogram showcasing the differential counts from the Rolling Stone Album
  Rankings dataset. Ensure the x-axis represents the differential values and the y-axis
  shows the frequency.
- 1086
- 1055
- 31
