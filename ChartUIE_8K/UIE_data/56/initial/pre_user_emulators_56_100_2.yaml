1-1. selected_chart_types: !!python/tuple
- '* Line chart

  * Bar chart

  * Candlestick chart

  * Scatter plot

  * Heatmap

  * Box chart'
- 926
- 902
- 24
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 750
- 611
- 139
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/56.csv': {'summary': {'Column':\
  \ ['Date', 'Open', 'High', 'Low', 'Close', 'Adj Close', 'Volume'], 'Data Type':\
  \ [dtype('O'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('int64')], 'Missing Values': [0, 0, 0, 0, 0, 0, 0], 'Unique\
  \ Values': [10409, 5765, 5704, 5682, 5871, 7397, 9846]}, 'sample_data': {'Date':\
  \ ['1980-12-12', '1980-12-15', '1980-12-16'], 'Open': [0.128348, 0.12221, 0.113281],\
  \ 'High': [0.128906, 0.12221, 0.113281], 'Low': [0.128348, 0.121652, 0.112723],\
  \ 'Close': [0.128348, 0.121652, 0.112723], 'Adj Close': [0.100323, 0.095089, 0.08811],\
  \ 'Volume': [469033600, 175884800, 105728000]}}}\n<end of data example format>\n\
  \n<start of annotations format>\n['<start of the annotation list>', '1. Text Annotations:',\
  \ 'Description: Data-driven text annotations display values linked to chart elements,\
  \ such as data points in a scatterplot. They draw attention to specific elements\
  \ by highlighting their values.', 'Purpose: When only some elements are annotated,\
  \ the intent is to focus the viewer\u2019s attention on those before examining others.',\
  \ 'Other Uses: Non-data-driven annotations can provide context, orientation, or\
  \ editorial comments.', '3. Highlights:', 'Description: Highlights modify the appearance\
  \ of chart elements (e.g., size, color) to emphasize or reduce their importance.',\
  \ 'Purpose: Used to distinguish certain elements from others, making them stand\
  \ out visually', '<end of the annotation list>']\n<end of annotations format>\n\n\
  <start of data details format>\nAPPLE Stock Data\ncomputers-and-technology\n<end\
  \ of data details format>\n\nGiven a data format, imagine a chart that visualizes\
  \ this data as the final output you want from the service provider.\nConsider what\
  \ purpose the data has and the practical purpose of visualization and include it\
  \ in the instructions.\nYou need to imagine a chart with * Scatter plot and given\
  \ annotations that utilizes the data format.\nIf there are multiple given data formats,\
  \ imagine a chart with * Scatter plot and given annotations that utilizes all the\
  \ data formats.\nSince you are an amateur user, your instruction will be partially\
  \ SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details to create as practical\
  \ and realistic instructions as possible.\nInstructions must reflect the context\
  \ of the data.\nTo emulate a real-world user your instruction should be 100 in size\
  \ (word count). Do not include data path in the instruction.\nYour response should\
  \ ONLY contain the user emulated instruction.\nDo not include anything else."
1-4. total_chart_types:
- '* Bar chart'
- '* Heatmap'
- '* Scatter plot'
- '* Box chart'
- '* Line chart'
- '* Candlestick chart'
- '* Bar chart'
- '* Heatmap'
- '* Scatter plot'
2. initial_prompt: !!python/tuple
- Create a scatter plot to visualize the APPLE stock data. Each point should represent
  daily stock prices, plotting 'Date' on the x-axis and 'Close' on the y-axis. Use
  text annotations to display significant data points, such as the highest and lowest
  closing prices. Highlight recent trends by changing the color of points from the
  last month. The purpose is to help viewers quickly identify key performance patterns
  over different periods. This visualization will provide insights into stock price
  fluctuations, aiding in investment decisions. Ensure the chart is clear and informative
  for tech and financial analysts.
- 792
- 680
- 112
