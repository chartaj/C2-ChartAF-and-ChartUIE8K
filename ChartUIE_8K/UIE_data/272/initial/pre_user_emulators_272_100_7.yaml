1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Grouped bar/column chart

  * Line chart

  * Scatter plot

  * Bubble chart

  * Heatmap

  * Radar chart

  * Pie chart

  * Treemap

  * Area chart

  * Stacked area chart

  * Violin plot

  * Choropleth map'
- 938
- 874
- 64
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n  \n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 727
- 587
- 140
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/272.csv'': {''summary'': {''Column'': [''region'', ''category'',
  ''parameter'', ''mode'', ''powertrain'', ''year'', ''unit'', ''value''], ''Data
  Type'': [dtype(''O''), dtype(''O''), dtype(''O''), dtype(''O''), dtype(''O''), dtype(''int64''),
  dtype(''O''), dtype(''float64'')], ''Missing Values'': [0, 0, 0, 0, 0, 0, 0, 0],
  ''Unique Values'': [54, 3, 8, 5, 6, 17, 6, 1032]}, ''sample_data'': {''region'':
  [''Australia'', ''Australia'', ''Australia''], ''category'': [''Historical'', ''Historical'',
  ''Historical''], ''parameter'': [''EV stock share'', ''EV sales share'', ''EV sales''],
  ''mode'': [''Cars'', ''Cars'', ''Cars''], ''powertrain'': [''EV'', ''EV'', ''BEV''],
  ''year'': [2011, 2011, 2011], ''unit'': [''percent'', ''percent'', ''Vehicles''],
  ''value'': [0.000390000001062, 0.00650000013411, 49.0]}}}

  <end of data example format>


  <start of data details format>

  Global EV Sales: 2010-2024

  automobiles

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Stacked area chart that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Stacked area chart
  that utilizes all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 100 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Column chart'
- '* Heatmap'
- '* Line chart'
- '* Treemap'
- '* Bar chart'
- '* Pie chart'
- '* Area chart'
- '* Stacked area chart'
- '* Radar chart'
- '* Violin plot'
- '* Choropleth map'
- '* Scatter plot'
- '* Grouped bar/column chart'
- '* Bubble chart'
- '* Column chart'
- '* Heatmap'
- '* Line chart'
- '* Treemap'
- '* Bar chart'
- '* Pie chart'
- '* Area chart'
- '* Stacked area chart'
2. initial_prompt: !!python/tuple
- Create a stacked area chart that displays the historical and projected EV sales
  share by region and powertrain from 2010 to 2024. The x-axis should represent the
  years, and the y-axis should show the percentage of EV sales share. Different regions
  and powertrain types (like EV and BEV) should be color-coded to distinguish them.
  Ensure the data points for 'EV stock share', 'EV sales share', and 'EV sales' are
  accurately plotted and categorized. This will help us visualize the growth and trends
  in EV adoption globally and regionally over time. Use the dataset provided.
- 586
- 466
- 120
