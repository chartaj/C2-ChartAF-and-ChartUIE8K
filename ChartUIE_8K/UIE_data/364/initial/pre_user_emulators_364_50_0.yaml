1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Heatmap

  * Scatter plot

  * Stacked bar/column chart

  * Line chart

  * Histogram

  * Pie chart'
- 1000
- 970
- 30
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n  \n2. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 824
- 685
- 139
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/364.csv': {'summary': {'Column':\
  \ ['Unnamed: 0', 'ID', 'Title', 'Year', 'Age', 'Rotten Tomatoes', 'Netflix', 'Hulu',\
  \ 'Prime Video', 'Disney+', 'Type'], 'Data Type': [dtype('int64'), dtype('int64'),\
  \ dtype('O'), dtype('int64'), dtype('O'), dtype('O'), dtype('int64'), dtype('int64'),\
  \ dtype('int64'), dtype('int64'), dtype('int64')], 'Missing Values': [0, 0, 0, 0,\
  \ 4177, 7, 0, 0, 0, 0, 0], 'Unique Values': [9515, 9515, 9515, 103, 5, 85, 2, 2,\
  \ 2, 2, 1]}, 'sample_data': {'Unnamed: 0': [0, 1, 2], 'ID': [1, 2, 3], 'Title':\
  \ ['The Irishman', 'Dangal', 'David Attenborough: A Life on Our Planet'], 'Year':\
  \ [2019, 2016, 2020], 'Age': ['18+', '7+', '7+'], 'Rotten Tomatoes': ['98/100',\
  \ '97/100', '95/100'], 'Netflix': [1, 1, 1], 'Hulu': [0, 0, 0], 'Prime Video': [0,\
  \ 0, 0], 'Disney+': [0, 0, 0], 'Type': [0, 0, 0]}}}\n<end of data example format>\n\
  \n<start of annotations format>\n['<start of the annotation list>', '1. Text Annotations:',\
  \ 'Description: Data-driven text annotations display values linked to chart elements,\
  \ such as data points in a scatterplot. They draw attention to specific elements\
  \ by highlighting their values.', 'Purpose: When only some elements are annotated,\
  \ the intent is to focus the viewer\u2019s attention on those before examining others.',\
  \ 'Other Uses: Non-data-driven annotations can provide context, orientation, or\
  \ editorial comments.', '2. Highlights:', 'Description: Highlights modify the appearance\
  \ of chart elements (e.g., size, color) to emphasize or reduce their importance.',\
  \ 'Purpose: Used to distinguish certain elements from others, making them stand\
  \ out visually', '<end of the annotation list>']\n<end of annotations format>\n\n\
  <start of data details format>\nMovies on Netflix, Prime Video, Hulu and Disney+\n\
  online-communities\n<end of data details format>\n\nGiven a data format, imagine\
  \ a chart that visualizes this data as the final output you want from the service\
  \ provider.\nConsider what purpose the data has and the practical purpose of visualization\
  \ and include it in the instructions.\nYou need to imagine a chart with * Histogram\
  \ and given annotations that utilizes the data format.\nIf there are multiple given\
  \ data formats, imagine a chart with * Histogram and given annotations that utilizes\
  \ all the data formats.\nSince you are an amateur user, your instruction will be\
  \ partially SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details to create\
  \ as practical and realistic instructions as possible.\nInstructions must reflect\
  \ the context of the data.\nTo emulate a real-world user your instruction should\
  \ be 50 in size (word count). Do not include data path in the instruction.\nYour\
  \ response should ONLY contain the user emulated instruction.\nDo not include anything\
  \ else."
1-4. total_chart_types:
- '* Histogram'
2. initial_prompt: !!python/tuple
- Create a histogram showing the distribution of Rotten Tomatoes scores for movies
  across different streaming services. Highlight distinct Rotten Tomatoes score ranges.
  Include annotations to emphasize movies with 95+ ratings. Add descriptions for clarity.
- 792
- 752
- 40
