1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Heatmap

  * Pie chart

  * Line chart

  * Histogram'
- 1423
- 1405
- 18
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n  \n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 1254
- 1115
- 139
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/77.csv': {'summary': {'Column':\
  \ ['track_name', 'artist(s)_name', 'artist_count', 'released_year', 'released_month',\
  \ 'released_day', 'in_spotify_playlists', 'in_spotify_charts', 'streams', 'in_apple_playlists',\
  \ 'in_apple_charts', 'in_deezer_playlists', 'in_deezer_charts', 'in_shazam_charts',\
  \ 'bpm', 'key', 'mode', 'danceability_%', 'valence_%', 'energy_%', 'acousticness_%',\
  \ 'instrumentalness_%', 'liveness_%', 'speechiness_%'], 'Data Type': [dtype('O'),\
  \ dtype('O'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'),\
  \ dtype('int64'), dtype('O'), dtype('int64'), dtype('int64'), dtype('O'), dtype('int64'),\
  \ dtype('O'), dtype('int64'), dtype('O'), dtype('O'), dtype('int64'), dtype('int64'),\
  \ dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64')],\
  \ 'Missing Values': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 95, 0, 0, 0,\
  \ 0, 0, 0, 0, 0], 'Unique Values': [943, 645, 8, 50, 12, 31, 879, 82, 949, 234,\
  \ 172, 348, 34, 198, 124, 11, 2, 72, 94, 80, 98, 39, 68, 48]}, 'sample_data': {'track_name':\
  \ ['Seven (feat. Latto) (Explicit Ver.)', 'LALA', 'vampire'], 'artist(s)_name':\
  \ ['Latto, Jung Kook', 'Myke Towers', 'Olivia Rodrigo'], 'artist_count': [2, 1,\
  \ 1], 'released_year': [2023, 2023, 2023], 'released_month': [7, 3, 6], 'released_day':\
  \ [14, 23, 30], 'in_spotify_playlists': [553, 1474, 1397], 'in_spotify_charts':\
  \ [147, 48, 113], 'streams': ['141381703', '133716286', '140003974'], 'in_apple_playlists':\
  \ [43, 48, 94], 'in_apple_charts': [263, 126, 207], 'in_deezer_playlists': ['45',\
  \ '58', '91'], 'in_deezer_charts': [10, 14, 14], 'in_shazam_charts': ['826', '382',\
  \ '949'], 'bpm': [125, 92, 138], 'key': ['B', 'C#', 'F'], 'mode': ['Major', 'Major',\
  \ 'Major'], 'danceability_%': [80, 71, 51], 'valence_%': [89, 61, 32], 'energy_%':\
  \ [83, 74, 53], 'acousticness_%': [31, 7, 17], 'instrumentalness_%': [0, 0, 0],\
  \ 'liveness_%': [8, 10, 31], 'speechiness_%': [4, 4, 6]}}}\n<end of data example\
  \ format>\n\n<start of annotations format>\n['<start of the annotation list>', '1.\
  \ Text Annotations:', 'Description: Data-driven text annotations display values\
  \ linked to chart elements, such as data points in a scatterplot. They draw attention\
  \ to specific elements by highlighting their values.', 'Purpose: When only some\
  \ elements are annotated, the intent is to focus the viewer\u2019s attention on\
  \ those before examining others.', 'Other Uses: Non-data-driven annotations can\
  \ provide context, orientation, or editorial comments.', '3. Highlights:', 'Description:\
  \ Highlights modify the appearance of chart elements (e.g., size, color) to emphasize\
  \ or reduce their importance.', 'Purpose: Used to distinguish certain elements from\
  \ others, making them stand out visually', '<end of the annotation list>']\n<end\
  \ of annotations format>\n\n<start of data details format>\nMost Streamed Spotify\
  \ Songs 2023 \nmusic\n<end of data details format>\n\nGiven a data format, imagine\
  \ a chart that visualizes this data as the final output you want from the service\
  \ provider.\nConsider what purpose the data has and the practical purpose of visualization\
  \ and include it in the instructions.\nYou need to imagine a chart with * Heatmap\
  \ and given annotations that utilizes the data format.\nIf there are multiple given\
  \ data formats, imagine a chart with * Heatmap and given annotations that utilizes\
  \ all the data formats.\nSince you are an amateur user, your instruction will be\
  \ partially SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details to create\
  \ as practical and realistic instructions as possible.\nInstructions must reflect\
  \ the context of the data.\nTo emulate a real-world user your instruction should\
  \ be 100 in size (word count). Do not include data path in the instruction.\nYour\
  \ response should ONLY contain the user emulated instruction.\nDo not include anything\
  \ else."
1-4. total_chart_types:
- '* Heatmap'
- '* Pie chart'
- '* Line chart'
- '* Bar chart'
- '* Histogram'
- '* Heatmap'
2. initial_prompt: !!python/tuple
- I need a heatmap to visualize the Most Streamed Spotify Songs in 2023 using the
  provided data. Columns like 'stream', 'bpm', 'danceability_%', 'valence_%', 'energy_%',
  'acousticness_%', 'instrumentalness_%', 'liveness_%', and 'speechiness_%' are crucial.
  Highlight the highest and lowest values for immediate visibility. Add text annotations
  on specific high-stream songs to focus attention. The purpose is to easily identify
  trends and outliers in streaming metrics and musical attributes among top songs.
  This will help in analyzing the success factors in streamed music in 2023. Keep
  it clear and visually engaging.
- 1320
- 1184
- 136
