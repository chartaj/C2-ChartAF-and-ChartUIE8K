1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Grouped bar/column chart

  * Scatter plot

  * Stacked bar/column chart

  * Donut chart

  * Line chart

  * Histogram

  * Box chart'
- 806
- 763
- 43
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Highlights:\nDescription: Highlights modify\
  \ the appearance of chart elements (e.g., size, color) to emphasize or reduce their\
  \ importance.\nPurpose: Used to distinguish certain elements from others, making\
  \ them stand out visually\n\n3. Shapes:\nDescription: Shape annotations include\
  \ lines, arrows, rectangles, and other shapes. They can highlight or enclose specific\
  \ chart elements to emphasize or compare them.\nData-Driven Use: Some shapes, like\
  \ trend lines, are calculated from the underlying data.\n<end of the annotation\
  \ list>"
- 588
- 476
- 112
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/123.csv': {'summary': {'Column':\
  \ ['Period', 'Price', 'Number', 'Color'], 'Data Type': [dtype('int64'), dtype('int64'),\
  \ dtype('int64'), dtype('O')], 'Missing Values': [0, 0, 0, 0], 'Unique Values':\
  \ [9999, 9693, 10, 4]}, 'sample_data': {'Period': [20200729238, 20200729237, 20200729236],\
  \ 'Price': [86354, 86366, 86362], 'Number': [4, 6, 2], 'Color': ['Red', 'Red', 'Red']}}}\n\
  <end of data example format>\n\n<start of annotations format>\n['<start of the annotation\
  \ list>', '1. Highlights:', 'Description: Highlights modify the appearance of chart\
  \ elements (e.g., size, color) to emphasize or reduce their importance.', 'Purpose:\
  \ Used to distinguish certain elements from others, making them stand out visually',\
  \ '3. Shapes:', 'Description: Shape annotations include lines, arrows, rectangles,\
  \ and other shapes. They can highlight or enclose specific chart elements to emphasize\
  \ or compare them.', 'Data-Driven Use: Some shapes, like trend lines, are calculated\
  \ from the underlying data.', '<end of the annotation list>']\n<end of annotations\
  \ format>\n\n<start of data details format>\nWin-Go, Color_Prediction\narts-and-entertainment\n\
  <end of data details format>\n\nGiven a data format, imagine a chart that visualizes\
  \ this data as the final output you want from the service provider.\nConsider what\
  \ purpose the data has and the practical purpose of visualization and include it\
  \ in the instructions.\nYou need to imagine a chart with * Donut chart and given\
  \ annotations that utilizes the data format.\nIf there are multiple given data formats,\
  \ imagine a chart with * Donut chart and given annotations that utilizes all the\
  \ data formats.\nSince you are an amateur user, your instruction will be partially\
  \ SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details to create as practical\
  \ and realistic instructions as possible.\nInstructions must reflect the context\
  \ of the data.\nTo emulate a real-world user your instruction should be 100 in size\
  \ (word count). Do not include data path in the instruction.\nYour response should\
  \ ONLY contain the user emulated instruction.\nDo not include anything else."
1-4. total_chart_types:
- '* Stacked bar/column chart'
- '* Scatter plot'
- '* Donut chart'
- '* Box chart'
- '* Histogram'
- '* Line chart'
- '* Grouped bar/column chart'
- '* Bar chart'
- '* Column chart'
- '* Stacked bar/column chart'
- '* Scatter plot'
- '* Donut chart'
2. initial_prompt: !!python/tuple
- 'Create a donut chart to visualize the "Color" distribution from the dataset. Highlight
  the segments with contrasting colors to emphasize differences. Add arrows pointing
  to each color segment to provide additional context. This chart will help us understand
  the popularity of each color category within the arts and entertainment industry.
  Use labels for each segment and data-driven shapes to compare them effectively.  '
- 590
- 519
- 71
