1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Grouped bar/column chart

  * Dot plot

  * Table chart

  * Scatter plot

  * Bubble chart

  * Heatmap

  * Stacked bar/column chart

  * Treemap

  * Sunburst chart

  * Stacked area chart

  * Line chart

  * Histogram

  * Box chart

  * Geographic heatmap

  * Choropleth map'
- 1081
- 1001
- 80
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n2. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 848
- 709
- 139
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/282.csv'': {''summary'': {''Column'': [''Celebrity'', ''Name'',
  ''Nationality'', ''Gender'', ''Estimated Net Worth'', ''Age at end of 2023'', ''Birth
  Date'', ''Birth Month'', ''Birth Day'', ''Birth Year'', ''Industry''], ''Data Type'':
  [dtype(''O''), dtype(''O''), dtype(''O''), dtype(''O''), dtype(''int64''), dtype(''int64''),
  dtype(''O''), dtype(''O''), dtype(''int64''), dtype(''int64''), dtype(''O'')], ''Missing
  Values'': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ''Unique Values'': [499, 499, 40, 3,
  132, 69, 496, 12, 31, 71, 46]}, ''sample_data'': {''Celebrity'': [''Elon Musk'',
  ''Jeff Bezos'', ''Bill Gates''], ''Name'': [''Elon Reeve Musk'', ''Jeffrey Preston
  Jorgensen'', ''William Henry Gates III''], ''Nationality'': [''ZA'', ''US'', ''US''],
  ''Gender'': [''Male'', ''Male'', ''Male''], ''Estimated Net Worth'': [180000000000,
  110000000000, 115000000000], ''Age at end of 2023'': [52, 59, 68], ''Birth Date'':
  [''06/28/1971'', ''01/12/1964'', ''10/28/1955''], ''Birth Month'': [''June'', ''January'',
  ''October''], ''Birth Day'': [28, 12, 28], ''Birth Year'': [1971, 1964, 1955], ''Industry'':
  [''Entrepreneur, Technology'', ''Entrepreneur, Technology'', ''Entrepreneur, Technology'']}}}

  <end of data example format>


  <start of data details format>

  2023 Celebrity Net Worth

  astrology

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Grouped bar/column chart that utilizes the data
  format.

  If there are multiple given data formats, imagine a chart with * Grouped bar/column
  chart that utilizes all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 50 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Line chart'
- '* Bar chart'
- '* Scatter plot'
- '* Choropleth map'
- '* Sunburst chart'
- '* Box chart'
- '* Bubble chart'
- '* Geographic heatmap'
- '* Treemap'
- '* Dot plot'
- '* Column chart'
- '* Table chart'
- '* Grouped bar/column chart'
2. initial_prompt: !!python/tuple
- Create a grouped bar chart comparing the estimated net worth of the top three celebrities
  (Elon Musk, Jeff Bezos, Bill Gates) in 2023. Group the bars by nationality and use
  different colors to represent each celebrity. Show their birth month and industry
  on the x-axis.
- 648
- 592
- 56
