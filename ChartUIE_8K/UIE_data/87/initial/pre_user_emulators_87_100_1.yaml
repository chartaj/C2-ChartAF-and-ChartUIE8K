1-1. selected_chart_types: !!python/tuple
- "Bar chart  \nHeatmap  \nStacked bar/column chart  \nLine chart  \nHistogram"
- 1985
- 1968
- 17
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n2. Shapes:\n\
  Description: Shape annotations include lines, arrows, rectangles, and other shapes.\
  \ They can highlight or enclose specific chart elements to emphasize or compare\
  \ them.\nData-Driven Use: Some shapes, like trend lines, are calculated from the\
  \ underlying data.\n<end of the annotation list>"
- 1831
- 1683
- 148
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/87.csv': {'summary': {'Column':\
  \ ['gameId', 'blueWins', 'blueWardsPlaced', 'blueWardsDestroyed', 'blueFirstBlood',\
  \ 'blueKills', 'blueDeaths', 'blueAssists', 'blueEliteMonsters', 'blueDragons',\
  \ 'blueHeralds', 'blueTowersDestroyed', 'blueTotalGold', 'blueAvgLevel', 'blueTotalExperience',\
  \ 'blueTotalMinionsKilled', 'blueTotalJungleMinionsKilled', 'blueGoldDiff', 'blueExperienceDiff',\
  \ 'blueCSPerMin', 'blueGoldPerMin', 'redWardsPlaced', 'redWardsDestroyed', 'redFirstBlood',\
  \ 'redKills', 'redDeaths', 'redAssists', 'redEliteMonsters', 'redDragons', 'redHeralds',\
  \ 'redTowersDestroyed', 'redTotalGold', 'redAvgLevel', 'redTotalExperience', 'redTotalMinionsKilled',\
  \ 'redTotalJungleMinionsKilled', 'redGoldDiff', 'redExperienceDiff', 'redCSPerMin',\
  \ 'redGoldPerMin'], 'Data Type': [dtype('int64'), dtype('int64'), dtype('int64'),\
  \ dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'),\
  \ dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'),\
  \ dtype('float64'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'),\
  \ dtype('int64'), dtype('float64'), dtype('float64'), dtype('int64'), dtype('int64'),\
  \ dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'),\
  \ dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('float64'),\
  \ dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'),\
  \ dtype('float64'), dtype('float64')], 'Missing Values': [0, 0, 0, 0, 0, 0, 0, 0,\
  \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
  \ 0, 0, 0, 0, 0, 0], 'Unique Values': [9879, 2, 147, 27, 2, 21, 21, 30, 3, 2, 2,\
  \ 5, 4739, 17, 4143, 148, 74, 6047, 5356, 148, 4739, 151, 25, 2, 21, 21, 28, 3,\
  \ 2, 2, 3, 4732, 18, 4113, 153, 75, 6047, 5356, 153, 4732]}, 'sample_data': {'gameId':\
  \ [4519157822, 4523371949, 4521474530], 'blueWins': [0, 0, 0], 'blueWardsPlaced':\
  \ [28, 12, 15], 'blueWardsDestroyed': [2, 1, 0], 'blueFirstBlood': [1, 0, 0], 'blueKills':\
  \ [9, 5, 7], 'blueDeaths': [6, 5, 11], 'blueAssists': [11, 5, 4], 'blueEliteMonsters':\
  \ [0, 0, 1], 'blueDragons': [0, 0, 1], 'blueHeralds': [0, 0, 0], 'blueTowersDestroyed':\
  \ [0, 0, 0], 'blueTotalGold': [17210, 14712, 16113], 'blueAvgLevel': [6.6, 6.6,\
  \ 6.4], 'blueTotalExperience': [17039, 16265, 16221], 'blueTotalMinionsKilled':\
  \ [195, 174, 186], 'blueTotalJungleMinionsKilled': [36, 43, 46], 'blueGoldDiff':\
  \ [643, -2908, -1172], 'blueExperienceDiff': [-8, -1173, -1033], 'blueCSPerMin':\
  \ [19.5, 17.4, 18.6], 'blueGoldPerMin': [1721.0, 1471.2, 1611.3], 'redWardsPlaced':\
  \ [15, 12, 15], 'redWardsDestroyed': [6, 1, 3], 'redFirstBlood': [0, 1, 1], 'redKills':\
  \ [6, 5, 11], 'redDeaths': [9, 5, 7], 'redAssists': [8, 2, 14], 'redEliteMonsters':\
  \ [0, 2, 0], 'redDragons': [0, 1, 0], 'redHeralds': [0, 1, 0], 'redTowersDestroyed':\
  \ [0, 1, 0], 'redTotalGold': [16567, 17620, 17285], 'redAvgLevel': [6.8, 6.8, 6.8],\
  \ 'redTotalExperience': [17047, 17438, 17254], 'redTotalMinionsKilled': [197, 240,\
  \ 203], 'redTotalJungleMinionsKilled': [55, 52, 28], 'redGoldDiff': [-643, 2908,\
  \ 1172], 'redExperienceDiff': [8, 1173, 1033], 'redCSPerMin': [19.7, 24.0, 20.3],\
  \ 'redGoldPerMin': [1656.7, 1762.0, 1728.5]}}}\n<end of data example format>\n\n\
  <start of annotations format>\n['<start of the annotation list>', '1. Text Annotations:',\
  \ 'Description: Data-driven text annotations display values linked to chart elements,\
  \ such as data points in a scatterplot. They draw attention to specific elements\
  \ by highlighting their values.', 'Purpose: When only some elements are annotated,\
  \ the intent is to focus the viewer\u2019s attention on those before examining others.',\
  \ 'Other Uses: Non-data-driven annotations can provide context, orientation, or\
  \ editorial comments.', '2. Shapes:', 'Description: Shape annotations include lines,\
  \ arrows, rectangles, and other shapes. They can highlight or enclose specific chart\
  \ elements to emphasize or compare them.', 'Data-Driven Use: Some shapes, like trend\
  \ lines, are calculated from the underlying data.', '<end of the annotation list>']\n\
  <end of annotations format>\n\n<start of data details format>\nLeague of Legends\
  \ Diamond Ranked Games (10 min)\narts-and-entertainment\n<end of data details format>\n\
  \nGiven a data format, imagine a chart that visualizes this data as the final output\
  \ you want from the service provider.\nConsider what purpose the data has and the\
  \ practical purpose of visualization and include it in the instructions.\nYou need\
  \ to imagine a chart with Bar chart and given annotations that utilizes the data\
  \ format.\nIf there are multiple given data formats, imagine a chart with Bar chart\
  \ and given annotations that utilizes all the data formats.\nSince you are an amateur\
  \ user, your instruction will be partially SUBJECTIVE and NOT DETAILED.\nAlso, refer\
  \ to the data details to create as practical and realistic instructions as possible.\n\
  Instructions must reflect the context of the data.\nTo emulate a real-world user\
  \ your instruction should be 100 in size (word count). Do not include data path\
  \ in the instruction.\nYour response should ONLY contain the user emulated instruction.\n\
  Do not include anything else."
1-4. total_chart_types:
- Line chart
- Bar chart
- Histogram
- Stacked bar/column chart
- Heatmap
- Line chart
- Bar chart
2. initial_prompt: !!python/tuple
- Create a bar chart visualizing the number of kills, deaths, and assists for both
  blue and red teams from the provided League of Legends Diamond Ranked Games dataset.
  Highlight specific data points for notable games using text annotations, focusing
  on games where there is a significant difference in performance between the two
  teams. Use shape annotations like arrows to emphasize key differences or trends.
  Ensure the chart effectively communicates the competitive dynamics and player performance,
  aiding users in understanding how these metrics contribute to match outcomes.
- 1854
- 1759
- 95
