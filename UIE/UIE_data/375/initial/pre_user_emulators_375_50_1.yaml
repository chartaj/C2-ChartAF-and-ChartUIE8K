1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Grouped bar/column chart

  * Pie chart

  * Donut chart

  * Line chart

  * Area chart

  * Scatter plot

  * Box chart

  * Histogram'
- 843
- 800
- 43
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n2. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 646
- 507
- 139
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/375.csv': {'summary': {'Column':\
  \ ['year', 'sex', 'name', 'n', 'prop'], 'Data Type': [dtype('int64'), dtype('O'),\
  \ dtype('O'), dtype('int64'), dtype('float64')], 'Missing Values': [0, 0, 0, 0,\
  \ 0], 'Unique Values': [136, 1, 9, 970, 1160]}, 'sample_data': {'year': [1880, 1880,\
  \ 1880], 'sex': ['F', 'F', 'F'], 'name': ['Helen', 'Amanda', 'Betty'], 'n': [636,\
  \ 241, 117], 'prop': [0.0065161263882627, 0.0024691610999549, 0.0011987213638785]}}}\n\
  <end of data example format>\n\n<start of annotations format>\n['<start of the annotation\
  \ list>', '1. Text Annotations:', 'Description: Data-driven text annotations display\
  \ values linked to chart elements, such as data points in a scatterplot. They draw\
  \ attention to specific elements by highlighting their values.', 'Purpose: When\
  \ only some elements are annotated, the intent is to focus the viewer\u2019s attention\
  \ on those before examining others.', 'Other Uses: Non-data-driven annotations can\
  \ provide context, orientation, or editorial comments.', '2. Highlights:', 'Description:\
  \ Highlights modify the appearance of chart elements (e.g., size, color) to emphasize\
  \ or reduce their importance.', 'Purpose: Used to distinguish certain elements from\
  \ others, making them stand out visually', '<end of the annotation list>']\n<end\
  \ of annotations format>\n\n<start of data details format>\nEach person's income\
  \ over time\nbusiness\n<end of data details format>\n\nGiven a data format, imagine\
  \ a chart that visualizes this data as the final output you want from the service\
  \ provider.\nConsider what purpose the data has and the practical purpose of visualization\
  \ and include it in the instructions.\nYou need to imagine a chart with * Grouped\
  \ bar/column chart and given annotations that utilizes the data format.\nIf there\
  \ are multiple given data formats, imagine a chart with * Grouped bar/column chart\
  \ and given annotations that utilizes all the data formats.\nSince you are an amateur\
  \ user, your instruction will be partially SUBJECTIVE and NOT DETAILED.\nAlso, refer\
  \ to the data details to create as practical and realistic instructions as possible.\n\
  Instructions must reflect the context of the data.\nTo emulate a real-world user\
  \ your instruction should be 50 in size (word count). Do not include data path in\
  \ the instruction.\nYour response should ONLY contain the user emulated instruction.\n\
  Do not include anything else."
1-4. total_chart_types:
- '* Donut chart'
- '* Grouped bar/column chart'
2. initial_prompt: !!python/tuple
- Create a grouped bar chart to visualize income over time for different names. Highlight
  top 3 names with annotations indicating values. Use color to differentiate names
  and years for business insights.
- 619
- 584
- 35
