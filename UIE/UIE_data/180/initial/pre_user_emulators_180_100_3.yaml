1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Heatmap

  * Scatter plot

  * Stacked bar/column chart

  * Line chart

  * Histogram

  * Geographic heatmap'
- 1053
- 1022
- 31
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 872
- 733
- 139
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/180.csv'': {''summary'': {''Column'': [''Ranking'', ''Album'',
  ''Artist Name'', ''Release Date'', ''Genres'', ''Descriptors'', ''Average Rating'',
  ''Number of Ratings'', ''Number of Reviews''], ''Data Type'': [dtype(''float64''),
  dtype(''O''), dtype(''O''), dtype(''O''), dtype(''O''), dtype(''O''), dtype(''float64''),
  dtype(''O''), dtype(''int64'')], ''Missing Values'': [0, 0, 0, 0, 0, 114, 0, 0,
  0], ''Unique Values'': [5000, 4928, 2787, 2997, 2168, 4807, 77, 3364, 430]}, ''sample_data'':
  {''Ranking'': [1.0, 2.0, 3.0], ''Album'': [''OK Computer'', ''Wish You Were Here'',
  ''In the Court of the Crimson King''], ''Artist Name'': [''Radiohead'', ''Pink Floyd'',
  ''King Crimson''], ''Release Date'': [''16 June 1997'', ''12 September 1975'', ''10
  October 1969''], ''Genres'': [''Alternative Rock, Art Rock'', ''Progressive Rock,
  Art Rock'', ''Progressive Rock, Art Rock''], ''Descriptors'': [''melancholic, anxious,
  futuristic, alienation, existential, male vocals, atmospheric, lonely, cold, introspective'',
  ''melancholic, atmospheric, progressive, male vocals, concept album, introspective,
  serious, longing, bittersweet, meditative'', ''fantasy, epic, progressive, philosophical,
  complex, surreal, poetic, male vocals, melancholic, technical''], ''Average Rating'':
  [4.23, 4.29, 4.3], ''Number of Ratings'': [''70,382'', ''48,662'', ''44,943''],
  ''Number of Reviews'': [1531, 983, 870]}}}

  <end of data example format>


  <start of data details format>

  Top 5000 Albums of All Time Dataset

  music

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Histogram that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Histogram that
  utilizes all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 100 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Scatter plot'
- '* Geographic heatmap'
- '* Stacked bar/column chart'
- '* Histogram'
- '* Line chart'
- '* Heatmap'
- '* Bar chart'
- '* Scatter plot'
- '* Geographic heatmap'
- '* Stacked bar/column chart'
- '* Histogram'
2. initial_prompt: !!python/tuple
- Create a histogram displaying the distribution of average ratings for the top 5000
  albums of all time. The x-axis should represent the average rating ranges, and the
  y-axis should indicate the frequency of albums in each rating range. Ensure that
  the bins are set to capture the nuances in rating variations effectively. The histogram
  should help us understand how common different rating levels are among the top albums,
  making it easier to identify trends or patterns in album ratings within the music
  industry dataset. Please use the 'Average Rating' data for this visualization.
- 712
- 606
- 106
