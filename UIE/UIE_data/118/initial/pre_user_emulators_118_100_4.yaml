1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Grouped bar/column chart

  * Dot plot

  * Table chart

  * Scatter plot

  * Heatmap

  * Bubble chart

  * Stacked bar/column chart

  * Pie chart

  * Donut chart

  * Treemap

  * Line chart

  * Histogram

  * Box chart

  * Violin plot'
- 1105
- 1033
- 72
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n  \n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 878
- 739
- 139
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/118.csv'': {''summary'': {''Column'': [''Age'', ''Gender'',
  ''Total_Bilirubin'', ''Direct_Bilirubin'', ''Alkaline_Phosphotase'', ''Alamine_Aminotransferase'',
  ''Aspartate_Aminotransferase'', ''Total_Protiens'', ''Albumin'', ''Albumin_and_Globulin_Ratio'',
  ''Dataset''], ''Data Type'': [dtype(''int64''), dtype(''O''), dtype(''float64''),
  dtype(''float64''), dtype(''int64''), dtype(''int64''), dtype(''int64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''int64'')], ''Missing Values'': [0,
  0, 0, 0, 0, 0, 0, 0, 0, 4, 0], ''Unique Values'': [72, 2, 113, 80, 263, 152, 177,
  58, 40, 69, 2]}, ''sample_data'': {''Age'': [65, 62, 62], ''Gender'': [''Female'',
  ''Male'', ''Male''], ''Total_Bilirubin'': [0.7, 10.9, 7.3], ''Direct_Bilirubin'':
  [0.1, 5.5, 4.1], ''Alkaline_Phosphotase'': [187, 699, 490], ''Alamine_Aminotransferase'':
  [16, 64, 60], ''Aspartate_Aminotransferase'': [18, 100, 68], ''Total_Protiens'':
  [6.8, 7.5, 7.0], ''Albumin'': [3.3, 3.2, 3.3], ''Albumin_and_Globulin_Ratio'': [0.9,
  0.74, 0.89], ''Dataset'': [1, 1, 1]}}}

  <end of data example format>


  <start of data details format>

  Indian Liver Patient Records

  health

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Stacked bar/column chart that utilizes the data
  format.

  If there are multiple given data formats, imagine a chart with * Stacked bar/column
  chart that utilizes all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 100 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Bubble chart'
- '* Grouped bar/column chart'
- '* Scatter plot'
- '* Histogram'
- '* Stacked bar/column chart'
- '* Pie chart'
- '* Column chart'
- '* Violin plot'
- '* Dot plot'
- '* Box chart'
- '* Treemap'
- '* Line chart'
- '* Table chart'
- '* Donut chart'
- '* Bar chart'
- '* Bubble chart'
- '* Grouped bar/column chart'
- '* Scatter plot'
- '* Histogram'
- '* Stacked bar/column chart'
2. initial_prompt: !!python/tuple
- 'Please create a stacked column chart using the "Indian Liver Patient Records" dataset.
  The x-axis should represent the "Gender" column (Male and Female). For each gender
  group, stack the counts of different bilirubin levels ("Total_Bilirubin": low [0-1],
  moderate [1-3], high [3-10], very high [>10]). The y-axis should show the patient
  count. This visualization will help to understand the distribution of bilirubin
  levels across genders in liver patients. Ensure the chart is easy to interpret.
  Thank you!'
- 734
- 622
- 112
