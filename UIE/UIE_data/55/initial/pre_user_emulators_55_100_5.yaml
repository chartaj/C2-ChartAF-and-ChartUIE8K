1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Scatter plot

  * Line chart

  * Box chart

  * Heatmap

  * Pie chart'
- 955
- 932
- 23
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n  \n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 785
- 645
- 140
1-3. asking_user_emulator_for_initial_prompt: "You are an expert user emulator.\n\n\
  <start of data example format>\n{'../Extra_datas/data/55.csv': {'summary': {'Column':\
  \ ['sr', 'rr', 't', 'lm', 'bo', 'rem', 'sr.1', 'hr', 'sl'], 'Data Type': [dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('int64')], 'Missing Values': [0, 0,\
  \ 0, 0, 0, 0, 0, 0, 0], 'Unique Values': [627, 626, 626, 626, 626, 626, 501, 626,\
  \ 5]}, 'sample_data': {'sr': [93.8, 91.64, 60.0], 'rr': [25.68, 25.104, 20.0], 't':\
  \ [91.84, 91.552, 96.0], 'lm': [16.6, 15.88, 10.0], 'bo': [89.84, 89.552, 95.0],\
  \ 'rem': [99.6, 98.88, 85.0], 'sr.1': [1.84, 1.552, 7.0], 'hr': [74.2, 72.76, 60.0],\
  \ 'sl': [3, 3, 1]}}}\n<end of data example format>\n\n<start of data details format>\n\
  Human Stress Detection in and through Sleep \ncomputers-and-technology\n<end of\
  \ data details format>\n\nGiven a data format, imagine a chart that visualizes this\
  \ data as the final output you want from the service provider.\nYou need to imagine\
  \ a chart with * Pie chart that utilizes the data format.\nIf there are multiple\
  \ given data formats, imagine a chart with * Pie chart that utilizes all the data\
  \ formats.\nSince you are an amateur user, your instruction will be partially SUBJECTIVE\
  \ and NOT DETAILED.\nAlso, refer to the data details to create as practical and\
  \ realistic instructions as possible.\nInstructions must reflect the context of\
  \ the data.\nTo emulate a real-world user your instruction should be 100 in size\
  \ (word count).\nYour response should ONLY contain the user emulated instruction.\n\
  Do not include anything else."
1-4. total_chart_types:
- '* Box chart'
- '* Heatmap'
- '* Bar chart'
- '* Scatter plot'
- '* Line chart'
- '* Pie chart'
- '* Box chart'
- '* Heatmap'
- '* Bar chart'
- '* Scatter plot'
- '* Line chart'
- '* Pie chart'
2. initial_prompt: !!python/tuple
- Create a pie chart to visualize the distribution of unique values for the 'sl' column
  from the dataset on human stress detection during sleep. The chart should show the
  proportion of each unique value in the 'sl' column, which has 5 distinct values.
  This will help in understanding how the stress levels ('sl') are distributed among
  the different unique values. Additionally, include labels and percentages for each
  slice to clearly indicate the distribution of stress levels. Ensure the design is
  clear and easily interpretable.
- 619
- 520
- 99
