1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Grouped bar/column chart

  * Radar chart

  * Table chart

  * Heatmap

  * Scatter plot

  * Stacked bar/column chart

  * Pie chart

  * Treemap

  * Line chart

  * Histogram

  * Box chart

  * Geographic heatmap

  * Choropleth map'
- 1041
- 972
- 69
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 817
- 678
- 139
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/239.csv'': {''summary'': {''Column'': [''Country'', ''Population'',
  ''O+'', ''A+'', ''B+'', ''AB+'', ''O-'', ''A-'', ''B-'', ''AB-''], ''Data Type'':
  [dtype(''O''), dtype(''int64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64'')], ''Missing Values'': [0, 0, 0, 0, 0, 0, 1, 1, 1, 1], ''Unique
  Values'': [126, 126, 97, 92, 92, 77, 75, 70, 50, 37]}, ''sample_data'': {''Country'':
  [''Albania'', ''Algeria'', ''Argentina''], ''Population'': [3074579, 43576691, 45479118],
  ''O+'': [34.1, 40.0, 48.9], ''A+'': [31.2, 30.0, 31.54], ''B+'': [14.5, 15.0, 8.0],
  ''AB+'': [5.2, 4.25, 2.45], ''O-'': [6.0, 6.6, 4.9], ''A-'': [5.5, 2.3, 3.16], ''B-'':
  [2.6, 1.1, 0.8], ''AB-'': [0.9, 0.75, 0.25]}}}

  <end of data example format>


  <start of data details format>

  Global Blood Type Distribution

  health

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Choropleth map that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Choropleth map
  that utilizes all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 100 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Grouped bar/column chart'
- '* Bar chart'
- '* Scatter plot'
- '* Pie chart'
- '* Choropleth map'
- '* Line chart'
- '* Treemap'
- '* Radar chart'
- '* Geographic heatmap'
- '* Table chart'
- '* Box chart'
- '* Stacked bar/column chart'
- '* Column chart'
- '* Histogram'
- '* Heatmap'
- '* Grouped bar/column chart'
- '* Bar chart'
- '* Scatter plot'
- '* Pie chart'
- '* Choropleth map'
2. initial_prompt: !!python/tuple
- I need a Choropleth map visualizing global blood type distribution by country. Use
  data points such as O+, A+, B+, AB+, O-, A-, B-, AB- from the provided dataset.
  Each country should be colored based on the percentage prevalence of a particular
  blood type. Ensure it is easy to distinguish regions with different blood type distributions.
  Include a legend to interpret the color scale. Missing data points should be handled,
  showing them as a different color or pattern. The map should provide a clear visual
  comparison of blood types across countries globally.
- 668
- 557
- 111
