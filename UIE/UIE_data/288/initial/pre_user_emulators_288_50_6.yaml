1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Scatter plot

  * Heatmap

  * Pie chart

  * Line chart

  * Histogram

  * Box chart

  '
- 1890
- 1859
- 31
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n2. Shapes:\n\
  Description: Shape annotations include lines, arrows, rectangles, and other shapes.\
  \ They can highlight or enclose specific chart elements to emphasize or compare\
  \ them.\nData-Driven Use: Some shapes, like trend lines, are calculated from the\
  \ underlying data.\n<end of the annotation list>"
- 1719
- 1571
- 148
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/288.csv'': {''summary'': {''Column'': [''id'', ''diagnosis'',
  ''radius_mean'', ''texture_mean'', ''perimeter_mean'', ''area_mean'', ''smoothness_mean'',
  ''compactness_mean'', ''concavity_mean'', ''concave points_mean'', ''symmetry_mean'',
  ''fractal_dimension_mean'', ''radius_se'', ''texture_se'', ''perimeter_se'', ''area_se'',
  ''smoothness_se'', ''compactness_se'', ''concavity_se'', ''concave points_se'',
  ''symmetry_se'', ''fractal_dimension_se'', ''radius_worst'', ''texture_worst'',
  ''perimeter_worst'', ''area_worst'', ''smoothness_worst'', ''compactness_worst'',
  ''concavity_worst'', ''concave points_worst'', ''symmetry_worst'', ''fractal_dimension_worst''],
  ''Data Type'': [dtype(''int64''), dtype(''O''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64'')],
  ''Missing Values'': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ''Unique Values'': [569, 2, 456, 479, 522,
  539, 474, 537, 537, 542, 432, 499, 540, 519, 533, 528, 547, 541, 533, 507, 498,
  545, 457, 511, 514, 544, 411, 529, 539, 492, 500, 535]}, ''sample_data'': {''id'':
  [842302, 842517, 84300903], ''diagnosis'': [''M'', ''M'', ''M''], ''radius_mean'':
  [17.99, 20.57, 19.69], ''texture_mean'': [10.38, 17.77, 21.25], ''perimeter_mean'':
  [122.8, 132.9, 130.0], ''area_mean'': [1001.0, 1326.0, 1203.0], ''smoothness_mean'':
  [0.1184, 0.08474, 0.1096], ''compactness_mean'': [0.2776, 0.07864, 0.1599], ''concavity_mean'':
  [0.3001, 0.0869, 0.1974], ''concave points_mean'': [0.1471, 0.07017, 0.1279], ''symmetry_mean'':
  [0.2419, 0.1812, 0.2069], ''fractal_dimension_mean'': [0.07871, 0.05667, 0.05999],
  ''radius_se'': [1.095, 0.5435, 0.7456], ''texture_se'': [0.9053, 0.7339, 0.7869],
  ''perimeter_se'': [8.589, 3.398, 4.585], ''area_se'': [153.4, 74.08, 94.03], ''smoothness_se'':
  [0.006399, 0.005225, 0.00615], ''compactness_se'': [0.04904, 0.01308, 0.04006],
  ''concavity_se'': [0.05373, 0.0186, 0.03832], ''concave points_se'': [0.01587, 0.0134,
  0.02058], ''symmetry_se'': [0.03003, 0.01389, 0.0225], ''fractal_dimension_se'':
  [0.006193, 0.003532, 0.004571], ''radius_worst'': [25.38, 24.99, 23.57], ''texture_worst'':
  [17.33, 23.41, 25.53], ''perimeter_worst'': [184.6, 158.8, 152.5], ''area_worst'':
  [2019.0, 1956.0, 1709.0], ''smoothness_worst'': [0.1622, 0.1238, 0.1444], ''compactness_worst'':
  [0.6656, 0.1866, 0.4245], ''concavity_worst'': [0.7119, 0.2416, 0.4504], ''concave
  points_worst'': [0.2654, 0.186, 0.243], ''symmetry_worst'': [0.4601, 0.275, 0.3613],
  ''fractal_dimension_worst'': [0.1189, 0.08902, 0.08758]}}}

  <end of data example format>


  <start of data details format>

  Breast Cancer Dataset [Wisconsin Diagnostic UCI]

  health

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Line chart that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Line chart that
  utilizes all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 50 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Box chart'
- '* Heatmap'
- '* Column chart'
- '* Pie chart'
- '* Bar chart'
- '* Scatter plot'
- '* Line chart'
2. initial_prompt: !!python/tuple
- Please create a line chart to visualize the changes over the radius mean, texture
  mean, and perimeter mean values for the first three patients in the breast cancer
  dataset.
- 1478
- 1446
- 32
