1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Grouped bar/column chart

  * Dumbbell

  * Bubble chart

  * Scatter plot

  * Heatmap

  * Stacked bar/column chart

  * Pie chart

  * Donut chart

  * Line chart

  * Histogram

  * Box chart

  * Violin plot

  * Geographic heatmap'
- 1083
- 1018
- 65
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 864
- 725
- 139
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/80.csv'': {''summary'': {''Column'': [''Person ID'', ''Gender'',
  ''Age'', ''Occupation'', ''Sleep Duration'', ''Quality of Sleep'', ''Physical Activity
  Level'', ''Stress Level'', ''BMI Category'', ''Blood Pressure'', ''Heart Rate'',
  ''Daily Steps'', ''Sleep Disorder''], ''Data Type'': [dtype(''int64''), dtype(''O''),
  dtype(''int64''), dtype(''O''), dtype(''float64''), dtype(''int64''), dtype(''int64''),
  dtype(''int64''), dtype(''O''), dtype(''O''), dtype(''int64''), dtype(''int64''),
  dtype(''O'')], ''Missing Values'': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 219], ''Unique
  Values'': [374, 2, 31, 11, 27, 6, 16, 6, 4, 25, 19, 20, 2]}, ''sample_data'': {''Person
  ID'': [1, 2, 3], ''Gender'': [''Male'', ''Male'', ''Male''], ''Age'': [27, 28, 28],
  ''Occupation'': [''Software Engineer'', ''Doctor'', ''Doctor''], ''Sleep Duration'':
  [6.1, 6.2, 6.2], ''Quality of Sleep'': [6, 6, 6], ''Physical Activity Level'': [42,
  60, 60], ''Stress Level'': [6, 8, 8], ''BMI Category'': [''Overweight'', ''Normal'',
  ''Normal''], ''Blood Pressure'': [''126/83'', ''125/80'', ''125/80''], ''Heart Rate'':
  [77, 75, 75], ''Daily Steps'': [4200, 10000, 10000], ''Sleep Disorder'': [nan, nan,
  nan]}}}

  <end of data example format>


  <start of data details format>

  Sleep Health and Lifestyle Dataset

  health

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Donut chart that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Donut chart that
  utilizes all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 100 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Geographic heatmap'
- '* Box chart'
- '* Grouped bar/column chart'
- '* Scatter plot'
- '* Pie chart'
- '* Violin plot'
- '* Heatmap'
- '* Stacked bar/column chart'
- '* Donut chart'
- '* Dumbbell'
- '* Line chart'
- '* Histogram'
- '* Bubble chart'
- '* Bar chart'
- '* Geographic heatmap'
- '* Box chart'
- '* Grouped bar/column chart'
- '* Scatter plot'
- '* Pie chart'
- '* Violin plot'
- '* Heatmap'
- '* Stacked bar/column chart'
- '* Donut chart'
2. initial_prompt: !!python/tuple
- Please create a Donut chart visualizing the BMI Category distribution from the Sleep
  Health and Lifestyle Dataset. I want to see the proportion of people in each BMI
  category, such as Normal, Overweight, etc., to understand how different BMI categories
  are represented in the dataset. Make sure to label each section of the Donut chart
  with the BMI category name and percentage. This will help in analyzing the prevalence
  of different BMI categories in relation to sleep and lifestyle factors.
- 694
- 602
- 92
