1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Grouped bar/column chart

  * Dot plot

  * Radar chart

  * Scatter plot

  * Heatmap

  * Stacked bar/column chart

  * Pie chart

  * Line chart

  * Histogram

  * Box chart'
- 1256
- 1202
- 54
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 1046
- 907
- 139
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/86.csv': {'summary': {'Column':\
  \ ['Unnamed: 0', 'acousticness', 'danceability', 'duration_ms', 'energy', 'instrumentalness',\
  \ 'key', 'liveness', 'loudness', 'mode', 'speechiness', 'tempo', 'time_signature',\
  \ 'valence', 'target', 'song_title', 'artist'], 'Data Type': [dtype('int64'), dtype('float64'),\
  \ dtype('float64'), dtype('int64'), dtype('float64'), dtype('float64'), dtype('int64'),\
  \ dtype('float64'), dtype('float64'), dtype('int64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('int64'), dtype('O'), dtype('O')], 'Missing\
  \ Values': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'Unique Values':\
  \ [2017, 1394, 632, 1921, 719, 1107, 12, 793, 1808, 2, 792, 1919, 4, 853, 2, 1956,\
  \ 1343]}, 'sample_data': {'Unnamed: 0': [0, 1, 2], 'acousticness': [0.0102, 0.199,\
  \ 0.0344], 'danceability': [0.833, 0.743, 0.838], 'duration_ms': [204600, 326933,\
  \ 185707], 'energy': [0.434, 0.359, 0.412], 'instrumentalness': [0.0219, 0.00611,\
  \ 0.000234], 'key': [2, 1, 2], 'liveness': [0.165, 0.137, 0.159], 'loudness': [-8.795,\
  \ -10.401, -7.148], 'mode': [1, 1, 1], 'speechiness': [0.431, 0.0794, 0.289], 'tempo':\
  \ [150.062, 160.083, 75.044], 'time_signature': [4.0, 4.0, 4.0], 'valence': [0.286,\
  \ 0.588, 0.173], 'target': [1, 1, 1], 'song_title': ['Mask Off', 'Redbone', 'Xanny\
  \ Family'], 'artist': ['Future', 'Childish Gambino', 'Future']}}}\n<end of data\
  \ example format>\n\n<start of annotations format>\n['<start of the annotation list>',\
  \ '1. Text Annotations:', 'Description: Data-driven text annotations display values\
  \ linked to chart elements, such as data points in a scatterplot. They draw attention\
  \ to specific elements by highlighting their values.', 'Purpose: When only some\
  \ elements are annotated, the intent is to focus the viewer\u2019s attention on\
  \ those before examining others.', 'Other Uses: Non-data-driven annotations can\
  \ provide context, orientation, or editorial comments.', '3. Highlights:', 'Description:\
  \ Highlights modify the appearance of chart elements (e.g., size, color) to emphasize\
  \ or reduce their importance.', 'Purpose: Used to distinguish certain elements from\
  \ others, making them stand out visually', '<end of the annotation list>']\n<end\
  \ of annotations format>\n\n<start of data details format>\nSpotify Song Attributes\n\
  music\n<end of data details format>\n\nGiven a data format, imagine a chart that\
  \ visualizes this data as the final output you want from the service provider.\n\
  Consider what purpose the data has and the practical purpose of visualization and\
  \ include it in the instructions.\nYou need to imagine a chart with * Box chart\
  \ and given annotations that utilizes the data format.\nIf there are multiple given\
  \ data formats, imagine a chart with * Box chart and given annotations that utilizes\
  \ all the data formats.\nSince you are an amateur user, your instruction will be\
  \ partially SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details to create\
  \ as practical and realistic instructions as possible.\nInstructions must reflect\
  \ the context of the data.\nTo emulate a real-world user your instruction should\
  \ be 100 in size (word count). Do not include data path in the instruction.\nYour\
  \ response should ONLY contain the user emulated instruction.\nDo not include anything\
  \ else."
1-4. total_chart_types:
- '* Bar chart'
- '* Histogram'
- '* Box chart'
- '* Dot plot'
- '* Grouped bar/column chart'
- '* Column chart'
- '* Pie chart'
- '* Stacked bar/column chart'
- '* Line chart'
- '* Scatter plot'
- '* Heatmap'
- '* Radar chart'
- '* Bar chart'
- '* Histogram'
- '* Box chart'
2. initial_prompt: !!python/tuple
- Create a box plot of Spotify song attributes to visualize the distribution and variation
  of acousticness, danceability, energy, and valence across the dataset. Include data-driven
  text annotations to highlight the median values for each attribute, emphasizing
  key insights. Use highlights to distinguish the quartile ranges and outliers, making
  these elements stand out visually. The purpose is to understand the typical values
  and spread of these musical attributes for better insights into trends and patterns
  in songs. This will help identify how these attributes vary and which songs might
  be potential hits.
- 1083
- 976
- 107
