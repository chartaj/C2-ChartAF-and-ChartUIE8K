1-1. selected_chart_types: !!python/tuple
- 'Bar chart

  Scatter plot

  Stacked bar/column chart

  Line chart

  Histogram

  Box chart'
- 1140
- 1120
- 20
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 965
- 827
- 138
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/168.csv'': {''summary'': {''Column'': [''id'', ''age'', ''sex'',
  ''dataset'', ''cp'', ''trestbps'', ''chol'', ''fbs'', ''restecg'', ''thalch'', ''exang'',
  ''oldpeak'', ''slope'', ''ca'', ''thal'', ''num''], ''Data Type'': [dtype(''int64''),
  dtype(''int64''), dtype(''O''), dtype(''O''), dtype(''O''), dtype(''float64''),
  dtype(''float64''), dtype(''O''), dtype(''O''), dtype(''float64''), dtype(''O''),
  dtype(''float64''), dtype(''O''), dtype(''float64''), dtype(''O''), dtype(''int64'')],
  ''Missing Values'': [0, 0, 0, 0, 0, 59, 30, 90, 2, 55, 55, 62, 309, 611, 486, 0],
  ''Unique Values'': [920, 50, 2, 4, 4, 61, 217, 2, 3, 119, 2, 53, 3, 4, 3, 5]}, ''sample_data'':
  {''id'': [1, 2, 3], ''age'': [63, 67, 67], ''sex'': [''Male'', ''Male'', ''Male''],
  ''dataset'': [''Cleveland'', ''Cleveland'', ''Cleveland''], ''cp'': [''typical angina'',
  ''asymptomatic'', ''asymptomatic''], ''trestbps'': [145.0, 160.0, 120.0], ''chol'':
  [233.0, 286.0, 229.0], ''fbs'': [True, False, False], ''restecg'': [''lv hypertrophy'',
  ''lv hypertrophy'', ''lv hypertrophy''], ''thalch'': [150.0, 108.0, 129.0], ''exang'':
  [False, True, True], ''oldpeak'': [2.3, 1.5, 2.6], ''slope'': [''downsloping'',
  ''flat'', ''flat''], ''ca'': [0.0, 3.0, 2.0], ''thal'': [''fixed defect'', ''normal'',
  ''reversable defect''], ''num'': [0, 2, 1]}}}

  <end of data example format>


  <start of data details format>

  UCI Heart Disease Data

  health

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with Bar chart that utilizes the data format.

  If there are multiple given data formats, imagine a chart with Bar chart that utilizes
  all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 100 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- Stacked bar/column chart
- Line chart
- Histogram
- Box chart
- Scatter plot
- Bar chart
- Stacked bar/column chart
- Line chart
- Histogram
- Box chart
- Scatter plot
- Bar chart
2. initial_prompt: !!python/tuple
- I need a bar chart to visualize the UCI Heart Disease Data. It should compare the
  number of patients with different types of chest pain ('cp') across the four datasets
  ('dataset'). Each bar should represent one type of chest pain (e.g., typical angina,
  atypical angina, non-anginal pain, asymptomatic) and group the bars by the dataset
  (e.g., Cleveland, Hungarian, Switzerland, Long Beach). Missing values can be ignored.
  Also, differentiate the bars by color for easy comparison. Make sure the labels
  are clear and the chart is easy to interpret.
- 818
- 700
- 118
