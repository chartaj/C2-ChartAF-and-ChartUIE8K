1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Grouped bar/column chart

  * Radar chart

  * Table chart

  * Dot plot

  * Heatmap

  * Bubble chart

  * Pie chart

  * Donut chart

  * Stacked bar/column chart

  * Line chart

  * Area chart

  * Scatter plot

  * Box chart

  * Histogram

  * Tile map

  * Choropleth map'
- 1449
- 1372
- 77
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n2. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 1216
- 1078
- 138
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/377.csv'': {''summary'': {''Column'': [''Name'', ''MP'',
  ''Area'', ''County'', ''Electorate'', ''CON'', ''LAB'', ''LIB'', ''Brexit'', ''Green'',
  ''NAT'', ''MIN'', ''OTH'', ''CON(%)'', ''LAB(%)'', ''LIB(%)'', ''Brexit(%)'', ''Green(%)'',
  ''NAT(%)'', ''MIN(%)'', ''OTH(%)'', ''Winner''], ''Data Type'': [dtype(''O''), dtype(''O''),
  dtype(''int64''), dtype(''O''), dtype(''int64''), dtype(''int64''), dtype(''int64''),
  dtype(''int64''), dtype(''int64''), dtype(''int64''), dtype(''int64''), dtype(''int64''),
  dtype(''int64''), dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''O'')], ''Missing Values'': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0], ''Unique Values'': [650, 650, 12, 107, 645, 642, 640, 614,
  285, 454, 111, 22, 297, 648, 648, 629, 294, 498, 111, 22, 324, 6]}, ''sample_data'':
  {''Name'': [''Aldershot'', ''Aldridge-Brownhills'', ''Altrincham and Sale West''],
  ''MP'': [''Leo Docherty'', ''Wendy Morton'', ''Graham Brady''], ''Area'': [12, 7,
  4], ''County'': [''Hampshire'', ''Black Country'', ''Central Manchester''], ''Electorate'':
  [72617, 60138, 73107], ''CON'': [27980, 27850, 26311], ''LAB'': [11282, 8014, 20172],
  ''LIB'': [6920, 2371, 6036], ''Brexit'': [0, 0, 0], ''Green'': [1750, 771, 1566],
  ''NAT'': [0, 0, 0], ''MIN'': [0, 0, 0], ''OTH'': [0, 336, 678], ''CON(%)'': [0.385309225,
  0.463101533, 0.359897137], ''LAB(%)'': [0.155363069, 0.133260168, 0.27592433], ''LIB(%)'':
  [0.09529449, 0.039425987, 0.082563913], ''Brexit(%)'': [0.0, 0.0, 0.0], ''Green(%)'':
  [0.02409904, 0.012820513, 0.021420657], ''NAT(%)'': [0.0, 0.0, 0.0], ''MIN(%)'':
  [0.0, 0.0, 0.0], ''OTH(%)'': [0.0, 0.00558715, 0.009274078], ''Winner'': [''CON'',
  ''CON'', ''CON'']}}}

  <end of data example format>


  <start of data details format>

  unknown

  law-and-politics

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Tile map that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Tile map that utilizes
  all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 50 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Dot plot'
- '* Scatter plot'
- '* Line chart'
- '* Choropleth map'
- '* Box chart'
- '* Table chart'
- '* Stacked bar/column chart'
- '* Pie chart'
- '* Bubble chart'
- '* Area chart'
- '* Tile map'
2. initial_prompt: !!python/tuple
- Create a tile map visualizing the election winners by area. Use different colors
  to represent each winning party (CON, LAB, etc.). Highlight the areas based on the
  percentages and electorate sizes to show density and winning margins.
- 997
- 953
- 44
