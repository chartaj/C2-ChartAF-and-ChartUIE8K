1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Grouped bar/column chart

  * Lollipop chart

  * Dot plot

  * Dumbbell

  * Stacked bar/column chart

  * Diverging bar chart

  * Table chart'
- 881
- 835
- 46
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 676
- 538
- 138
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/470.csv': {'summary': {'Column':\
  \ ['Project', 'Planned costs', 'Actual costs'], 'Data Type': [dtype('O'), dtype('float64'),\
  \ dtype('float64')], 'Missing Values': [0, 0, 0], 'Unique Values': [4, 3, 4]}, 'sample_data':\
  \ {'Project': ['<b>Elbphilharmonie</b><br>This building saw costs rising 15-fold,\
  \ from 70 to 600 Million Euro.', '<b>Electronic Health Insurance Card</b><br>Originally\
  \ costs for the introduction where planned for 1.6 Billion Euro, experts estimate\
  \ the current budget at at least 5 Billion Euro.', '<b>Flughafen Berlin</b><br>A\
  \ series of problems lead to a rise from 2 to 5.98 Billion Euro.'], 'Planned costs':\
  \ [0.07, 1.6, 2.0], 'Actual costs': [0.6, 5.0, 5.98]}}}\n<end of data example format>\n\
  \n<start of annotations format>\n['<start of the annotation list>', '1. Text Annotations:',\
  \ 'Description: Data-driven text annotations display values linked to chart elements,\
  \ such as data points in a scatterplot. They draw attention to specific elements\
  \ by highlighting their values.', 'Purpose: When only some elements are annotated,\
  \ the intent is to focus the viewer\u2019s attention on those before examining others.',\
  \ 'Other Uses: Non-data-driven annotations can provide context, orientation, or\
  \ editorial comments.', '3. Highlights:', 'Description: Highlights modify the appearance\
  \ of chart elements (e.g., size, color) to emphasize or reduce their importance.',\
  \ 'Purpose: Used to distinguish certain elements from others, making them stand\
  \ out visually', '<end of the annotation list>']\n<end of annotations format>\n\n\
  <start of data details format>\nunknown\ngovernment\n<end of data details format>\n\
  \nGiven a data format, imagine a chart that visualizes this data as the final output\
  \ you want from the service provider.\nConsider what purpose the data has and the\
  \ practical purpose of visualization and include it in the instructions.\nYou need\
  \ to imagine a chart with * Grouped bar/column chart and given annotations that\
  \ utilizes the data format.\nIf there are multiple given data formats, imagine a\
  \ chart with * Grouped bar/column chart and given annotations that utilizes all\
  \ the data formats.\nSince you are an amateur user, your instruction will be partially\
  \ SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details to create as practical\
  \ and realistic instructions as possible.\nInstructions must reflect the context\
  \ of the data.\nTo emulate a real-world user your instruction should be 100 in size\
  \ (word count). Do not include data path in the instruction.\nYour response should\
  \ ONLY contain the user emulated instruction.\nDo not include anything else."
1-4. total_chart_types:
- '* Table chart'
- '* Dumbbell'
- '* Grouped bar/column chart'
- '* Column chart'
- '* Stacked bar/column chart'
- '* Bar chart'
- '* Diverging bar chart'
- '* Dot plot'
- '* Lollipop chart'
- '* Table chart'
- '* Dumbbell'
- '* Grouped bar/column chart'
2. initial_prompt: !!python/tuple
- Create a grouped bar chart showing "Planned costs" vs. "Actual costs" for different
  projects. Highlight the significant project cost overruns with annotations to emphasize
  differences. Include annotations to highlight key figures showing planned vs. actual
  costs to draw attention to the discrepancies. Make sure to use different colors
  for each project to make it visually distinct. The purpose is to easily visualize
  and compare the planned and actual costs for government projects to identify the
  extent of budget overruns and understand the fiscal impact on government expenditure.
- 716
- 615
- 101
