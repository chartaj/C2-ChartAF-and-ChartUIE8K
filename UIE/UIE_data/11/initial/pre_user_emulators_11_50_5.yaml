1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Heatmap

  * Scatter plot

  * Stacked bar/column chart

  * Pie chart

  * Line chart

  * Histogram

  * Choropleth map'
- 1477
- 1441
- 36
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 1288
- 1149
- 139
1-3. asking_user_emulator_for_initial_prompt: "You are an expert user emulator.\n\n\
  <start of data example format>\n{'../Extra_datas/data/11.csv': {'summary': {'Column':\
  \ ['destination', 'passanger', 'weather', 'temperature', 'time', 'coupon', 'expiration',\
  \ 'gender', 'age', 'maritalStatus', 'has_children', 'education', 'occupation', 'income',\
  \ 'car', 'Bar', 'CoffeeHouse', 'CarryAway', 'RestaurantLessThan20', 'Restaurant20To50',\
  \ 'toCoupon_GEQ5min', 'toCoupon_GEQ15min', 'toCoupon_GEQ25min', 'direction_same',\
  \ 'direction_opp', 'Y'], 'Data Type': [dtype('O'), dtype('O'), dtype('O'), dtype('int64'),\
  \ dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('int64'),\
  \ dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'),\
  \ dtype('O'), dtype('O'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'),\
  \ dtype('int64'), dtype('int64')], 'Missing Values': [0, 0, 0, 0, 0, 0, 0, 0, 0,\
  \ 0, 0, 0, 0, 0, 12576, 107, 217, 151, 130, 189, 0, 0, 0, 0, 0, 0], 'Unique Values':\
  \ [3, 4, 3, 3, 5, 5, 2, 2, 8, 5, 2, 6, 25, 9, 5, 5, 5, 5, 5, 5, 1, 2, 2, 2, 2, 2]},\
  \ 'sample_data': {'destination': ['No Urgent Place', 'No Urgent Place', 'No Urgent\
  \ Place'], 'passanger': ['Alone', 'Friend(s)', 'Friend(s)'], 'weather': ['Sunny',\
  \ 'Sunny', 'Sunny'], 'temperature': [55, 80, 80], 'time': ['2PM', '10AM', '10AM'],\
  \ 'coupon': ['Restaurant(<20)', 'Coffee House', 'Carry out & Take away'], 'expiration':\
  \ ['1d', '2h', '2h'], 'gender': ['Female', 'Female', 'Female'], 'age': ['21', '21',\
  \ '21'], 'maritalStatus': ['Unmarried partner', 'Unmarried partner', 'Unmarried\
  \ partner'], 'has_children': [1, 1, 1], 'education': ['Some college - no degree',\
  \ 'Some college - no degree', 'Some college - no degree'], 'occupation': ['Unemployed',\
  \ 'Unemployed', 'Unemployed'], 'income': ['$37500 - $49999', '$37500 - $49999',\
  \ '$37500 - $49999'], 'car': [nan, nan, nan], 'Bar': ['never', 'never', 'never'],\
  \ 'CoffeeHouse': ['never', 'never', 'never'], 'CarryAway': [nan, nan, nan], 'RestaurantLessThan20':\
  \ ['4~8', '4~8', '4~8'], 'Restaurant20To50': ['1~3', '1~3', '1~3'], 'toCoupon_GEQ5min':\
  \ [1, 1, 1], 'toCoupon_GEQ15min': [0, 0, 1], 'toCoupon_GEQ25min': [0, 0, 0], 'direction_same':\
  \ [0, 0, 0], 'direction_opp': [1, 1, 1], 'Y': [1, 0, 1]}}}\n<end of data example\
  \ format>\n\n<start of data details format>\n in-vehicle coupon recommendation\n\
  automobiles\n<end of data details format>\n\nGiven a data format, imagine a chart\
  \ that visualizes this data as the final output you want from the service provider.\n\
  You need to imagine a chart with * Bar chart that utilizes the data format.\nIf\
  \ there are multiple given data formats, imagine a chart with * Bar chart that utilizes\
  \ all the data formats.\nSince you are an amateur user, your instruction will be\
  \ partially SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details to create\
  \ as practical and realistic instructions as possible.\nInstructions must reflect\
  \ the context of the data.\nTo emulate a real-world user your instruction should\
  \ be 50 in size (word count).\nYour response should ONLY contain the user emulated\
  \ instruction.\nDo not include anything else."
1-4. total_chart_types:
- '* Heatmap'
- '* Stacked bar/column chart'
- '* Choropleth map'
- '* Pie chart'
- '* Line chart'
- '* Bar chart'
2. initial_prompt: !!python/tuple
- Create a bar chart comparing the frequency of different coupons (Restaurant, Coffee
  House, CarryAway) used by passengers based on their marital status and education
  level from the in-vehicle coupon recommendation data. Use distinct colors for each
  coupon type.
- 1071
- 1024
- 47
