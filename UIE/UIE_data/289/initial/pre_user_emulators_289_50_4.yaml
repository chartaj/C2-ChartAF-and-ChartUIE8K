1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Grouped bar/column chart

  * Dot plot

  * Box chart

  * Scatter plot

  * Heatmap

  * Donut chart

  * Line chart

  * Beeswarm chart'
- 1887
- 1846
- 41
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n  \n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 1690
- 1550
- 140
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/289.csv'': {''summary'': {''Column'': [''mean radius'', ''mean
  texture'', ''mean perimeter'', ''mean area'', ''mean smoothness'', ''mean compactness'',
  ''mean concavity'', ''mean concave points'', ''mean symmetry'', ''mean fractal dimension'',
  ''radius error'', ''texture error'', ''perimeter error'', ''area error'', ''smoothness
  error'', ''compactness error'', ''concavity error'', ''concave points error'', ''symmetry
  error'', ''fractal dimension error'', ''worst radius'', ''worst texture'', ''worst
  perimeter'', ''worst area'', ''worst smoothness'', ''worst compactness'', ''worst
  concavity'', ''worst concave points'', ''worst symmetry'', ''worst fractal dimension'',
  ''benign_0__mal_1''], ''Data Type'': [dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''int64'')], ''Missing
  Values'': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0], ''Unique Values'': [456, 479, 522, 539, 474, 537, 537,
  542, 432, 499, 540, 519, 533, 528, 547, 541, 533, 507, 498, 545, 457, 511, 514,
  544, 411, 529, 539, 492, 500, 535, 2]}, ''sample_data'': {''mean radius'': [17.99,
  20.57, 19.69], ''mean texture'': [10.38, 17.77, 21.25], ''mean perimeter'': [122.8,
  132.9, 130.0], ''mean area'': [1001.0, 1326.0, 1203.0], ''mean smoothness'': [0.1184,
  0.08474, 0.1096], ''mean compactness'': [0.2776, 0.07864, 0.1599], ''mean concavity'':
  [0.3001, 0.0869, 0.1974], ''mean concave points'': [0.1471, 0.07017, 0.1279], ''mean
  symmetry'': [0.2419, 0.1812, 0.2069], ''mean fractal dimension'': [0.07871, 0.05667,
  0.0599899999999999], ''radius error'': [1.095, 0.5435, 0.7456], ''texture error'':
  [0.9053, 0.7339, 0.7869], ''perimeter error'': [8.589, 3.398, 4.585], ''area error'':
  [153.4, 74.08, 94.03], ''smoothness error'': [0.006399, 0.005225, 0.00615], ''compactness
  error'': [0.04904, 0.01308, 0.04006], ''concavity error'': [0.0537299999999999,
  0.0186, 0.03832], ''concave points error'': [0.01587, 0.0134, 0.02058], ''symmetry
  error'': [0.03003, 0.01389, 0.0225], ''fractal dimension error'': [0.006193, 0.003532,
  0.004571], ''worst radius'': [25.38, 24.99, 23.57], ''worst texture'': [17.33, 23.41,
  25.53], ''worst perimeter'': [184.6, 158.8, 152.5], ''worst area'': [2019.0, 1956.0,
  1709.0], ''worst smoothness'': [0.1622, 0.1238, 0.1444], ''worst compactness'':
  [0.6656, 0.1866, 0.4245], ''worst concavity'': [0.7119, 0.2416, 0.4504], ''worst
  concave points'': [0.2654, 0.186, 0.243], ''worst symmetry'': [0.4601, 0.275, 0.3613],
  ''worst fractal dimension'': [0.1189, 0.08902, 0.0875799999999999], ''benign_0__mal_1'':
  [0, 0, 0]}}}

  <end of data example format>


  <start of data details format>

  Cancer classification

  health

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Line chart that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Line chart that
  utilizes all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 50 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Donut chart'
- '* Bar chart'
- '* Scatter plot'
- '* Grouped bar/column chart'
- '* Line chart'
2. initial_prompt: !!python/tuple
- Please create a line chart showing trends in mean radius, mean perimeter, and mean
  area for different samples. Additionally, add lines for the worst radius, worst
  perimeter, and worst area to compare how these values change across samples.
- 1470
- 1425
- 45
