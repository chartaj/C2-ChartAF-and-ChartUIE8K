1-1. selected_chart_types: !!python/tuple
- '* Heatmap

  * Scatter plot

  * Line chart

  * Ridgeplot

  * Box chart'
- 1440
- 1421
- 19
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 1275
- 1136
- 139
1-3. asking_user_emulator_for_initial_prompt: "You are an expert user emulator.\n\n\
  <start of data example format>\n{'../Extra_datas/data/330.csv': {'summary': {'Column':\
  \ ['time', '40', '50', '60', '70', '80', '90', '100', '110', '120', '130', '140',\
  \ '150', '160', '170', '180', '190', '200', '210', '220', '230', '240', '250', '260'],\
  \ 'Data Type': [dtype('O'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64')],\
  \ 'Missing Values': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
  \ 0, 0, 0, 0], 'Unique Values': [4381, 831, 324, 751, 278, 278, 275, 284, 279, 310,\
  \ 261, 247, 262, 263, 245, 291, 246, 280, 242, 283, 299, 295, 294, 730]}, 'sample_data':\
  \ {'time': ['YAL001C', 'YAL014C', 'YAL016W'], '40': [-0.07, 0.215, 0.15], '50':\
  \ [-0.23, 0.09, 0.15], '60': [-0.1, 0.025000002, 0.22], '70': [0.03, -0.04, 0.29],\
  \ '80': [-0.04, -0.04, -0.1], '90': [-0.12, -0.02, 0.15], '100': [-0.28, -0.51,\
  \ -0.73], '110': [-0.44, -0.08, 0.19], '120': [-0.09, 0.0, -0.15], '130': [0.12,\
  \ 0.46, 0.29], '140': [0.06, -0.19, -0.08], '150': [-0.04, 0.04, 0.16], '160': [0.31,\
  \ 0.18, -0.05], '170': [0.59, -0.3, 0.12], '180': [0.34, -0.38, -0.17], '190': [-0.28,\
  \ 0.07, 0.11], '200': [-0.09, -0.04, -0.15], '210': [-0.44, 0.13, 0.03], '220':\
  \ [0.31, -0.06, -0.26], '230': [0.03, -0.26, -0.34], '240': [0.57, -0.1, -0.34],\
  \ '250': [0.0, 0.27, 0.25], '260': [0.01, 0.23500001, 0.19]}}}\n<end of data example\
  \ format>\n\n<start of data details format>\n\U0001F52C Essential Proteins - Bioinformatics\
  \ \U0001F5C3\uFE0F Dataset\nbiology\n<end of data details format>\n\nGiven a data\
  \ format, imagine a chart that visualizes this data as the final output you want\
  \ from the service provider.\nYou need to imagine a chart with * Scatter plot that\
  \ utilizes the data format.\nIf there are multiple given data formats, imagine a\
  \ chart with * Scatter plot that utilizes all the data formats.\nSince you are an\
  \ amateur user, your instruction will be partially SUBJECTIVE and NOT DETAILED.\n\
  Also, refer to the data details to create as practical and realistic instructions\
  \ as possible.\nInstructions must reflect the context of the data.\nTo emulate a\
  \ real-world user your instruction should be 100 in size (word count).\nYour response\
  \ should ONLY contain the user emulated instruction.\nDo not include anything else."
1-4. total_chart_types:
- '* Ridgeplot'
- '* Line chart'
- '* Box chart'
- '* Heatmap'
- '* Scatter plot'
- '* Ridgeplot'
- '* Line chart'
- '* Box chart'
- '* Heatmap'
- '* Scatter plot'
2. initial_prompt: !!python/tuple
- I'd like to visualize the essential biology dataset in a scatter plot with time
  on the x-axis and the expression levels from 40 to 260 on the y-axis. Each point
  should represent a different gene (e.g., YAL001C, YAL014C). Color-code the points
  based on their expression levels at each time point. Make sure the scatter plot
  clearly differentiates between the various data points. This will help analyze the
  trends and variations in gene expression over time. Include a legend to explain
  the time points and data sets for clarity.
- 1121
- 1011
- 110
