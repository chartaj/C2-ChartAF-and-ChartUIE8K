1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Heatmap

  * Pie chart

  * Line chart

  * Histogram'
- 943
- 925
- 18
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 775
- 636
- 139
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/66.csv': {'summary': {'Column':\
  \ ['ProductID', 'ProductCategory', 'ProductBrand', 'ProductPrice', 'CustomerAge',\
  \ 'CustomerGender', 'PurchaseFrequency', 'CustomerSatisfaction', 'PurchaseIntent'],\
  \ 'Data Type': [dtype('int64'), dtype('O'), dtype('O'), dtype('float64'), dtype('int64'),\
  \ dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64')], 'Missing Values':\
  \ [0, 0, 0, 0, 0, 0, 0, 0, 0], 'Unique Values': [9000, 5, 5, 9000, 52, 2, 19, 5,\
  \ 2]}, 'sample_data': {'ProductID': [5874, 5875, 5876], 'ProductCategory': ['Smartphones',\
  \ 'Smart Watches', 'Tablets'], 'ProductBrand': ['Other Brands', 'Samsung', 'Samsung'],\
  \ 'ProductPrice': [312.94966810515353, 980.3894043187454, 2606.718292835622], 'CustomerAge':\
  \ [18, 35, 63], 'CustomerGender': [0, 1, 0], 'PurchaseFrequency': [2, 7, 1], 'CustomerSatisfaction':\
  \ [1, 2, 5], 'PurchaseIntent': [0, 1, 1]}}}\n<end of data example format>\n\n<start\
  \ of annotations format>\n['<start of the annotation list>', '1. Text Annotations:',\
  \ 'Description: Data-driven text annotations display values linked to chart elements,\
  \ such as data points in a scatterplot. They draw attention to specific elements\
  \ by highlighting their values.', 'Purpose: When only some elements are annotated,\
  \ the intent is to focus the viewer\u2019s attention on those before examining others.',\
  \ 'Other Uses: Non-data-driven annotations can provide context, orientation, or\
  \ editorial comments.', '3. Highlights:', 'Description: Highlights modify the appearance\
  \ of chart elements (e.g., size, color) to emphasize or reduce their importance.',\
  \ 'Purpose: Used to distinguish certain elements from others, making them stand\
  \ out visually', '<end of the annotation list>']\n<end of annotations format>\n\n\
  <start of data details format>\n\U0001F4F1 Predict Consumer Electronics Sales Dataset\
  \ \U0001F4BB\nbusiness\n<end of data details format>\n\nGiven a data format, imagine\
  \ a chart that visualizes this data as the final output you want from the service\
  \ provider.\nConsider what purpose the data has and the practical purpose of visualization\
  \ and include it in the instructions.\nYou need to imagine a chart with * Bar chart\
  \ and given annotations that utilizes the data format.\nIf there are multiple given\
  \ data formats, imagine a chart with * Bar chart and given annotations that utilizes\
  \ all the data formats.\nSince you are an amateur user, your instruction will be\
  \ partially SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details to create\
  \ as practical and realistic instructions as possible.\nInstructions must reflect\
  \ the context of the data.\nTo emulate a real-world user your instruction should\
  \ be 50 in size (word count). Do not include data path in the instruction.\nYour\
  \ response should ONLY contain the user emulated instruction.\nDo not include anything\
  \ else."
1-4. total_chart_types:
- '* Pie chart'
- '* Bar chart'
2. initial_prompt: !!python/tuple
- Create a bar chart displaying average ProductPrice for each ProductCategory. Highlight
  the highest and lowest prices. Use text annotations to show average price values
  for categories.
- 736
- 705
- 31
