1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Scatter plot

  * Heatmap

  * Pie chart

  * Line chart

  * Histogram

  * Box chart'
- 1099
- 1073
- 26
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 922
- 784
- 138
1-3. asking_user_emulator_for_initial_prompt: "You are an expert user emulator.\n\n\
  <start of data example format>\n{'../Extra_datas/data/85.csv': {'summary': {'Column':\
  \ ['Unnamed: 0', 'Track.Name', 'Artist.Name', 'Genre', 'Beats.Per.Minute', 'Energy',\
  \ 'Danceability', 'Loudness..dB..', 'Liveness', 'Valence.', 'Length.', 'Acousticness..',\
  \ 'Speechiness.', 'Popularity'], 'Data Type': [dtype('int64'), dtype('O'), dtype('O'),\
  \ dtype('O'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'),\
  \ dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64')],\
  \ 'Missing Values': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'Unique Values':\
  \ [50, 50, 38, 21, 31, 31, 29, 9, 22, 39, 44, 35, 24, 18]}, 'sample_data': {'Unnamed:\
  \ 0': [1, 2, 3], 'Track.Name': ['Se\xF1orita', 'China', 'boyfriend (with Social\
  \ House)'], 'Artist.Name': ['Shawn Mendes', 'Anuel AA', 'Ariana Grande'], 'Genre':\
  \ ['canadian pop', 'reggaeton flow', 'dance pop'], 'Beats.Per.Minute': [117, 105,\
  \ 190], 'Energy': [55, 81, 80], 'Danceability': [76, 79, 40], 'Loudness..dB..':\
  \ [-6, -4, -4], 'Liveness': [8, 8, 16], 'Valence.': [75, 61, 70], 'Length.': [191,\
  \ 302, 186], 'Acousticness..': [4, 8, 12], 'Speechiness.': [3, 9, 46], 'Popularity':\
  \ [79, 92, 85]}}}\n<end of data example format>\n\n<start of data details format>\n\
  Top 50 Spotify Songs - 2019\nmusic\n<end of data details format>\n\nGiven a data\
  \ format, imagine a chart that visualizes this data as the final output you want\
  \ from the service provider.\nYou need to imagine a chart with * Bar chart that\
  \ utilizes the data format.\nIf there are multiple given data formats, imagine a\
  \ chart with * Bar chart that utilizes all the data formats.\nSince you are an amateur\
  \ user, your instruction will be partially SUBJECTIVE and NOT DETAILED.\nAlso, refer\
  \ to the data details to create as practical and realistic instructions as possible.\n\
  Instructions must reflect the context of the data.\nTo emulate a real-world user\
  \ your instruction should be 100 in size (word count).\nYour response should ONLY\
  \ contain the user emulated instruction.\nDo not include anything else."
1-4. total_chart_types:
- '* Histogram'
- '* Scatter plot'
- '* Heatmap'
- '* Pie chart'
- '* Box chart'
- '* Line chart'
- '* Bar chart'
- '* Histogram'
- '* Scatter plot'
- '* Heatmap'
- '* Pie chart'
- '* Box chart'
- '* Line chart'
- '* Bar chart'
2. initial_prompt: !!python/tuple
- Create a bar chart to visualize the "Top 50 Spotify Songs - 2019" dataset. The x-axis
  should represent the "Track Name" and the y-axis should represent "Popularity."
  Each bar should correspond to a different track, showing how popular each song is.
  The chart should also be color-coded based on the "Genre" of each track to provide
  a more detailed view. Add a legend to distinguish the genres. Keep the chart easy
  to read with clearly labeled axes and a title. This will help in quickly understanding
  which tracks were the most popular in 2019.
- 776
- 659
- 117
