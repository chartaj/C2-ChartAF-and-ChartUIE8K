1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Grouped bar/column chart

  * Dot plot

  * Scatter plot

  * Heatmap

  * Stacked bar/column chart

  * Pie chart

  * Treemap

  * Box chart

  * Histogram'
- 1062
- 1016
- 46
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 862
- 723
- 139
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/206.csv': {'summary': {'Column':\
  \ ['price', 'area', 'bedrooms', 'bathrooms', 'stories', 'mainroad', 'guestroom',\
  \ 'basement', 'hotwaterheating', 'airconditioning', 'parking', 'prefarea', 'furnishingstatus'],\
  \ 'Data Type': [dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'),\
  \ dtype('int64'), dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('int64'),\
  \ dtype('O'), dtype('O')], 'Missing Values': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
  \ 0], 'Unique Values': [219, 284, 6, 4, 4, 2, 2, 2, 2, 2, 4, 2, 3]}, 'sample_data':\
  \ {'price': [13300000, 12250000, 12250000], 'area': [7420, 8960, 9960], 'bedrooms':\
  \ [4, 4, 3], 'bathrooms': [2, 4, 2], 'stories': [3, 4, 2], 'mainroad': ['yes', 'yes',\
  \ 'yes'], 'guestroom': ['no', 'no', 'no'], 'basement': ['no', 'no', 'yes'], 'hotwaterheating':\
  \ ['no', 'no', 'no'], 'airconditioning': ['yes', 'yes', 'no'], 'parking': [2, 3,\
  \ 2], 'prefarea': ['yes', 'no', 'yes'], 'furnishingstatus': ['furnished', 'furnished',\
  \ 'semi-furnished']}}}\n<end of data example format>\n\n<start of annotations format>\n\
  ['<start of the annotation list>', '1. Text Annotations:', 'Description: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.', 'Purpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.', 'Other Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.', '3. Highlights:',\
  \ 'Description: Highlights modify the appearance of chart elements (e.g., size,\
  \ color) to emphasize or reduce their importance.', 'Purpose: Used to distinguish\
  \ certain elements from others, making them stand out visually', '<end of the annotation\
  \ list>']\n<end of annotations format>\n\n<start of data details format>\nHousing\
  \ Prices Dataset\nreal-estate\n<end of data details format>\n\nGiven a data format,\
  \ imagine a chart that visualizes this data as the final output you want from the\
  \ service provider.\nConsider what purpose the data has and the practical purpose\
  \ of visualization and include it in the instructions.\nYou need to imagine a chart\
  \ with * Dot plot and given annotations that utilizes the data format.\nIf there\
  \ are multiple given data formats, imagine a chart with * Dot plot and given annotations\
  \ that utilizes all the data formats.\nSince you are an amateur user, your instruction\
  \ will be partially SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details\
  \ to create as practical and realistic instructions as possible.\nInstructions must\
  \ reflect the context of the data.\nTo emulate a real-world user your instruction\
  \ should be 100 in size (word count). Do not include data path in the instruction.\n\
  Your response should ONLY contain the user emulated instruction.\nDo not include\
  \ anything else."
1-4. total_chart_types:
- '* Bar chart'
- '* Stacked bar/column chart'
- '* Dot plot'
- '* Grouped bar/column chart'
- '* Histogram'
- '* Heatmap'
- '* Pie chart'
- '* Box chart'
- '* Treemap'
- '* Scatter plot'
- '* Bar chart'
- '* Stacked bar/column chart'
- '* Dot plot'
2. initial_prompt: !!python/tuple
- Create a dot plot visualizing housing prices based on area, bedrooms, bathrooms,
  and additional features such as mainroad and air conditioning. Highlight houses
  with 4 stories and those that have guest rooms to show any patterns. Include text
  annotations for the most expensive and least expensive houses to draw attention
  to their specific attributes. This will help viewers understand how different features
  impact housing prices in this real-estate dataset. Highlight unique patterns in
  these properties by modifying dot sizes or colors to make the insights clearer and
  more engaging.
- 894
- 792
- 102
