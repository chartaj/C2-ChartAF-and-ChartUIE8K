1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Heatmap

  * Treemap

  * Area chart

  * Histogram

  * Choropleth map'
- 1189
- 1165
- 24
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 1017
- 878
- 139
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/91.csv'': {''summary'': {''Column'': [''title'', ''description'',
  ''url'', ''owner'', ''kernels'', ''discussions'', ''views'', ''downloads'', ''last_updated'',
  ''license'', ''size'', ''featured'', ''super_featured'', ''upvotes''], ''Data Type'':
  [dtype(''O''), dtype(''O''), dtype(''O''), dtype(''O''), dtype(''int64''), dtype(''int64''),
  dtype(''int64''), dtype(''int64''), dtype(''O''), dtype(''O''), dtype(''float64''),
  dtype(''int64''), dtype(''int64''), dtype(''int64'')], ''Missing Values'': [2, 4951,
  0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], ''Unique Values'': [7538, 3050, 8024, 4286,
  159, 45, 2005, 887, 518, 6, 6542, 2, 2, 158]}, ''sample_data'': {''title'': [''Trending
  YouTube Video Statistics (UPDATED)'', ''7ecb8f4fe2ece9f4c8ffd23af10c310f'', ''Atom
  Dataset''], ''description'': [''Daily statistics (views, likes, category, tags+)
  for trending YouTube videos'', nan, ''Dataset with atom features''], ''url'': [''https://www.kaggle.com/datasnaek/youtube-new'',
  ''https://www.kaggle.com/veralei/7ecb8f4fe2ece9f4c8ffd23af10c310f'', ''https://www.kaggle.com/chfly2000/nomad2018-atom-dataset''],
  ''owner'': [''Mitchell J'', ''Vera Lei'', ''chfly2000''], ''kernels'': [3, 0, 0],
  ''discussions'': [4, 0, 0], ''views'': [9484, 55, 26], ''downloads'': [1668, 2,
  1], ''last_updated'': [''2018-01-16'', ''2018-01-16'', ''2018-01-16''], ''license'':
  [''CC0'', ''Other'', ''Other''], ''size'': [35087677.0, 127264365.0, 0.0], ''featured'':
  [1, 0, 0], ''super_featured'': [0, 0, 0], ''upvotes'': [46, 0, 0]}}}

  <end of data example format>


  <start of data details format>

  Complete Kaggle Datasets Collection

  data-science-and-analytics

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Treemap that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Treemap that utilizes
  all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 100 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Histogram'
- '* Bar chart'
- '* Area chart'
- '* Treemap'
- '* Heatmap'
- '* Choropleth map'
- '* Histogram'
- '* Bar chart'
- '* Area chart'
- '* Treemap'
2. initial_prompt: !!python/tuple
- Create a treemap visualization of the complete Kaggle datasets collection that highlights
  the number of unique values for each column category. Use the 'title' and 'description'
  for labeling, and represent each unique value count with hierarchical squares. Each
  square should display the split of unique counts in columns like 'kernels,' 'discussions,'
  'views,' and 'downloads.' Group the squares under categories like 'views' and 'downloads'
  to show which ones have the highest variety. Use color codes to differentiate between
  various metrics such as upvotes and featured status, making prominent ones more
  visible.
- 870
- 753
- 117
