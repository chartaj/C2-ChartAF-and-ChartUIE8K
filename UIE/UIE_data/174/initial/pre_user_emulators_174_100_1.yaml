1-1. selected_chart_types: !!python/tuple
- '* Grouped bar/column chart

  * Heatmap

  * Treemap

  * Line chart

  * Box chart

  * Scatter plot'
- 1742
- 1715
- 27
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 1562
- 1423
- 139
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/174.csv': {'summary': {'Column':\
  \ ['Timestamp', 'Age', 'Primary streaming service', 'Hours per day', 'While working',\
  \ 'Instrumentalist', 'Composer', 'Fav genre', 'Exploratory', 'Foreign languages',\
  \ 'BPM', 'Frequency [Classical]', 'Frequency [Country]', 'Frequency [EDM]', 'Frequency\
  \ [Folk]', 'Frequency [Gospel]', 'Frequency [Hip hop]', 'Frequency [Jazz]', 'Frequency\
  \ [K pop]', 'Frequency [Latin]', 'Frequency [Lofi]', 'Frequency [Metal]', 'Frequency\
  \ [Pop]', 'Frequency [R&B]', 'Frequency [Rap]', 'Frequency [Rock]', 'Frequency [Video\
  \ game music]', 'Anxiety', 'Depression', 'Insomnia', 'OCD', 'Music effects', 'Permissions'],\
  \ 'Data Type': [dtype('O'), dtype('float64'), dtype('O'), dtype('float64'), dtype('O'),\
  \ dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('float64'),\
  \ dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'),\
  \ dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'),\
  \ dtype('O'), dtype('O'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('O'), dtype('O')], 'Missing Values': [0, 1, 1, 0, 3, 4,\
  \ 1, 0, 0, 4, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8,\
  \ 0], 'Unique Values': [735, 61, 6, 27, 2, 2, 2, 16, 2, 2, 135, 4, 4, 4, 4, 4, 4,\
  \ 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 12, 12, 12, 13, 3, 1]}, 'sample_data': {'Timestamp':\
  \ ['8/27/2022 19:29:02', '8/27/2022 19:57:31', '8/27/2022 21:28:18'], 'Age': [18.0,\
  \ 63.0, 18.0], 'Primary streaming service': ['Spotify', 'Pandora', 'Spotify'], 'Hours\
  \ per day': [3.0, 1.5, 4.0], 'While working': ['Yes', 'Yes', 'No'], 'Instrumentalist':\
  \ ['Yes', 'No', 'No'], 'Composer': ['Yes', 'No', 'No'], 'Fav genre': ['Latin', 'Rock',\
  \ 'Video game music'], 'Exploratory': ['Yes', 'Yes', 'No'], 'Foreign languages':\
  \ ['Yes', 'No', 'Yes'], 'BPM': [156.0, 119.0, 132.0], 'Frequency [Classical]': ['Rarely',\
  \ 'Sometimes', 'Never'], 'Frequency [Country]': ['Never', 'Never', 'Never'], 'Frequency\
  \ [EDM]': ['Rarely', 'Never', 'Very frequently'], 'Frequency [Folk]': ['Never',\
  \ 'Rarely', 'Never'], 'Frequency [Gospel]': ['Never', 'Sometimes', 'Never'], 'Frequency\
  \ [Hip hop]': ['Sometimes', 'Rarely', 'Rarely'], 'Frequency [Jazz]': ['Never', 'Very\
  \ frequently', 'Rarely'], 'Frequency [K pop]': ['Very frequently', 'Rarely', 'Very\
  \ frequently'], 'Frequency [Latin]': ['Very frequently', 'Sometimes', 'Never'],\
  \ 'Frequency [Lofi]': ['Rarely', 'Rarely', 'Sometimes'], 'Frequency [Metal]': ['Never',\
  \ 'Never', 'Sometimes'], 'Frequency [Pop]': ['Very frequently', 'Sometimes', 'Rarely'],\
  \ 'Frequency [R&B]': ['Sometimes', 'Sometimes', 'Never'], 'Frequency [Rap]': ['Very\
  \ frequently', 'Rarely', 'Rarely'], 'Frequency [Rock]': ['Never', 'Very frequently',\
  \ 'Rarely'], 'Frequency [Video game music]': ['Sometimes', 'Rarely', 'Very frequently'],\
  \ 'Anxiety': [3.0, 7.0, 7.0], 'Depression': [0.0, 2.0, 7.0], 'Insomnia': [1.0, 2.0,\
  \ 10.0], 'OCD': [0.0, 1.0, 2.0], 'Music effects': [nan, nan, 'No effect'], 'Permissions':\
  \ ['I understand.', 'I understand.', 'I understand.']}}}\n<end of data example format>\n\
  \n<start of annotations format>\n['<start of the annotation list>', '1. Text Annotations:',\
  \ 'Description: Data-driven text annotations display values linked to chart elements,\
  \ such as data points in a scatterplot. They draw attention to specific elements\
  \ by highlighting their values.', 'Purpose: When only some elements are annotated,\
  \ the intent is to focus the viewer\u2019s attention on those before examining others.',\
  \ 'Other Uses: Non-data-driven annotations can provide context, orientation, or\
  \ editorial comments.', '3. Highlights:', 'Description: Highlights modify the appearance\
  \ of chart elements (e.g., size, color) to emphasize or reduce their importance.',\
  \ 'Purpose: Used to distinguish certain elements from others, making them stand\
  \ out visually', '<end of the annotation list>']\n<end of annotations format>\n\n\
  <start of data details format>\nMusic & Mental Health Survey Results\nmusic\n<end\
  \ of data details format>\n\nGiven a data format, imagine a chart that visualizes\
  \ this data as the final output you want from the service provider.\nConsider what\
  \ purpose the data has and the practical purpose of visualization and include it\
  \ in the instructions.\nYou need to imagine a chart with * Scatter plot and given\
  \ annotations that utilizes the data format.\nIf there are multiple given data formats,\
  \ imagine a chart with * Scatter plot and given annotations that utilizes all the\
  \ data formats.\nSince you are an amateur user, your instruction will be partially\
  \ SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details to create as practical\
  \ and realistic instructions as possible.\nInstructions must reflect the context\
  \ of the data.\nTo emulate a real-world user your instruction should be 100 in size\
  \ (word count). Do not include data path in the instruction.\nYour response should\
  \ ONLY contain the user emulated instruction.\nDo not include anything else."
1-4. total_chart_types:
- '* Treemap'
- '* Scatter plot'
- '* Grouped bar/column chart'
- '* Box chart'
- '* Heatmap'
- '* Line chart'
- '* Treemap'
- '* Scatter plot'
2. initial_prompt: !!python/tuple
- Create a scatter plot using the "Music & Mental Health Survey Results" data. Plot
  'Hours per day' on the x-axis and 'Anxiety' on the y-axis. Use text annotations
  to display values of data points where 'Anxiety' is greater than 5. Highlight points
  where 'Primary streaming service' is 'Spotify'. This visualization aims to explore
  the relationship between the amount of time spent listening to music daily and anxiety
  levels, focusing on Spotify users. The data will help identify patterns or potential
  correlations for further analysis.
- 1599
- 1492
- 107
