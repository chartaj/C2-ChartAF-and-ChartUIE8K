1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Scatter plot

  * Heatmap

  * Stacked bar/column chart

  * Pie chart

  * Line chart

  * Histogram

  * Box chart'
- 1040
- 1002
- 38
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually \n<end of the annotation\
  \ list>"
- 849
- 710
- 139
1-3. asking_user_emulator_for_initial_prompt: "You are an expert user emulator.\n\n\
  <start of data example format>\n{'../Extra_datas/data/167.csv': {'summary': {'Column':\
  \ ['age', 'sex', 'chest pain type', 'resting bp s', 'cholesterol', 'fasting blood\
  \ sugar', 'resting ecg', 'max heart rate', 'exercise angina', 'oldpeak', 'ST slope',\
  \ 'target'], 'Data Type': [dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'),\
  \ dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'),\
  \ dtype('float64'), dtype('int64'), dtype('int64')], 'Missing Values': [0, 0, 0,\
  \ 0, 0, 0, 0, 0, 0, 0, 0, 0], 'Unique Values': [50, 2, 4, 67, 222, 2, 3, 119, 2,\
  \ 53, 4, 2]}, 'sample_data': {'age': [40, 49, 37], 'sex': [1, 0, 1], 'chest pain\
  \ type': [2, 3, 2], 'resting bp s': [140, 160, 130], 'cholesterol': [289, 180, 283],\
  \ 'fasting blood sugar': [0, 0, 0], 'resting ecg': [0, 0, 1], 'max heart rate':\
  \ [172, 156, 98], 'exercise angina': [0, 0, 0], 'oldpeak': [0.0, 1.0, 0.0], 'ST\
  \ slope': [1, 2, 1], 'target': [0, 1, 0]}}}\n<end of data example format>\n\n<start\
  \ of data details format>\n\U0001FAC0 Heart Disease Dataset\nhealth\n<end of data\
  \ details format>\n\nGiven a data format, imagine a chart that visualizes this data\
  \ as the final output you want from the service provider.\nYou need to imagine a\
  \ chart with * Line chart that utilizes the data format.\nIf there are multiple\
  \ given data formats, imagine a chart with * Line chart that utilizes all the data\
  \ formats.\nSince you are an amateur user, your instruction will be partially SUBJECTIVE\
  \ and NOT DETAILED.\nAlso, refer to the data details to create as practical and\
  \ realistic instructions as possible.\nInstructions must reflect the context of\
  \ the data.\nTo emulate a real-world user your instruction should be 100 in size\
  \ (word count).\nYour response should ONLY contain the user emulated instruction.\n\
  Do not include anything else."
1-4. total_chart_types:
- '* Box chart'
- '* Column chart'
- '* Histogram'
- '* Line chart'
- '* Stacked bar/column chart'
- '* Pie chart'
- '* Bar chart'
- '* Heatmap'
- '* Scatter plot'
- '* Box chart'
- '* Column chart'
- '* Histogram'
- '* Line chart'
2. initial_prompt: !!python/tuple
- I need a line chart to visualize the "Heart Disease Dataset". Specifically, one
  line should represent "age" and another line for "max heart rate". Both lines should
  plot across the same set of patients. The x-axis should be patient index and the
  y-axis for both lines should represent their respective values. Add a legend to
  differentiate between age and max heart rate, and ensure the chart is easy to interpret.
  Please ensure the chart is clear and informative, reflecting the heart health data
  effectively. Thanks!
- 686
- 585
- 101
