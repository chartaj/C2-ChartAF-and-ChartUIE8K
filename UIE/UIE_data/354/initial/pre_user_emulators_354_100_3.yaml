1-1. selected_chart_types: !!python/tuple
- '* Line chart

  * Candlestick chart

  * Area chart

  * Scatter plot

  * Heatmap'
- 921
- 901
- 20
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n2. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 745
- 606
- 139
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/354.csv'': {''summary'': {''Column'': [''Date'', ''Open'',
  ''High'', ''Low'', ''Close'', ''Adj Close'', ''Volume''], ''Data Type'': [dtype(''O''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''int64'')], ''Missing Values'': [0, 0, 0, 0, 0, 0, 0],
  ''Unique Values'': [1257, 1208, 1219, 1215, 1227, 1227, 1256]}, ''sample_data'':
  {''Date'': [''2018-10-01'', ''2018-10-02'', ''2018-10-03''], ''Open'': [163.029999,
  161.580002, 160.0], ''High'': [165.880005, 162.279999, 163.660004], ''Low'': [161.259995,
  158.669998, 159.529999], ''Close'': [162.440002, 159.330002, 162.429993], ''Adj
  Close'': [162.440002, 159.330002, 162.429993], ''Volume'': [26407700, 36031000,
  23109500]}}}

  <end of data example format>


  <start of data details format>

  Meta company dataset

  business

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Heatmap that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Heatmap that utilizes
  all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 100 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Area chart'
- '* Line chart'
- '* Candlestick chart'
- '* Heatmap'
- '* Scatter plot'
- '* Area chart'
- '* Line chart'
- '* Candlestick chart'
- '* Heatmap'
2. initial_prompt: !!python/tuple
- I would like to create a heatmap to visualize the Meta company's stock data over
  time. The data includes columns such as Date, Open, High, Low, Close, Adj Close,
  and Volume. Specifically, I want to see how trading volumes fluctuate over different
  days, and how the stock's price range (highs and lows) vary over time. Use colors
  to represent different ranges of trading volumes and price variations, so it's easy
  to spot trends and outliers. Make sure the heatmap is easy to interpret, even for
  someone with a basic understanding of stock data.
- 596
- 481
- 115
