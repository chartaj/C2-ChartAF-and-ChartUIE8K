1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Lollipop chart

  * Dot plot

  * Scatter plot

  * Heatmap

  * Treemap

  * Pie chart

  * Donut chart

  * Area chart

  * Line chart

  * Histogram

  * Box chart

  * Choropleth map'
- 918
- 860
- 58
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 710
- 571
- 139
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/159.csv': {'summary': {'Column':\
  \ ['Rank', 'Name', 'Net Worth', 'Age', 'Country', 'Source', 'Industry'], 'Data Type':\
  \ [dtype('float64'), dtype('O'), dtype('O'), dtype('float64'), dtype('O'), dtype('O'),\
  \ dtype('O')], 'Missing Values': [123, 123, 123, 202, 123, 123, 123], 'Unique Values':\
  \ [2509, 2494, 222, 76, 74, 867, 18]}, 'sample_data': {'Rank': [1.0, 2.0, 3.0],\
  \ 'Name': ['Elon Musk', 'Jeff Bezos', 'Bernard Arnault & family'], 'Net Worth':\
  \ ['$219 B', '$171 B', '$158 B'], 'Age': [50.0, 58.0, 73.0], 'Country': ['United\
  \ States', 'United States', 'France'], 'Source': ['Tesla, SpaceX', 'Amazon', 'LVMH'],\
  \ 'Industry': ['Automotive', 'Technology', 'Fashion & Retail']}}}\n<end of data\
  \ example format>\n\n<start of annotations format>\n['<start of the annotation list>',\
  \ '1. Text Annotations:', 'Description: Data-driven text annotations display values\
  \ linked to chart elements, such as data points in a scatterplot. They draw attention\
  \ to specific elements by highlighting their values.', 'Purpose: When only some\
  \ elements are annotated, the intent is to focus the viewer\u2019s attention on\
  \ those before examining others.', 'Other Uses: Non-data-driven annotations can\
  \ provide context, orientation, or editorial comments.', '3. Highlights:', 'Description:\
  \ Highlights modify the appearance of chart elements (e.g., size, color) to emphasize\
  \ or reduce their importance.', 'Purpose: Used to distinguish certain elements from\
  \ others, making them stand out visually', '<end of the annotation list>']\n<end\
  \ of annotations format>\n\n<start of data details format>\nExploring Wealth: Forbes\
  \ Richest People Dataset\nbusiness\n<end of data details format>\n\nGiven a data\
  \ format, imagine a chart that visualizes this data as the final output you want\
  \ from the service provider.\nConsider what purpose the data has and the practical\
  \ purpose of visualization and include it in the instructions.\nYou need to imagine\
  \ a chart with * Column chart and given annotations that utilizes the data format.\n\
  If there are multiple given data formats, imagine a chart with * Column chart and\
  \ given annotations that utilizes all the data formats.\nSince you are an amateur\
  \ user, your instruction will be partially SUBJECTIVE and NOT DETAILED.\nAlso, refer\
  \ to the data details to create as practical and realistic instructions as possible.\n\
  Instructions must reflect the context of the data.\nTo emulate a real-world user\
  \ your instruction should be 100 in size (word count). Do not include data path\
  \ in the instruction.\nYour response should ONLY contain the user emulated instruction.\n\
  Do not include anything else."
1-4. total_chart_types:
- '* Area chart'
- '* Dot plot'
- '* Column chart'
- '* Treemap'
- '* Lollipop chart'
- '* Bar chart'
- '* Pie chart'
- '* Box chart'
- '* Donut chart'
- '* Histogram'
- '* Heatmap'
- '* Line chart'
- '* Scatter plot'
- '* Choropleth map'
- '* Area chart'
- '* Dot plot'
- '* Column chart'
2. initial_prompt: !!python/tuple
- Create a column chart visualizing the top 10 richest people from the Forbes dataset.
  Highlight the columns based on 'Net Worth' to distinguish the top three individuals.
  Add text annotations for the names and net worth values of these top three. Use
  color highlights to differentiate the 'Industry' they belong to, for example, use
  different colors for 'Technology', 'Automotive', and 'Fashion & Retail'. The chart
  should help visualize the distribution of wealth among the richest people and draw
  attention to specific individuals and industries.
- 743
- 640
- 103
