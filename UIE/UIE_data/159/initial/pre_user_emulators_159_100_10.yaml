1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Lollipop chart

  * Dot plot

  * Scatter plot

  * Heatmap

  * Treemap

  * Pie chart

  * Donut chart

  * Area chart

  * Line chart

  * Histogram

  * Box chart

  * Choropleth map'
- 918
- 860
- 58
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 710
- 571
- 139
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/159.csv'': {''summary'': {''Column'': [''Rank'', ''Name'',
  ''Net Worth'', ''Age'', ''Country'', ''Source'', ''Industry''], ''Data Type'': [dtype(''float64''),
  dtype(''O''), dtype(''O''), dtype(''float64''), dtype(''O''), dtype(''O''), dtype(''O'')],
  ''Missing Values'': [123, 123, 123, 202, 123, 123, 123], ''Unique Values'': [2509,
  2494, 222, 76, 74, 867, 18]}, ''sample_data'': {''Rank'': [1.0, 2.0, 3.0], ''Name'':
  [''Elon Musk'', ''Jeff Bezos'', ''Bernard Arnault & family''], ''Net Worth'': [''$219
  B'', ''$171 B'', ''$158 B''], ''Age'': [50.0, 58.0, 73.0], ''Country'': [''United
  States'', ''United States'', ''France''], ''Source'': [''Tesla, SpaceX'', ''Amazon'',
  ''LVMH''], ''Industry'': [''Automotive'', ''Technology'', ''Fashion & Retail'']}}}

  <end of data example format>


  <start of data details format>

  Exploring Wealth: Forbes Richest People Dataset

  business

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Heatmap that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Heatmap that utilizes
  all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 100 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Area chart'
- '* Dot plot'
- '* Column chart'
- '* Treemap'
- '* Lollipop chart'
- '* Bar chart'
- '* Pie chart'
- '* Box chart'
- '* Donut chart'
- '* Histogram'
- '* Heatmap'
- '* Line chart'
- '* Scatter plot'
- '* Choropleth map'
- '* Area chart'
- '* Dot plot'
- '* Column chart'
- '* Treemap'
- '* Lollipop chart'
- '* Bar chart'
- '* Pie chart'
- '* Box chart'
- '* Donut chart'
- '* Histogram'
- '* Heatmap'
2. initial_prompt: !!python/tuple
- Create a heatmap to visualize the wealth distribution and characteristics of the
  top billionaires from the Forbes Richest People dataset. The heatmap should include
  factors like Rank, Net Worth, Age, Country, Source, and Industry. I want to see
  how these attributes correlate, especially focusing on Net Worth and Age across
  different countries and industries. Use color gradients to denote values, missing
  data can be highlighted or ignored. Ensure the heatmap is easy to interpret, with
  appropriate legends and labels for clarity. This will help understand wealth patterns
  globally.
- 553
- 446
- 107
