1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Grouped bar/column chart

  * Dot plot

  * Scatter plot

  * Heatmap

  * Stacked bar/column chart

  * Pie chart

  * Histogram

  * Box chart'
- 992
- 950
- 42
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n2. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 800
- 661
- 139
1-3. asking_user_emulator_for_initial_prompt: "You are an expert user emulator.\n\n\
  <start of data example format>\n{'../Extra_datas/data/63.csv': {'summary': {'Column':\
  \ ['Age', 'Gender', 'AnnualIncome', 'NumberOfPurchases', 'ProductCategory', 'TimeSpentOnWebsite',\
  \ 'LoyaltyProgram', 'DiscountsAvailed', 'PurchaseStatus'], 'Data Type': [dtype('int64'),\
  \ dtype('int64'), dtype('float64'), dtype('int64'), dtype('int64'), dtype('float64'),\
  \ dtype('int64'), dtype('int64'), dtype('int64')], 'Missing Values': [0, 0, 0, 0,\
  \ 0, 0, 0, 0, 0], 'Unique Values': [53, 2, 1388, 21, 5, 1388, 2, 6, 2]}, 'sample_data':\
  \ {'Age': [40, 20, 27], 'Gender': [1, 1, 1], 'AnnualIncome': [66120.26793867795,\
  \ 23579.773583030517, 127821.3064316501], 'NumberOfPurchases': [8, 4, 11], 'ProductCategory':\
  \ [0, 2, 2], 'TimeSpentOnWebsite': [30.56860115599193, 38.2400966055442, 31.633211501604148],\
  \ 'LoyaltyProgram': [0, 0, 1], 'DiscountsAvailed': [5, 5, 0], 'PurchaseStatus':\
  \ [1, 0, 1]}}}\n<end of data example format>\n\n<start of data details format>\n\
  \U0001F6CD\uFE0F Predict Customer Purchase Behavior Dataset\nbusiness\n<end of data\
  \ details format>\n\nGiven a data format, imagine a chart that visualizes this data\
  \ as the final output you want from the service provider.\nIt MUST be a chart that\
  \ can be created using only data columns.\nYou need to imagine a chart with * Box\
  \ chart that utilizes the data format.\nIf there are multiple given data formats,\
  \ imagine a chart with * Box chart that utilizes all the data formats.\nSince you\
  \ are an amateur user, your instruction will be partially SUBJECTIVE and NOT DETAILED.\n\
  Also, refer to the data details to create as practical and realistic instructions\
  \ as possible.\nInstructions must reflect the context of the data.\nTo emulate a\
  \ real-world user your instruction should be 100 in size (word count).\nYour response\
  \ should ONLY contain the user emulated instruction.\nDo not include anything else."
1-4. total_chart_types:
- '* Grouped bar/column chart'
- '* Stacked bar/column chart'
- '* Histogram'
- '* Bar chart'
- '* Scatter plot'
- '* Box chart'
- '* Heatmap'
- '* Dot plot'
- '* Pie chart'
- '* Grouped bar/column chart'
- '* Stacked bar/column chart'
- '* Histogram'
- '* Bar chart'
- '* Scatter plot'
- '* Box chart'
2. initial_prompt: !!python/tuple
- I need a box chart to visualize the distribution of annual income across different
  product categories in our customer purchase behavior dataset. The x-axis should
  represent the product categories, and the y-axis should show the annual income.
  Additionally, I want to differentiate the box plots by loyalty program status and
  see how income distribution varies for loyal and non-loyal customers. This will
  help in understanding if loyalty program members have different income levels across
  product categories.
- 636
- 550
- 86
