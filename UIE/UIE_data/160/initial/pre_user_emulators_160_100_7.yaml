1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Grouped bar/column chart

  * Heatmap

  * Scatter plot

  * Stacked bar/column chart

  * Pie chart

  * Donut chart

  * Line chart

  * Box chart'
- 887
- 839
- 48
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 686
- 548
- 138
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/160.csv'': {''summary'': {''Column'': [''year'', ''team'',
  ''score'', ''round'', ''yearly_game_id'', ''team_num'', ''win_status''], ''Data
  Type'': [dtype(''int64''), dtype(''O''), dtype(''int64''), dtype(''O''), dtype(''int64''),
  dtype(''int64''), dtype(''O'')], ''Missing Values'': [0, 0, 0, 0, 0, 0, 0], ''Unique
  Values'': [8, 36, 12, 6, 52, 2, 3]}, ''sample_data'': {''year'': [1991, 1991, 1991],
  ''team'': [''CHN'', ''NOR'', ''DEN''], ''score'': [4, 0, 3], ''round'': [''Group'',
  ''Group'', ''Group''], ''yearly_game_id'': [1, 1, 2], ''team_num'': [1, 2, 1], ''win_status'':
  [''Won'', ''Lost'', ''Won'']}}}

  <end of data example format>


  <start of data details format>

  wwc_outcomes

  sports-and-recreation

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Donut chart that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Donut chart that
  utilizes all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 100 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Pie chart'
- '* Grouped bar/column chart'
- '* Stacked bar/column chart'
- '* Line chart'
- '* Column chart'
- '* Bar chart'
- '* Box chart'
- '* Donut chart'
- '* Heatmap'
- '* Scatter plot'
- '* Pie chart'
- '* Grouped bar/column chart'
- '* Stacked bar/column chart'
- '* Line chart'
- '* Column chart'
- '* Bar chart'
- '* Box chart'
- '* Donut chart'
2. initial_prompt: !!python/tuple
- I have data from the Women's World Cup outcomes detailing years, teams, scores,
  rounds, yearly game IDs, team numbers, and win statuses. Please create a donut chart
  to visualize the win status distribution (Won, Lost, Draw) across all teams. This
  chart should help in understanding the overall performance trends of different teams
  in the tournament spanning multiple years. The dataset contains no missing values
  and has unique win statuses for comparison. Make sure the chart highlights the proportion
  of each win status in a visually appealing manner suitable for sports analysis.
  Thank you!
- 534
- 425
- 109
