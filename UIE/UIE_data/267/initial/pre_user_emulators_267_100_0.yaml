1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Scatter plot

  * Heatmap

  * Treemap

  * Line chart

  * Histogram

  * Choropleth map'
- 1853
- 1825
- 28
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n2. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 1671
- 1533
- 138
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/267.csv': {'summary': {'Column':\
  \ ['X_Minimum', 'X_Maximum', 'Y_Minimum', 'Y_Maximum', 'Pixels_Areas', 'X_Perimeter',\
  \ 'Y_Perimeter', 'Sum_of_Luminosity', 'Minimum_of_Luminosity', 'Maximum_of_Luminosity',\
  \ 'Length_of_Conveyer', 'TypeOfSteel_A300', 'TypeOfSteel_A400', 'Steel_Plate_Thickness',\
  \ 'Edges_Index', 'Empty_Index', 'Square_Index', 'Outside_X_Index', 'Edges_X_Index',\
  \ 'Edges_Y_Index', 'Outside_Global_Index', 'LogOfAreas', 'Log_X_Index', 'Log_Y_Index',\
  \ 'Orientation_Index', 'Luminosity_Index', 'SigmoidOfAreas', 'Pastry', 'Z_Scratch',\
  \ 'K_Scatch', 'Stains', 'Dirtiness', 'Bumps', 'Other_Faults'], 'Data Type': [dtype('int64'),\
  \ dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'),\
  \ dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'),\
  \ dtype('int64'), dtype('int64'), dtype('int64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'),\
  \ dtype('int64'), dtype('int64'), dtype('int64')], 'Missing Values': [0, 0, 0, 0,\
  \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
  \ 0, 0, 0, 0], 'Unique Values': [962, 994, 1939, 1940, 920, 399, 317, 1909, 161,\
  \ 100, 84, 2, 2, 24, 1387, 1338, 770, 454, 818, 648, 3, 914, 183, 217, 918, 1522,\
  \ 388, 2, 2, 2, 2, 2, 2, 2]}, 'sample_data': {'X_Minimum': [42, 645, 829], 'X_Maximum':\
  \ [50, 651, 835], 'Y_Minimum': [270900, 2538079, 1553913], 'Y_Maximum': [270944,\
  \ 2538108, 1553931], 'Pixels_Areas': [267, 108, 71], 'X_Perimeter': [17, 10, 8],\
  \ 'Y_Perimeter': [44, 30, 19], 'Sum_of_Luminosity': [24220, 11397, 7972], 'Minimum_of_Luminosity':\
  \ [76, 84, 99], 'Maximum_of_Luminosity': [108, 123, 125], 'Length_of_Conveyer':\
  \ [1687, 1687, 1623], 'TypeOfSteel_A300': [1, 1, 1], 'TypeOfSteel_A400': [0, 0,\
  \ 0], 'Steel_Plate_Thickness': [80, 80, 100], 'Edges_Index': [0.0498, 0.7647, 0.971],\
  \ 'Empty_Index': [0.2415, 0.3793, 0.3426], 'Square_Index': [0.1818, 0.2069, 0.3333],\
  \ 'Outside_X_Index': [0.0047, 0.0036, 0.0037], 'Edges_X_Index': [0.4706, 0.6, 0.75],\
  \ 'Edges_Y_Index': [1.0, 0.9667, 0.9474], 'Outside_Global_Index': [1.0, 1.0, 1.0],\
  \ 'LogOfAreas': [2.4265, 2.0334, 1.8513], 'Log_X_Index': [0.9031, 0.7782, 0.7782],\
  \ 'Log_Y_Index': [1.6435, 1.4624, 1.2553], 'Orientation_Index': [0.8182, 0.7931,\
  \ 0.6667], 'Luminosity_Index': [-0.2913, -0.1756, -0.1228], 'SigmoidOfAreas': [0.5822,\
  \ 0.2984, 0.215], 'Pastry': [1, 1, 1], 'Z_Scratch': [0, 0, 0], 'K_Scatch': [0, 0,\
  \ 0], 'Stains': [0, 0, 0], 'Dirtiness': [0, 0, 0], 'Bumps': [0, 0, 0], 'Other_Faults':\
  \ [0, 0, 0]}}}\n<end of data example format>\n\n<start of annotations format>\n\
  ['<start of the annotation list>', '1. Text Annotations:', 'Description: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.', 'Purpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.', 'Other Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.', '2. Highlights:',\
  \ 'Description: Highlights modify the appearance of chart elements (e.g., size,\
  \ color) to emphasize or reduce their importance.', 'Purpose: Used to distinguish\
  \ certain elements from others, making them stand out visually', '<end of the annotation\
  \ list>']\n<end of annotations format>\n\n<start of data details format>\nFaulty\
  \ Steel Plates\nurban-planning\n<end of data details format>\n\nGiven a data format,\
  \ imagine a chart that visualizes this data as the final output you want from the\
  \ service provider.\nConsider what purpose the data has and the practical purpose\
  \ of visualization and include it in the instructions.\nYou need to imagine a chart\
  \ with * Histogram and given annotations that utilizes the data format.\nIf there\
  \ are multiple given data formats, imagine a chart with * Histogram and given annotations\
  \ that utilizes all the data formats.\nSince you are an amateur user, your instruction\
  \ will be partially SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details\
  \ to create as practical and realistic instructions as possible.\nInstructions must\
  \ reflect the context of the data.\nTo emulate a real-world user your instruction\
  \ should be 100 in size (word count). Do not include data path in the instruction.\n\
  Your response should ONLY contain the user emulated instruction.\nDo not include\
  \ anything else."
1-4. total_chart_types:
- '* Histogram'
- '* Heatmap'
- '* Bar chart'
- '* Treemap'
- '* Scatter plot'
- '* Line chart'
- '* Choropleth map'
- '* Histogram'
2. initial_prompt: !!python/tuple
- Visualize a histogram showing the distribution of Pixel Areas for faulty steel plates.
  Annotate specific points to highlight plates with high pixel areas. Use highlights
  to differentiate between types of steel (A300 and A400). Also, add text annotations
  for outliers in the Sum of Luminosity to draw attention to unusual brightness. The
  goal is to easily identify any correlation between plate thickness and defects like
  Pastry, Stains, Dirtiness, and Bumps. This will aid urban planning in identifying
  patterns and problem areas in steel plate production quality.
- 1708
- 1600
- 108
