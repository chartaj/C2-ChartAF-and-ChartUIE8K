1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Heatmap

  * Scatter plot

  * Stacked bar/column chart

  * Line chart

  * Box chart'
- 969
- 942
- 27
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 790
- 651
- 139
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/431.csv': {'summary': {'Column':\
  \ ['rank', 'password', 'category', 'value', 'time_unit', 'offline_crack_sec', 'rank_alt',\
  \ 'strength', 'font_size'], 'Data Type': [dtype('float64'), dtype('O'), dtype('O'),\
  \ dtype('float64'), dtype('O'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64')], 'Missing Values': [7, 7, 7, 7, 7, 7, 7, 7, 7], 'Unique Values':\
  \ [500, 500, 10, 15, 7, 16, 500, 22, 19]}, 'sample_data': {'rank': [1.0, 2.0, 3.0],\
  \ 'password': ['password', '123456', '12345678'], 'category': ['password-related',\
  \ 'simple-alphanumeric', 'simple-alphanumeric'], 'value': [6.91, 18.52, 1.29], 'time_unit':\
  \ ['years', 'minutes', 'days'], 'offline_crack_sec': [2.17, 1.1100000000000002e-05,\
  \ 0.00111], 'rank_alt': [1.0, 2.0, 3.0], 'strength': [8.0, 4.0, 4.0], 'font_size':\
  \ [11.0, 8.0, 8.0]}}}\n<end of data example format>\n\n<start of annotations format>\n\
  ['<start of the annotation list>', '1. Text Annotations:', 'Description: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.', 'Purpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.', 'Other Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.', '3. Highlights:',\
  \ 'Description: Highlights modify the appearance of chart elements (e.g., size,\
  \ color) to emphasize or reduce their importance.', 'Purpose: Used to distinguish\
  \ certain elements from others, making them stand out visually', '<end of the annotation\
  \ list>']\n<end of annotations format>\n\n<start of data details format>\ncracking\
  \ your favorite password\ncybersecurity\n<end of data details format>\n\nGiven a\
  \ data format, imagine a chart that visualizes this data as the final output you\
  \ want from the service provider.\nConsider what purpose the data has and the practical\
  \ purpose of visualization and include it in the instructions.\nYou need to imagine\
  \ a chart with * Line chart and given annotations that utilizes the data format.\n\
  If there are multiple given data formats, imagine a chart with * Line chart and\
  \ given annotations that utilizes all the data formats.\nSince you are an amateur\
  \ user, your instruction will be partially SUBJECTIVE and NOT DETAILED.\nAlso, refer\
  \ to the data details to create as practical and realistic instructions as possible.\n\
  Instructions must reflect the context of the data.\nTo emulate a real-world user\
  \ your instruction should be 100 in size (word count). Do not include data path\
  \ in the instruction.\nYour response should ONLY contain the user emulated instruction.\n\
  Do not include anything else."
1-4. total_chart_types:
- '* Line chart'
- '* Box chart'
- '* Scatter plot'
- '* Bar chart'
- '* Stacked bar/column chart'
- '* Heatmap'
- '* Line chart'
2. initial_prompt: !!python/tuple
- 'Visualize a line chart showing how long it takes to crack various passwords. Highlight
  the top 3 weakest passwords: "password," "123456," and "12345678." Annotate each
  point on the line with the password and its offline cracking time in seconds. Use
  different colors for categories like "simple-alphanumeric" and "password-related."
  The purpose is to emphasize the ease of cracking these common passwords and raise
  awareness about cybersecurity. Highlight the cracking times in a tooltip when hovering
  over each data point, making the chart interactive and engaging to understand.'
- 831
- 720
- 111
