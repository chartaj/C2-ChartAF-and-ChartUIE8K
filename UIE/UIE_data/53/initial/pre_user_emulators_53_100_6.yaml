1-1. selected_chart_types: !!python/tuple
- '* Line chart

  * Candlestick chart

  * Area chart

  * Bar chart

  * Scatter plot

  * Histogram

  * Violin plot'
- 930
- 902
- 28
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n  \n2. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 754
- 614
- 140
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/53.csv'': {''summary'': {''Column'': [''Date'', ''Open'',
  ''High'', ''Low'', ''Close'', ''Adj Close'', ''Volume''], ''Data Type'': [dtype(''O''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''int64'')], ''Missing Values'': [0, 0, 0, 0, 0, 0, 0],
  ''Unique Values'': [1509, 1436, 1438, 1453, 1458, 1458, 1508]}, ''sample_data'':
  {''Date'': [''2018-01-03'', ''2018-01-04'', ''2018-01-05''], ''Open'': [181.880005,
  184.899994, 185.589996], ''High'': [184.779999, 186.210007, 186.899994], ''Low'':
  [181.330002, 184.100006, 184.929993], ''Close'': [184.669998, 184.330002, 186.850006],
  ''Adj Close'': [184.669998, 184.330002, 186.850006], ''Volume'': [16886600, 13880900,
  13574500]}}}

  <end of data example format>


  <start of data details format>

  META Stock Historical Prices & Data

  computers-and-technology

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Bar chart that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Bar chart that
  utilizes all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 100 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Scatter plot'
- '* Violin plot'
- '* Area chart'
- '* Candlestick chart'
- '* Histogram'
- '* Line chart'
- '* Bar chart'
- '* Scatter plot'
- '* Violin plot'
- '* Area chart'
- '* Candlestick chart'
- '* Histogram'
- '* Line chart'
- '* Bar chart'
2. initial_prompt: !!python/tuple
- I'd like a bar chart showing the daily trading volume and closing price of META
  stock over a week in January 2018. Please use the 'Volume' and 'Close' columns for
  the y-axes and the 'Date' column for the x-axis. Separate bars for each metric and
  make sure dates are in order. Include labels and a legend. Thank you!
- 563
- 489
- 74
