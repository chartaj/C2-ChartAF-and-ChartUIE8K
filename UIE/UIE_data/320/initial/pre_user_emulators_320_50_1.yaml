1-1. selected_chart_types: !!python/tuple
- '* Column chart

  * Grouped bar chart

  * Heatmap

  * Bubble chart

  * Scatter plot

  * Stacked bar chart

  * Line chart

  * Area chart

  * Histogram

  * Box chart'
- 945
- 903
- 42
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list>\n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 754
- 616
- 138
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/320.csv': {'summary': {'Column':\
  \ ['nbits', 'nprimes', 'msgsize', 'spawnTime', 'encrTime', 'decrTime', 'memory'],\
  \ 'Data Type': [dtype('int64'), dtype('int64'), dtype('int64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64')], 'Missing Values': [0, 0,\
  \ 0, 0, 0, 0, 0], 'Unique Values': [15, 239, 4, 1896, 7528, 7527, 9]}, 'sample_data':\
  \ {'nbits': [8, 8, 8], 'nprimes': [2, 2, 2], 'msgsize': [8, 16, 24], 'spawnTime':\
  \ [0.000445604, 0.000445604, 0.000445604], 'encrTime': [4.63e-05, 2.98e-05, 2.67e-05],\
  \ 'decrTime': [1.55e-05, 2.5e-05, 4.27e-05], 'memory': [0.00151062, 0.001296997,\
  \ 0.001235962]}}}\n<end of data example format>\n\n<start of annotations format>\n\
  ['<start of the annotation list>', '1. Text Annotations:', 'Description: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.', 'Purpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.', 'Other Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.', '3. Highlights:',\
  \ 'Description: Highlights modify the appearance of chart elements (e.g., size,\
  \ color) to emphasize or reduce their importance.', 'Purpose: Used to distinguish\
  \ certain elements from others, making them stand out visually', '<end of the annotation\
  \ list>']\n<end of annotations format>\n\n<start of data details format>\nN Primes\
  \ Based RSA Variant Analysis\ncryptocurrency-and-blockchain\n<end of data details\
  \ format>\n\nGiven a data format, imagine a chart that visualizes this data as the\
  \ final output you want from the service provider.\nConsider what purpose the data\
  \ has and the practical purpose of visualization and include it in the instructions.\n\
  You need to imagine a chart with * Area chart and given annotations that utilizes\
  \ the data format.\nIf there are multiple given data formats, imagine a chart with\
  \ * Area chart and given annotations that utilizes all the data formats.\nSince\
  \ you are an amateur user, your instruction will be partially SUBJECTIVE and NOT\
  \ DETAILED.\nAlso, refer to the data details to create as practical and realistic\
  \ instructions as possible.\nInstructions must reflect the context of the data.\n\
  To emulate a real-world user your instruction should be 50 in size (word count).\
  \ Do not include data path in the instruction.\nYour response should ONLY contain\
  \ the user emulated instruction.\nDo not include anything else."
1-4. total_chart_types:
- '* Stacked bar chart'
- '* Area chart'
2. initial_prompt: !!python/tuple
- Visualize the RSA variant analysis using an area chart highlighting spawnTime, encrTime,
  and decrTime trends, with text annotations emphasizing unique data points within
  the cryptocurrency-and-blockchain context.
- 724
- 685
- 39
