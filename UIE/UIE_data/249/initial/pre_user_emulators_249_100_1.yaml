1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Column chart

  * Grouped bar/column chart

  * Dot plot

  * Heatmap

  * Bubble chart

  * Scatter plot

  * Stacked bar/column chart

  * Pie chart

  * Donut chart

  * Area chart

  * Line chart

  * Step line chart

  * Histogram

  * Box chart

  * Violin plot'
- 1291
- 1218
- 73
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n2. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 1065
- 926
- 139
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/249.csv': {'summary': {'Column':\
  \ ['Unnamed: 0', 'symbol', 'name', 'price', 'pricing_changes', 'pricing_percentage_changes',\
  \ 'sector', 'industry', 'market_cap', 'share_volume', 'earnings_per_share', 'annualized_dividend',\
  \ 'dividend_pay_date', 'symbol_yield', 'beta', 'errors'], 'Data Type': [dtype('int64'),\
  \ dtype('O'), dtype('O'), dtype('float64'), dtype('O'), dtype('O'), dtype('O'),\
  \ dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'), dtype('O'),\
  \ dtype('O'), dtype('bool')], 'Missing Values': [0, 0, 0, 0, 0, 2349, 2201, 2183,\
  \ 1515, 486, 5418, 6141, 6077, 4556, 2241, 0], 'Unique Values': [8339, 8339, 8296,\
  \ 4926, 1808, 1613, 12, 141, 6756, 7599, 1041, 671, 483, 1366, 793, 2]}, 'sample_data':\
  \ {'Unnamed: 0': [0, 1, 2], 'symbol': ['AAPL', 'MSFT', 'GOOG'], 'name': ['Apple\
  \ Inc. Common Stock', 'Microsoft Corporation Common Stock', 'Alphabet Inc. Class\
  \ C Capital Stock'], 'price': [157.51, 289.56, 2639.755], 'pricing_changes': ['+2.42',\
  \ '+2.41', '+46.545'], 'pricing_percentage_changes': ['(+1.56%)', '(+0.84%)', '(+1.79%)'],\
  \ 'sector': ['Technology', 'Technology', 'Technology'], 'industry': ['Computer Manufacturing',\
  \ 'Computer Software: Prepackaged Software', 'Internet and Information Services'],\
  \ 'market_cap': ['2,699,423,838,000', '2,143,429,080,429', '1,724,718,735,878'],\
  \ 'share_volume': ['63,429,579', '22,790,662', '900,760'], 'earnings_per_share':\
  \ ['$6.04', '$9.39', '$112.23'], 'annualized_dividend': ['$0.88', '$2.48', nan],\
  \ 'dividend_pay_date': ['Feb 10, 2022', 'Jun 9, 2022', nan], 'symbol_yield': ['0.58%',\
  \ '0.9%', nan], 'beta': ['1.18', '0.91', '1.06'], 'errors': [False, False, False]}}}\n\
  <end of data example format>\n\n<start of annotations format>\n['<start of the annotation\
  \ list>', '1. Text Annotations:', 'Description: Data-driven text annotations display\
  \ values linked to chart elements, such as data points in a scatterplot. They draw\
  \ attention to specific elements by highlighting their values.', 'Purpose: When\
  \ only some elements are annotated, the intent is to focus the viewer\u2019s attention\
  \ on those before examining others.', 'Other Uses: Non-data-driven annotations can\
  \ provide context, orientation, or editorial comments.', '2. Highlights:', 'Description:\
  \ Highlights modify the appearance of chart elements (e.g., size, color) to emphasize\
  \ or reduce their importance.', 'Purpose: Used to distinguish certain elements from\
  \ others, making them stand out visually', '<end of the annotation list>']\n<end\
  \ of annotations format>\n\n<start of data details format>\nHigh-Tech Companies\
  \ on NASDAQ\nbusiness\n<end of data details format>\n\nGiven a data format, imagine\
  \ a chart that visualizes this data as the final output you want from the service\
  \ provider.\nConsider what purpose the data has and the practical purpose of visualization\
  \ and include it in the instructions.\nYou need to imagine a chart with * Pie chart\
  \ and given annotations that utilizes the data format.\nIf there are multiple given\
  \ data formats, imagine a chart with * Pie chart and given annotations that utilizes\
  \ all the data formats.\nSince you are an amateur user, your instruction will be\
  \ partially SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details to create\
  \ as practical and realistic instructions as possible.\nInstructions must reflect\
  \ the context of the data.\nTo emulate a real-world user your instruction should\
  \ be 100 in size (word count). Do not include data path in the instruction.\nYour\
  \ response should ONLY contain the user emulated instruction.\nDo not include anything\
  \ else."
1-4. total_chart_types:
- '* Stacked bar/column chart'
- '* Pie chart'
- '* Heatmap'
- '* Bubble chart'
- '* Step line chart'
- '* Bar chart'
- '* Donut chart'
- '* Box chart'
- '* Grouped bar/column chart'
- '* Histogram'
- '* Violin plot'
- '* Line chart'
- '* Area chart'
- '* Scatter plot'
- '* Column chart'
- '* Stacked bar/column chart'
- '* Pie chart'
2. initial_prompt: !!python/tuple
- Create a pie chart visualizing the market capitalization distribution of top high-tech
  companies on NASDAQ. Use color highlights to differentiate companies, focusing on
  those with the highest market cap. Include text annotations for the percentage share
  of each company's market cap. The chart will help visualize the market dominance
  of top players within the tech industry. Add context-relevant comments highlighting
  significant figures. This will help viewers quickly grasp the competitive landscape
  and the scale of leading tech companies. Ensure the sectors and industries are clearly
  visible.
- 1094
- 995
- 99
