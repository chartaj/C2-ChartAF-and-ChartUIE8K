1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Grouped bar/column chart

  * Heatmap

  * Scatter plot

  * Bubble chart

  * Stacked bar/column chart

  * Pie chart

  * Treemap

  * Line chart

  * Area chart

  * Histogram

  * Box chart

  * Density plot'
- 2075
- 2017
- 58
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 1866
- 1727
- 139
1-3. asking_user_emulator_for_initial_prompt: "You are an expert user emulator.\n\n\
  <start of data example format>\n{'../Extra_datas/data/18.csv': {'summary': {'Column':\
  \ ['abilities', 'against_bug', 'against_dark', 'against_dragon', 'against_electric',\
  \ 'against_fairy', 'against_fight', 'against_fire', 'against_flying', 'against_ghost',\
  \ 'against_grass', 'against_ground', 'against_ice', 'against_normal', 'against_poison',\
  \ 'against_psychic', 'against_rock', 'against_steel', 'against_water', 'attack',\
  \ 'base_egg_steps', 'base_happiness', 'base_total', 'capture_rate', 'classfication',\
  \ 'defense', 'experience_growth', 'height_m', 'hp', 'japanese_name', 'name', 'percentage_male',\
  \ 'pokedex_number', 'sp_attack', 'sp_defense', 'speed', 'type1', 'type2', 'weight_kg',\
  \ 'generation', 'is_legendary'], 'Data Type': [dtype('O'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('int64'), dtype('int64'), dtype('int64'), dtype('int64'),\
  \ dtype('O'), dtype('O'), dtype('int64'), dtype('int64'), dtype('float64'), dtype('int64'),\
  \ dtype('O'), dtype('O'), dtype('float64'), dtype('int64'), dtype('int64'), dtype('int64'),\
  \ dtype('int64'), dtype('O'), dtype('O'), dtype('float64'), dtype('int64'), dtype('int64')],\
  \ 'Missing Values': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
  \ 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 98, 0, 0, 0, 0, 0, 384, 20, 0, 0], 'Unique Values':\
  \ [482, 5, 5, 4, 6, 5, 6, 5, 5, 5, 5, 6, 5, 4, 6, 6, 5, 5, 5, 114, 10, 6, 203, 34,\
  \ 588, 109, 6, 51, 99, 801, 801, 7, 801, 111, 97, 113, 18, 18, 421, 7, 2]}, 'sample_data':\
  \ {'abilities': [\"['Overgrow', 'Chlorophyll']\", \"['Overgrow', 'Chlorophyll']\"\
  , \"['Overgrow', 'Chlorophyll']\"], 'against_bug': [1.0, 1.0, 1.0], 'against_dark':\
  \ [1.0, 1.0, 1.0], 'against_dragon': [1.0, 1.0, 1.0], 'against_electric': [0.5,\
  \ 0.5, 0.5], 'against_fairy': [0.5, 0.5, 0.5], 'against_fight': [0.5, 0.5, 0.5],\
  \ 'against_fire': [2.0, 2.0, 2.0], 'against_flying': [2.0, 2.0, 2.0], 'against_ghost':\
  \ [1.0, 1.0, 1.0], 'against_grass': [0.25, 0.25, 0.25], 'against_ground': [1.0,\
  \ 1.0, 1.0], 'against_ice': [2.0, 2.0, 2.0], 'against_normal': [1.0, 1.0, 1.0],\
  \ 'against_poison': [1.0, 1.0, 1.0], 'against_psychic': [2.0, 2.0, 2.0], 'against_rock':\
  \ [1.0, 1.0, 1.0], 'against_steel': [1.0, 1.0, 1.0], 'against_water': [0.5, 0.5,\
  \ 0.5], 'attack': [49, 62, 100], 'base_egg_steps': [5120, 5120, 5120], 'base_happiness':\
  \ [70, 70, 70], 'base_total': [318, 405, 625], 'capture_rate': ['45', '45', '45'],\
  \ 'classfication': ['Seed Pok\xE9mon', 'Seed Pok\xE9mon', 'Seed Pok\xE9mon'], 'defense':\
  \ [49, 63, 123], 'experience_growth': [1059860, 1059860, 1059860], 'height_m': [0.7,\
  \ 1.0, 2.0], 'hp': [45, 60, 80], 'japanese_name': ['Fushigidane\u30D5\u30B7\u30AE\
  \u30C0\u30CD', 'Fushigisou\u30D5\u30B7\u30AE\u30BD\u30A6', 'Fushigibana\u30D5\u30B7\
  \u30AE\u30D0\u30CA'], 'name': ['Bulbasaur', 'Ivysaur', 'Venusaur'], 'percentage_male':\
  \ [88.1, 88.1, 88.1], 'pokedex_number': [1, 2, 3], 'sp_attack': [65, 80, 122], 'sp_defense':\
  \ [65, 80, 120], 'speed': [45, 60, 80], 'type1': ['grass', 'grass', 'grass'], 'type2':\
  \ ['poison', 'poison', 'poison'], 'weight_kg': [6.9, 13.0, 100.0], 'generation':\
  \ [1, 1, 1], 'is_legendary': [0, 0, 0]}}}\n<end of data example format>\n\n<start\
  \ of data details format>\nThe Complete Pokemon Dataset\narts-and-entertainment\n\
  <end of data details format>\n\nGiven a data format, imagine a chart that visualizes\
  \ this data as the final output you want from the service provider.\nYou need to\
  \ imagine a chart with * Histogram that utilizes the data format.\nIf there are\
  \ multiple given data formats, imagine a chart with * Histogram that utilizes all\
  \ the data formats.\nSince you are an amateur user, your instruction will be partially\
  \ SUBJECTIVE and NOT DETAILED.\nAlso, refer to the data details to create as practical\
  \ and realistic instructions as possible.\nInstructions must reflect the context\
  \ of the data.\nTo emulate a real-world user your instruction should be 50 in size\
  \ (word count).\nYour response should ONLY contain the user emulated instruction.\n\
  Do not include anything else."
1-4. total_chart_types:
- '* Heatmap'
- '* Pie chart'
- '* Treemap'
- '* Line chart'
- '* Bar chart'
- '* Scatter plot'
- '* Stacked bar/column chart'
- '* Bubble chart'
- '* Density plot'
- '* Area chart'
- '* Box chart'
- '* Histogram'
2. initial_prompt: !!python/tuple
- Create a histogram visualizing the distribution of the base_total attribute from
  the Complete Pokemon Dataset. This should show how many Pokemon fall into various
  ranges of their base total stats. Make the bins cover ranges of 50 points.
- 1644
- 1600
- 44
