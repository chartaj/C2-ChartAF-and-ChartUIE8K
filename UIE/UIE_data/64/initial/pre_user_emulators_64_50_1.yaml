1-1. selected_chart_types: !!python/tuple
- '* Candlestick chart

  * Line chart

  * Scatter plot

  * Box chart

  * Heatmap'
- 922
- 902
- 20
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n2. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 746
- 607
- 139
1-3. asking_user_emulator_for_initial_prompt: "\uFEFFYou are an expert user emulator.\n\
  \n<start of data example format>\n{'../Extra_datas/data/64.csv': {'summary': {'Column':\
  \ ['Date', 'Open', 'High', 'Low', 'Close', 'Adj Close', 'Volume'], 'Data Type':\
  \ [dtype('O'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'),\
  \ dtype('float64'), dtype('int64')], 'Missing Values': [0, 0, 0, 0, 0, 0, 0], 'Unique\
  \ Values': [10836, 6156, 6097, 6080, 6262, 7819, 10272]}, 'sample_data': {'Date':\
  \ ['1980-12-12', '1980-12-15', '1980-12-16'], 'Open': [0.128348, 0.12221, 0.113281],\
  \ 'High': [0.128906, 0.12221, 0.113281], 'Low': [0.128348, 0.121652, 0.112723],\
  \ 'Close': [0.128348, 0.121652, 0.112723], 'Adj Close': [0.099319, 0.094137, 0.087228],\
  \ 'Volume': [469033600, 175884800, 105728000]}}}\n<end of data example format>\n\
  \n<start of annotations format>\n['<start of the annotation list>', '1. Text Annotations:',\
  \ 'Description: Data-driven text annotations display values linked to chart elements,\
  \ such as data points in a scatterplot. They draw attention to specific elements\
  \ by highlighting their values.', 'Purpose: When only some elements are annotated,\
  \ the intent is to focus the viewer\u2019s attention on those before examining others.',\
  \ 'Other Uses: Non-data-driven annotations can provide context, orientation, or\
  \ editorial comments.', '2. Highlights:', 'Description: Highlights modify the appearance\
  \ of chart elements (e.g., size, color) to emphasize or reduce their importance.',\
  \ 'Purpose: Used to distinguish certain elements from others, making them stand\
  \ out visually', '<end of the annotation list>']\n<end of annotations format>\n\n\
  <start of data details format>\nApple Stock Price\nbusiness\n<end of data details\
  \ format>\n\nGiven a data format, imagine a chart that visualizes this data as the\
  \ final output you want from the service provider.\nConsider what purpose the data\
  \ has and the practical purpose of visualization and include it in the instructions.\n\
  You need to imagine a chart with * Scatter plot and given annotations that utilizes\
  \ the data format.\nIf there are multiple given data formats, imagine a chart with\
  \ * Scatter plot and given annotations that utilizes all the data formats.\nSince\
  \ you are an amateur user, your instruction will be partially SUBJECTIVE and NOT\
  \ DETAILED.\nAlso, refer to the data details to create as practical and realistic\
  \ instructions as possible.\nInstructions must reflect the context of the data.\n\
  To emulate a real-world user your instruction should be 50 in size (word count).\
  \ Do not include data path in the instruction.\nYour response should ONLY contain\
  \ the user emulated instruction.\nDo not include anything else."
1-4. total_chart_types:
- '* Candlestick chart'
- '* Scatter plot'
2. initial_prompt: !!python/tuple
- Visualize Apple stock prices with a scatter plot. Highlight notable points in the
  dataset and annotate key values such as peak highs, lows, and significant dates
  to understand trends.
- 710
- 676
- 34
