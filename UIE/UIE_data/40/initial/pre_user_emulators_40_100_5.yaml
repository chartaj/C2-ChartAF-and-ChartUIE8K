1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Scatter plot

  * Bubble chart

  * Heatmap

  * Treemap

  * Pie chart

  * Line chart

  * Histogram

  * Box chart'
- 1134
- 1100
- 34
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Text Annotations:\nDescription: Data-driven\
  \ text annotations display values linked to chart elements, such as data points\
  \ in a scatterplot. They draw attention to specific elements by highlighting their\
  \ values.\nPurpose: When only some elements are annotated, the intent is to focus\
  \ the viewer\u2019s attention on those before examining others.\nOther Uses: Non-data-driven\
  \ annotations can provide context, orientation, or editorial comments.\n3. Highlights:\n\
  Description: Highlights modify the appearance of chart elements (e.g., size, color)\
  \ to emphasize or reduce their importance.\nPurpose: Used to distinguish certain\
  \ elements from others, making them stand out visually\n<end of the annotation list>"
- 947
- 808
- 139
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/40.csv'': {''summary'': {''Column'': [''Unnamed: 0'', ''Category'',
  ''Age'', ''Sex'', ''ALB'', ''ALP'', ''ALT'', ''AST'', ''BIL'', ''CHE'', ''CHOL'',
  ''CREA'', ''GGT'', ''PROT''], ''Data Type'': [dtype(''int64''), dtype(''O''), dtype(''int64''),
  dtype(''O''), dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64'')], ''Missing Values'': [0, 0, 0, 0, 1, 18,
  1, 0, 0, 0, 10, 0, 0, 1], ''Unique Values'': [615, 5, 49, 2, 189, 414, 341, 297,
  188, 407, 313, 117, 358, 198]}, ''sample_data'': {''Unnamed: 0'': [1, 2, 3], ''Category'':
  [''0=Blood Donor'', ''0=Blood Donor'', ''0=Blood Donor''], ''Age'': [32, 32, 32],
  ''Sex'': [''m'', ''m'', ''m''], ''ALB'': [38.5, 38.5, 46.9], ''ALP'': [52.5, 70.3,
  74.7], ''ALT'': [7.7, 18.0, 36.2], ''AST'': [22.1, 24.7, 52.6], ''BIL'': [7.5, 3.9,
  6.1], ''CHE'': [6.93, 11.17, 8.84], ''CHOL'': [3.23, 4.8, 5.2], ''CREA'': [106.0,
  74.0, 86.0], ''GGT'': [12.1, 15.6, 33.2], ''PROT'': [69.0, 76.5, 79.3]}}}

  <end of data example format>


  <start of data details format>

  Hepatitis C Prediction Dataset

  health

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Heatmap that utilizes the data format.

  If there are multiple given data formats, imagine a chart with * Heatmap that utilizes
  all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 100 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Treemap'
- '* Bubble chart'
- '* Bar chart'
- '* Box chart'
- '* Pie chart'
- '* Heatmap'
- '* Histogram'
- '* Line chart'
- '* Scatter plot'
- '* Treemap'
- '* Bubble chart'
- '* Bar chart'
- '* Box chart'
- '* Pie chart'
- '* Heatmap'
2. initial_prompt: !!python/tuple
- Please create a heatmap visualizing the correlation between different blood test
  parameters (ALB, ALP, ALT, AST, BIL, CHE, CHOL, CREA, GGT, PROT) in the Hepatitis
  C Prediction Dataset. The heatmap should help to easily identify which parameters
  have strong positive or negative correlations with each other. Make sure to highlight
  both strong correlations and weak or no correlations in the heatmap for a comprehensive
  analysis. Use shades of blue for positive correlations and shades of red for negative
  correlations.
- 788
- 683
- 105
