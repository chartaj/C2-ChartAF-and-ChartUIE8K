1-1. selected_chart_types: !!python/tuple
- '* Bar chart

  * Scatter plot

  * Heatmap

  * Stacked bar/column chart

  * Pie chart

  * Line chart

  * Histogram

  * Box chart'
- 1131
- 1097
- 34
1-2. selected_annotations: !!python/tuple
- "<start of the annotation list> \n1. Shapes:\nDescription: Shape annotations include\
  \ lines, arrows, rectangles, and other shapes. They can highlight or enclose specific\
  \ chart elements to emphasize or compare them.\nData-Driven Use: Some shapes, like\
  \ trend lines, are calculated from the underlying data.\n\n3. Highlights:\nDescription:\
  \ Highlights modify the appearance of chart elements (e.g., size, color) to emphasize\
  \ or reduce their importance.\nPurpose: Used to distinguish certain elements from\
  \ others, making them stand out visually\n<end of the annotation list>"
- 917
- 805
- 112
1-3. asking_user_emulator_for_initial_prompt: 'You are an expert user emulator.


  <start of data example format>

  {''../Extra_datas/data/205.csv'': {''summary'': {''Column'': [''CRIM'', ''ZN'',
  ''INDUS'', ''CHAS'', ''NOX'', ''RM'', ''AGE'', ''DIS'', ''RAD'', ''TAX'', ''PTRATIO'',
  ''B'', ''LSTAT'', ''MEDV''], ''Data Type'': [dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''int64''), dtype(''float64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''int64''), dtype(''int64''), dtype(''float64''), dtype(''float64''),
  dtype(''float64''), dtype(''float64'')], ''Missing Values'': [0, 0, 0, 0, 0, 5,
  0, 0, 0, 0, 0, 0, 0, 0], ''Unique Values'': [509, 26, 79, 2, 82, 444, 357, 416,
  9, 67, 47, 360, 460, 231]}, ''sample_data'': {''CRIM'': [0.00632, 0.02731, 0.02729],
  ''ZN'': [18.0, 0.0, 0.0], ''INDUS'': [2.31, 7.07, 7.07], ''CHAS'': [0, 0, 0], ''NOX'':
  [0.538, 0.469, 0.469], ''RM'': [6.575, 6.421, 7.185], ''AGE'': [65.2, 78.9, 61.1],
  ''DIS'': [4.09, 4.9671, 4.9671], ''RAD'': [1, 2, 2], ''TAX'': [296, 242, 242], ''PTRATIO'':
  [15.3, 17.8, 17.8], ''B'': [396.9, 396.9, 392.83], ''LSTAT'': [4.98, 9.14, 4.03],
  ''MEDV'': [24.0, 21.6, 34.7]}}}

  <end of data example format>


  <start of data details format>

  Real Estate DataSet

  real-estate

  <end of data details format>


  Given a data format, imagine a chart that visualizes this data as the final output
  you want from the service provider.

  You need to imagine a chart with * Stacked bar/column chart that utilizes the data
  format.

  If there are multiple given data formats, imagine a chart with * Stacked bar/column
  chart that utilizes all the data formats.

  Since you are an amateur user, your instruction will be partially SUBJECTIVE and
  NOT DETAILED.

  Also, refer to the data details to create as practical and realistic instructions
  as possible.

  Instructions must reflect the context of the data.

  To emulate a real-world user your instruction should be 100 in size (word count).

  Your response should ONLY contain the user emulated instruction.

  Do not include anything else.'
1-4. total_chart_types:
- '* Histogram'
- '* Pie chart'
- '* Bar chart'
- '* Scatter plot'
- '* Heatmap'
- '* Line chart'
- '* Stacked bar/column chart'
- '* Box chart'
- '* Histogram'
- '* Pie chart'
- '* Bar chart'
- '* Scatter plot'
- '* Heatmap'
- '* Line chart'
- '* Stacked bar/column chart'
2. initial_prompt: !!python/tuple
- Create a stacked column chart to visualize the Real Estate DataSet. Display the
  'MEDV' column as the primary variable, and use a different color for different 'CHAS'
  values (0 and 1). Each column should represent a unique combination of 'ZN' and
  'RAD' values. The height of each segment within a column should correspond to the
  average 'MEDV' for that 'CHAS' value. Label the x-axis with combinations of 'ZN'
  and 'RAD', and the y-axis with 'MEDV'. This will help compare median home values
  across different zones and accessibility ratings, highlighting the impact of the
  Charles River adjacency.
- 819
- 688
- 131
